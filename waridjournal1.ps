%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: C:/Documents and Settings/Administrator/My Documents/GitHub/WaridJournal2/waridjournal1.dvi
%%CreationDate: Wed Oct 31 10:11:46 2012
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR17 CMR12 CMR8 CMSY8 CMTI7 CMTI10 CMBX12 CMTI12
%%+ CMMI12 CMSY7 CMR10 CMTT10 CMSY10 Helvetica Times-Roman CMMI8 CMEX10
%%+ CMR7 CMTT12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: "C:\Program Files\MiKTeX 2.9\miktex\bin\dvips.exe" -P
%+ pdf
%+ "C:/Documents and Settings/Administrator/My Documents/GitHub/WaridJournal2/waridjournal1.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2012.10.31:1011
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTT12
%!PS-AdobeFont-1.0: CMTT12 003.002
%%Title: CMTT12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT12 known{/CMTT12 findfont dup/UniqueID known{dup
/UniqueID get 5000833 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT12 def
/FontBBox {-1 -234 524 695 }readonly def
/UniqueID 5000833 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT12.) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 53 /five put
dup 56 /eight put
dup 58 /colon put
dup 66 /B put
dup 68 /D put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 98 /b put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D05DA0555DF933BB0
7B42D264831116C06C79335D519461E7B0E870A6715E3D74A08D1BCF86E3BCC3
A43FC6BAD1C68BD9D4AFCC06D845FD1F1E70D7A47F0BBCAECE8396E04591E5E3
4797F646AFEEB7DB548183F0B74C9BB6BA2AA04E7F5950EC8AE97C741D4B2C5C
A8E7A8DF5A36A30B5A7592D95E1DBC63EF33C92FE459792CED29E2B8B6919251
75EF62089BD7D44A6E1F9B62EC802FBE62B821DA1C3B2DDED45D27964AD29ED0
9FB7868F3A8FEADA87A8E42D52C1EB7229D7C79B60BDA263F2BDB025AE14A507
098FA274206BACFB4A0A7257D5998EE8F0FDCA79CB61DD1FC59DADD11E16BF02
ECDFD706CDA1E72054D4EB55AF7BA9F19955886BC0BD6E0E3FE3769C94AF3581
DFB2BCD67FE2892AF07E858A01280194D8DD7332B3D0A585C87FAB056C2EAA9B
5AD48D1C9F00CEF8EF0D1408DBE1C03D04B231D7B8D5D998FE0CD7EE19828EF2
F988EBF6DDBFEE00F04A4A1F4E1A55DED7EF3AACEAB5005F1962C724A017C914
2936E2E0DF26A55ACD7DD836C6035CBF07981C1BCE3615064F0540A1034C69B4
E3908E76EF8925D486DF0B4A8E1F02D8AA99585A7C31847AB9382F83880C1C21
C496AB2DF8E7BD4643B28B704B5F6B53429D3EE940A79135F5BF0396E5B46F23
42AF406C26D12BEA7A41F332AEB75DF43C15334CF4651A99F602036946B1B91D
4BB0D2E51C20216D892C8173241AC8FD15A37C3CDD8AB4FB67D8565AFA61C068
95E3D6E46D7C09BBD09428207D506AD43C693F3C3D787F6A5C39084AE45E81C9
830900DB50DAD10A17E118FB5E9680B5194716A788FF7514A1167DD1A305FBE3
FC1F39A39F5613D50934419B95A4A2FE1B6C18912CECB86726926F6B77B5C3AF
F38F85F974A2D2145BE010EBB4A390B842BC222AD4A0B7FDD882668C04C51F19
13FF91E7CFA0A0F4E99A1944B272E0291BBF3F9ADFCF3F625B87377AFEBD9F11
6385726E908BAB7D1357504048C0F5B266994CC60A09BEA9A64E8AC6A4272240
00CF0C50AFC2F783594DE2C907D4EC63F6431805A40EF837884510B1A8C7CC6D
FAA856E64BDB00231392BE88421A29705AC41628DDB7EFEB67FEDD00215CBE9B
19B4A3406A86E58F083AC9CFE93B3A937B3B748013866F0EE5D39073FCD88867
DE69EB0AFCE824D6272EB47FD123FC4EC0B2E9CFCE842CD96579458037F76AF5
163025552603A20B82A6469C877F399CCEF8F364600BC1487E707902114CF0F1
51B6C20EAF52647F52384E2014355252AE4AF1DE150D2674F352414850BFD93C
DB78AED53F9816BB6D6CC11D26BCAFEDF82D96BC36D25AE45F9C9BCF3961097B
8C98ADDF186788F7C5416109CCEFEC324FD2DF976CFC21F029256B808A4BD05E
25BE199A9AB78989B312F75A02B6CE33A0AA6DA6AE381117F31545545B01FA64
C16C3980A76069FFC49C47EF868AC4807F7A3E486A52A06ECA8A5D03C52F8F30
3B723039623F2927EB4F63CD7AA6BE56B9296ACCB89CE851004C8DBD65FCE00A
6C741856107CDE173A2674C775EC3DD92CD15F2C73F9C23B6A281B416C68BD00
CF15567797367A96202E16865C0C3D4F5707A2707A0B91038D33D32AE64DB118
6C10A73BA667F48D6BF3B38C96EB5FAC8C38B8C8EB4FEBA46DE38C0ACA9299EE
0CB8EE7C0E8AC2E1EE384B0FA6862E2EF263492120398810B53A9DAD24B48CBA
3A234E460CFE677A372580770A2267AF4B4CE42295E32F758652159C740E6FCA
2937F616D047A760ED99C09D09DDD3DF37377A5D2C820B2BCDF8AD1DFB826B01
24A9150FB4A778E8616994DF68FF0110EA617A2F7EE3457897C33276F304AB33
8B031BEFFE4798AC6FF38AB21BB6C0D10F1D6D2336CCC02306F5D9B75C54B9FC
36EDB8DA6FC231F49F4AD8192109675A4B5185EAB3298751393D0A253576DD2B
105245E9D0D27FAF1D1200FE75543C2FA6A4C8DE3A619675887A81A2F449F13F
AFBEF0C95F2A5B499BE1C8DF5FFBDBAA36E2457B245AD06820E20EEA74B79449
C3144BA4490CB4D7DB2434799E8E0CFB8729DBB1AAE632232C7781751862F695
3D8FF2F565BA683FF3606E682665612E6D4D303C8F04021D2C42B3B3FBF2E093
50D6027C9FC25DAC0A0DCB613F9477DD78A89AA03A54235D90CB09C246389F52
BA674AA289DD855B94E52711EC9A28F7725DDF9C15A3B541D1C1B46E72C10259
4994E980F32FD9BC012A94462ECBAD9125FA1546D264DF8FDB9832871CF3D301
653C4DA1D9B984C4F5DBC7CACDF8811E6EAAB80A32E76E582D6BC282A11CB9FA
2B31AB8D278EF8A26D3C4A4BAFCA125DDB4D06F9DBAA3A86048608068FEC1C3F
DDED2B2CA7A5043B3A46BFB0CD19A04D5C277DF6FA8719A2E206C381514C1E1B
DF3628C6897AA9CD3A0E6C59B52677C923156286107D4C94646BB350073143BF
612BFAFDADE04AB8757628A33925639BEF4B041A79BBDB1D5E3D7DE667093E9C
E835A3DABE597347899B0D64766042676C5D780CF9617CD41041D1B97EF055C0
EED6A0863B575D038D243C5916A7F12B559D24144E4377299AB649E4355644A3
7EB0EBB43AC23394C00543C9132F6F2B5D182B30505BE4B06FFB645DEDC2005C
F5A4FFDB8E3ECC09ADA0A7D656D9882937498DC600C5520328DC9A518E47F07B
6072193EA27461FAF7B3441DA5832151B8A712B05AF3BE7BFF6516B09F42B042
D626F83E5B9BBF8B6AE5FCACB362D1D923C31CA514004B4774FFDF772DE4C23E
9206E9DEAF0E0AF284284FDE68DF9729D4CB37A9EB9268F44793103C544A031B
678CD1555DF9E7A31D7A0FB857D125C0F8607219A13C7B0325EA39FCFEACE702
21F23B514B9700E3E6723F3EB355CF92D9E91A897F5C8E2D4396EA76E1413620
19FC36CC27DE8875FC5E89DAEF056E09E5857B393E920C1B16BA1E6D48601DEF
73E8B854561C318447F169B204D8FEBAEAC486743AAE5B4BD701FAFFFE7C10AE
724E4D156C512D9B42CF99311B0F75A2D7807A516B8A3F0A5097DFFD0D8E57A5
06B67B70595E3E9C3AC6614EC1D5FBEC00BF97AB47A3A8E50EED6A805EE96DEB
CFAAE7051073E86E6862D8453CBF229EDAFDE8C3F687D48D9AF831AF1BA13697
4992409F43AF8A848782A72DB78658ED7B04C75D0519F8CE15E9ACA928C61F56
3CEE9FDE119AB9FE085F620C9598CBA28E02BC41387536BC4907C1802049461A
37D59861EFFB5B0A2040B8F9453CA9A30B4A550085E489DCE85DC25277E37EAB
66CB4E940DBFC8936786B41A59419ADC53E64774AB5D04625E3A769FC7BE31A4
CDAB514DCBB0350440170875184E00BE55969193BCC21AE2171D3B40694AF075
7477F870C235463477FDCCDD077ABD8F68952224A7E1036E4ED0F6B4AAD8893D
D8E1A7E60C411A74F5C07F20B4912DA5935002FFDD1816E32674D5B50BCC8468
7A91D9CEBE8B4897FAA65EECC27610F4E1606F724EA770A0B657BC0435D3DE11
2A7B8C60FB74DEE4C2C523376A91D9F09ACDECCC837D6E7346EE004CEE7941C9
D7F238C9543C989A39149E124C564CFAFED6ECC1D44648D5F9498CC16F7E40B9
27B3F499294F00065448737770DF4BBEFA831B968727F19C5A912145CD3BDE3F
92D7C27B61C32171B08D04EA7E1B209409F557B177354C5511B8D76178ED552B
A73B5DB9B7750259104FEFE6A84CC294FEF7D18FF3F78AB679EC6C2E9C2048C1
F7668A87E364CA5F97882CC0222A448DB19E13C06828B7AE0248BC77FD9F0B2C
D41DB0BB04231E67D0029D914E24BAD717992EEF0D8AA1B06CB23E7ECE9E5FA9
926A40AB0D5073CE2A53F750B0377553CC48BF723CFF957D0F1B5386F3C17289
108C1951A96EEBB92DAE0659DE9B80D8069144A1699C9ACC4ECF0E52E6EF767A
C17719D7C8709B1593E29DE7A258534098816F758E3E1F6C5AF1E8F7DB268B14
2F3F7EFC8E507F7742B9E27A8C015347D05C3D18B54D581549355465501AFDD2
A4786B7EC9FAB75968F3A3E701A4A34C5A51D5C4519D46F11BB994287ED410CF
1FAA36899AF1D4270D915AF511F795BD5621A8E9813A0C52AF85B86822F1B8F3
E604E8702BA6A52A909B1E1D91520E8F904FF4D1A1E3A889F936F323505FC9E5
76F031A3157B3E89DAC58FC05E5DBB0C0AF3762F2C7CDF818EA4A9A5ED87DD5E
1C911C2800A7B878CC5337E1FD7C998B963EEA03BCEFB03C2BDC4619DED62231
33DB48710F07BCAB55914D02E02D021F5E321AE1EA8EB4E0C92144BA06BDEF5C
884C4DD00594953C05EFA4C3DF3C9A89343A3AD1D072743A9D080591359DC5BD
DCF1D0DDCB84847CA8D956FBB8A32C9B0D03A2AB9990AD63C44A4E408D68302F
FA791C6B4431672F4237E8CC6B46EB025F5980B2D0F4F1A1432F9DFE1705EE05
E97BE0C214D56C26E4EC86F8939AC7CDA9BAEACD277A2464BA4B1B167AA609FC
F9852EAA966F69C22C4C26FF27317E974E0776C9D533AE9C7A38DEC1B5103587
6AE60E4A60B70D58552CBD78422F4F6CC6C799E3BE995945DFC0913A9B80A644
B19CF3A12B86783EBE6705753E36FDFB88BE3C38E06E376282C9E7D4F38BEEB9
07F84B896120E44846807591A719E981A5E04805C63A10ADC4BA785067A19128
66B65769FF4EEEE9FEB742285525BA1B2362A63F579E3504075AFDC71FB0DDE6
222A272772F988825FCEB94B6F676A6AD7F9E120748811C5ABBED146E1FC0322
F9FECB8477F951E949E4A6C801A00367DE3703698133B92A138079E0F7F76CA4
8E894356908961EED0C8B904D9FE0E79228CC0A18280986879D6314EC55A8D01
855DFA449AFED9607CB951B36683034A4F6CFFFA399A391F2E48FC8180EA1336
DFCA9531401DDC313690F9AD486967FC98A2FB9A6D460051EAAC3C2DDAD2F3D4
18B9D3DE3BA3082025FA6EF9BE74AD3B70DA4136EE0322B4954646B0DBDE6386
D640AF694BD34993459F0B7E46301B833E9C76ABC903AA180A3BCB9192722CCF
D7F2EA043DEBD103E038CAC430751023631A16C6DF60F6A019CF465B92832A79
C22AED7D7E840E90E43329CF5E03CB3419968ED87877D5A411CF1607074E842C
2F576CBD14CC2170C50FDA370D793DC538A850A1017DD65C92161879B8CABCDF
1868BB703EA2A4F417B3BB406FF71FC4DB99B5B60411388FD7F8F9CEEA4338EC
655CBEB0CBDA9943F68607C1F8BB2E2B7491EA6E3F6208DC60CC902BBFA86630
3C3C5563C891A1462D8ACC1AE831F7297208CDE2A1F1E6EF831E208B871DA52A
560B3ADDCF52098CBE721B86FBFA24F75CF3093C3CCAB4F53B61FDBB3539D6BA
FA86F190FBCA5C4D0A4C309C9B4F95F4CEBA0E361316896F0286A5AAE5C897E3
74FF32D14887EA0BC7887CE8850BCF12BF60093F21BAC8FFA8986EFAC79145E4
C7EC13DB3AC50BA998DAFCDB8ED5B93E4945F08AD8D53F8BD089026509268185
A72A82E424D37CBFB42AE8F1E1A226DE610767099FBB5340A70B8CF465B6A874
5C4798BD27F5625D319F173A65849ED352FBC771FD1CE6C57940E0DB71902DDA
385EF5F3270CBE88A09D1A69EC02E3C8B82F349291FF31C1D7B105957D38CEAD
83FC2D4A9B47E079667CABE3FA804F99DF4C5F32F620AC3697B6B32BB86A28DF
B0FB9AA8C0962ED622A6B1AAE1D9E8D2744EFE51763AEA9F1A79E2E3E7617361
4459E41B26992EE67E1F825F992874548A12D6591C5B74BFB6995342CEBB8E90
05F4A1A90DFBA3519FF161782B1F29DE3E3C1C90AE36809F6220F3E5E13ED1DA
3B692ADEE403608ABE08AB71565F2386C72FA46BE5AD6433CEB2E178F6482D16
BD8836AAF480FFDA4A92AF41A22A364B874423E7F5EC55B43BE8855904212696
7BD5C2B6CADF0377D8335714A55601D298C1C8D980E2B0CBFE3D07771D11BDB8
9F17B180C1DFD50B4AA7C45A9ADF9E761F19C2BCC97B7EAFD361894CB538E3EC
8E0A23F831753DF3AC3F4301C6EB77AC378446987B08D21653A8EF42FD2D1936
AE29EC664B80B01B4641526757AD8B744CAD35E1D7B0B36A6A6D9BACF0906A02
91BF6211034F270F27B9F3E98BB2E7D978F220A43D838BF19EFE1E0ADD31A081
86AD271A57CCA35E50D83301BA053B5CAA3FBCFBDF6159A762A329E11E0A61FA
D0ABC1BD03B17D90808D2EEBADBA5D22CE3CFD0B498D2F989021651BF0856529
487405565943D935A894CC5543038D270B3B7ECCF39F61BCBC961F509E099E20
F766AF584D415520B3F34D434E659E14C82B6A55BD38C0111EEC2F404BCBE6C0
89A1A5BB88B14392D30B799488EEDADD4B6647ACF40C05FE9C768696039EFF20
3361CFCB76A73D2FC7480CFB49BAD744053DE341A1B8D50E985F15B6FD12A5D8
E240BB7BCFBFC0D3FB8EE6A0A8BF623CCD701BC8E456B54D52B2D8D03A04ACCC
2983EE92FCC90B2882FE7F5B540874B4E1F79651B8557A7A431AA43C3DACC9F1
9D2C093046FF8E3E7218070FF0DB8C6C5559902DAE84E2D66CA7476903A0A949
D7C238B10045290E7C2E185103A74BA775E647DE58DCCF0A821AF25422C740B7
E8FD01E9BD2D77EB5F0BA8FAC7575DE7BA35B34EB84BD5330A3B3541D1BF97EB
9FC17206989E2A4AC53445ED1808CDA72A932B0B0FA129F489B09F21903697C8
0F8FC806E70DCA9808FF34E132084AA3E2EFBA9EC7035295F13F2AFFB56AF79C
D1A9B16251B7331AEF5935216E0C881AC956481768A8D38CF2799FCBA913BFE5
251617B2FB5987308C422620F51F425D8A10F2F289DB43AB5FF82625266F994C
3FA3454B79C9D0D42DDDF7E9F99D1F68E15CB134C7B155C08557BC57D469B142
BF2F6B09CED9CCCA0BE64B6EA43F80E27096B595D1ABEA928F0CD703E8BDA356
25F538052139B4A4651131565D195CD5564CAFE350A1EFF852253299A658BCBF
F5F99D1505FEA147D7591F812C272C20E6D93D90850ED73B2CD149EE791A4D82
32C51FF0BF391FB36FAF175AC5677A0C946F33BA01AAFEBF05DC1A7451603FC0
C37B744EC66AF60B3A6DA0E547E8DB18DD8BF3082F5FF12FC4B3E12F753D8D56
8576D6A6AA2283EB213E00AFFC328C3C2785751155A947924AB57B626C1D41C6
933C2545B4A61DFEEBEB014B6390AA7BAB11CBE3E4294BB220BB1C5832382F32
5673198935495B3E2F640F1982C21CAEF75182DBD1DE5659639825AC78C0E95D
AA9745125546B35E281EBE573656F5F03E8F6789E580983D3A9C457FBC56459D
395E58F1FE71472DDAC9226F56991E98EE31477CDC75F85503B4F3824B0990D7
1B77601CAFA91BA3E95BDE4AB8FAE409106372B2888530D2C54FBB3E66483E8B
A6BB45C3E14CD8FCC72A3EF28A16AE5C8F05427ED11DADF33CF59FCA2E136378
978FD7F4E0359EF4846BE9CDD60DBF55A5FEBC9DCDB74AC84B8760A88F3A2C3E
5AEE19160014F322901E8E6E839D65BF2BEAE1D0022AB8E3C873C2259E363435
6754
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 15 /bullet put
dup 20 /lessequal put
dup 50 /element put
dup 56 /universal put
dup 100 /ceilingleft put
dup 101 /ceilingright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE105BF5F504AB332FC17E568681
F423D1125A596766BE58ADC658888DB39BA74F67CE0E26C392220832FB036E93
7587E96684BFB78BD035F54AF71B2408241AAF548F996AD440155624B3EDDC79
2102EE58E1E27EAA0675F1F13297A4CAF514CB319E58D424A820B8F489849874
290FE1B832EFCB1FDE6F5E4384527F64DA7ED34BE1221A06A800C42F01AD4743
0A28FD5CF2570FC8E1399E48EC3B4CD8612743C8EB8AF6D8424C4DA192CDB43B
51BE93C720DABE9D5862CCEC352E059B25D1F131576B9FF6E6D1128A1B8A845F
85BFEAD5C54A4688178E4CB3B5C7D4E3506788AE9C4AA174EEDEF93234184590
D0E15A61CF66D14D63A6D9D60BD5AEC4B4713FB09A220A308D5E1940EE1E6132
5A56554D946738365140A3C7CBEAC69BFCA578E08063E9DD92BEA89D6922E058
7A07130D78BD3C2105AEB6E9BED9E295422F3CFE0AB4740C94DF3DC4449BB642
9FE2FDF43D0DF3764AC0929B928B51AFBADE4F07107C1943C82A6B9182799465
7064255432A85E083C31429D661FE9A2493B80AB329EAB17CD0A906FCF896D41
20137695A8BE948DEAD90EDD06BD507A31CC1AB0FED4C80039C4D6D869304DDE
4B940D534B390D53DFE07CF114D18C68DF1CCA64E069D1D895245FA34140074C
D017ABC64D953677FE2D39310F3D32B34804BA26086BB8E94FBE6F837FCBE523
D8CB5915FBDC1C776F0878903050549D596C7A94F153707E2FE6C2903A80AADF
56401BA38404E69E4173D644BAA9CA8C930EE3E9CB8232030E8C741E524BEB8A
DE41B217C3403FFFAB5C8BC68B9043740852B419A756377651FB28E0703D8FA7
4207E7DD7FD9C78C9EC560D5323F3A440AE7923317C0D3452439D3E1156BCC90
9CEBFD907F4395762C289D7B35A97E6FB805DD6BBA415AD1A7C7F19FD17FC11E
A99EADFBEBCB5EB8EE7AB7BAF65F76E4C337DCEC27D133CC5CF4C9701A174BC3
3D9DFF820A064AD8A66950F96B1ACE1663D68C0C3A76CBB8AA7A547FAC55D7F4
C6F98B5B86A1D1309CCC4C77655E4F0FB8AE9D5EBAE59EFCE38DC1137D8C7BA0
5282ABBAE8F51A466E55082FD27F9839174036833A0DBBF012A24D6E2D530B49
01ED8CBB53371FCED5C03D000A52EF3AF180D6661ABBFC311692E07BD4EB1B59
06B1182CC50C10A9B2E81238D2CBE4C735DF2F960515BC9AE754BF7F8203F034
C505DDF629BFD713CEE1435500B17A239A1ABFB275C45EAA4A49CC15A0EDA719
2703B8B52BB7171A552D8833317E541FB050570F06583FF1561E69404E40CC8B
062E0BC7863EBE1ACB21472E6C4884C57CECE0ABB798A98D8C2CD3628BE6D43B
83FB219AA8904ED123731568649FFE343CC4B9CB1F7EF8A98759AACB5D383E05
801FE70E0246E1CA2041EF4A5AA888FF380004E6E86A758C153D0CFF55AE77B8
68E4A6C5A854879A1805E1464BAEB47230DD1AE5E4FEC4F9E11CD85F321650E0
A8D4F0467A950F89FBBBF6E0B0721882ADB9AFDDE0050364E3A54FFB2290CD91
4A8734ED348E15925883
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A447D5FBE86D961AE4D4251149F11C4BC269E10B48E8C42DC2484EDE87
6540CB8A5EA2494148D09CC9D5014EB73C29368A3945AAA1BA4C17BF640D2A0D
414293480FD600A77D37471828C4645C5A4AC4729F4EA76FC946810B4968EB0A
719D8F3E61D2B740AE9A33E9F02982A13ED4B6ED0C6C4A93A9E9EC045D0CDADF
DC01ABAD0BD95692907C04F06F06F1BF6259C8E71099FB64B4FE263D06C5854B
070C8B864D8ACA6EBF440DE14DA34A2A548C9F1557C70A4D718F4F881707851A
6DCC39BD8791D806F5DE551CDF8612C7EE6707D554CD826CF352CA634FCFAFC7
232F32B3F0EE3D2577915BEB212005E06625FFC9F49383C9C64F51B6541F6AC6
12D2359547103898D05E52CE54B46835
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /bracketleftBigg put
dup 35 /bracketrightBigg put
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F3DC7D72BFCD70D2998C697029D149A6BF560D
B13E1063FA336E66B267581833A721D1F474D7361CA1D4486374766AE5AE73CE
CEC466945CCFD5858A65CE9BDA782DA7DA169A70C9BA62B670BCD7A20846A3ED
DABB0AFD1758900234533BBBDEE3DEA571145212281A2810C10C1DD930315BD2
407C3437DA23A3DD24B22E6F6B8267ABB7A061EFCC2D1D92596492DF58D37329
7150A1BDB84412BBA676742A63DABE53539D2AFB66A5ED48A8B11AC5367A09DD
913F9A38CC89F130208E8E2FAC46AADF28388FB6216D33F372A022C9B743D065
08559683937691CB25B0BED9F47B602509BD44228EDB07A73CAA3186D5A5C3D4
51F1104CC9CE437801EA56E16A7A1F089E75C486A52094A419725707CBE1CB34
76D65AD7C6E9C6137FCDD03D47B0A5F3382E627E511A6352ED82EB136E8C3936
2CE15852ADF9E0B588B9D44666D0B240F64F029F030C4F8CDEE5907D51475B94
019092C468A48DDCAB4A79DDF0DC5C95F67A21C5EB4F4D01948EF80C45B32377
88D4E3EDEC14897E05556F5E0915BAF120D4857E3F034EDF06E8881EADCCF519
9733A4D1CB654E5B8756732356B1DB3B7EEB8C5C7B7D26BE8459DF534BD9ABC7
39FB107E673F5F7620DC557A55F8F7FE488F509D27888105E7B2472F2C6B0582
6A8514D71D049F4C022D72809147
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 97 /a put
dup 105 /i put
dup 106 /j put
dup 109 /m put
dup 110 /n put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA4621E84351914EACF
7810F41CC0BDCAD6165182C7040F052C34D073FFEE489549EFEF83111310B3E5
F67EA5449D3D81DF1FFD64AE0F1A760922FC629FDCC6AB0DA66CC29665BE386A
4DC43CFEF3C5904356B7B2EC0AF36BB4FF6A994C8158790674A8EFF54A36B7AD
8C8B833C1D1FDFEBD7D39122BA602A67ECD2EDE9D35C2628EF1FE34B2CDDE154
2247242DB2541C5FD49EB8348536B83A67E718DF66A627D7C7622F22B5D3A3FA
5149B224F82B72E4F2A1B22BD6FA7018B45A404E66E2C6B96476A39E5D330AB2
ED04E2A7FE38D3A88B439E804F390F4B789350668D3056F4F2294D6CB67363BF
702641FBD29631CA0BDCCC75E5C9AF9BB470D331B02611C0B5E770A3ADF8D515
F5649261D036EC520F0B55B5AF9FFC5A3111E6C9853846C39900A4B6E2B31088
3EC7BD3BF3C458343BD0E863A923E82BFEF432B708025D4B00EABEC981DD9C23
2D950C2AC011349AD5BF26E6D8525E62A2609C03838771849BE6F2EB4E1D1C5E
CFA2D998F727A5F0F5BEB3DE0EDD5C5AB4E679840478F2525D79D36A85FDB677
FD2C5567AEAB775880749704F64CED9073320406A368A0C8A524D994F2FDA0C6
00C72833BC1D776097B68EFF53751C646773A4D91E23990A58925BBBD0441A2A
87EC94208472745CAF7E8B4065FFFC7771823A73DA5848A19B851BDF2DA47780
E701BE20CD6D422286817C25AE6AED3AEE65EDD57A9411B6E88C18CF7BCE1C06
AB63E40D645715F228336A76D7B0CCD5AECE5E8F4F8346059337ABDDCBD49831
33B8B12E1E7E423444833A31FFA44A216EF447E3FCD6C5FA8808500779A7F1F5
D4F2779D648584E46A984B29A211A2F8C48234186319E2E67A294BF0ADC2E313
589F379BCCA13062DBC8F500E32A78AE7B01AD86EF3509D28BCC10DF5A42B85F
1B1364D44B88733EECCA7F03479C472DFCFF27943D00B5881525FD9B300F52CE
51FBECF83667E1161566F1A9F251C6789066F98154C5515DA91E7958441BA16E
CF39634683EA95BB992D7C0809700E44E764D1CBAD5E5A1E79555B0727B26059
E1F64FCC48FF8D25190E8616D61609F020AE6462D9F1650F4E9B973C5036D800
CDC79BDCB0EAF081A09F2364488F5BB259039F4745C3771993BF9CA48E0A9368
03103A57DCF9154FCCE5221DB3DF1D04E18028FB37932685F77464857EAE789C
983D8EC70DFE24D52D0C60F074EB54C52D84FA788F0A1898D5C8F0267DA48EE7
86A77739A7853E423E627448CAAB62239743001F14C84722E23EE09672078E3A
BE7AC7539FDD081D6410ACE61DF8E96BE12BA3D94EC9B12292DA61EC607E3A85
E615F559E930A1134245CC6DAAC8005F1CE8C28AECE17B6249EF61029053A05E
96C7DD7994FC98CE02F28F5B06A59E6E7FCF4D034D7263FE100414C374EDC78C
5BFFD5223DF5CC6A067EFE880871C166CD390ABE99C86BCC200069763C7040C1
FB1E6119841D9AC1AE59E1454B1A0E52E352D769E7E2A7174575673D33D4D9C7
508CCEF36294E853C99BC03409C7C4DEAA5D17FE9F309982171134B636C8B1EE
12A3742466210B444937BC138CA22736E907FEE85555D6544E39F127D621BE0E
AD9433839DBD33B855E732CCF5D13CF713603334CF94A2E3404832B06752918C
4F4BADD2F5A8136C4842177BD673A95D9D009791AD030083B6057955E3848FC1
42A141803D348B5AC785B3753DCFDEFD6DE20035299712CF6D8912B464A103FB
E09F08608997EEECDD9A06C5A1DECFB3CB9483C351EB612E9DE0E8026BB15EBE
14DFC8D803FBE0557D6FD26AB187F79DB8E6EA92549C811BA320C65D16D21CDF
07B8C785DA6B21D11BF1BA0B1825AC5B1E4D41CC1585DF0905E1206374E5C610
185BC34AAC6722C15A4A4063A6098D5ABA04099F5644602E7B81B7F17C15C9BA
A02D4207429C40FF0F9CEFEAC9FB8718B738CC22DF1041360F598A63C0B86636
33E8B00E1B5DBE74E72988945013F11BDC4F9BC8FA2E881A04C4D0DC110C35AD
DE3464305627F6B8EF2E5298A1B7CD2F19BF2BEAE0F694F9FC91B864FD001785
55857A0CAD7E815BE0F2677F59168EF63F5F3D14DE8E1CB46F812EE5DB9F2AB4
C8622DC5EF5EE2AB267157264C144B2E5D5D3C2B81F63D1FCB1215781E739D38
D4E40C97EFB2E6D8C3A08AC32E38DE159D0106566D2207987A4EE5854DEB590B
8D3B8C1AAA6671F739B7DE63975A9C3C8040A2E9A522F9875E0F9E6DFE1B91B1
D1FD546F0A6742A7A5D2405A8AFB00F3A8E80CACFCF3757B8B422DC763B168B3
0FFD30469905B7298C20B6F101589C0E6D6B71BBAB5A9AC259058100082B7D0C
EA22
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 64 /at put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 122 /z put
dup 123 /braceleft put
dup 125 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
864447F6C0152DADAD834A432D6E854CF5C0699C00D11582970C19B07B9D9390
52B29327EA0B6468326F9E6BEB1B8B2ABC98B7DB4F5159A408C77D206AC61ED7
5547F61F66F43106A015B4BECF94937CE559EA660C9A7A54C91039E273FE0FD0
0B499E22B8CBD28D1AB371BA0BA4C3FC5B8B10AC5362EFE6A4271F2B6A9F61E1
A4AA6C03AB56400180B75A10B31E330BE53C3001FA084FA32F9CF94CB93E36AB
BD6939CCD8052AA781058317B975E878DD5C996A014C998B467A6F508B03D946
5E2180A40A1C23A9FBC0897F01D7B319F8FC35FE14F2CBB58922F0503241CE88
F7E280B79C98498B1FFD3230CB86CC47C82291767018909002301E532D04D050
46DE4B8AA759050A4CD64E67D56C072AA1101270D15AA6590DA4E9FFFDE23B9A
FBDC82C3CA5421C9A52A0E0884479EF4ECCE39B566F1E106973F1E464C6B2024
2E8CD67888F92E655BA87F5EB2D25EF9A917906A30A7667D7C591B61DA5CD122
9D99F82F36992191A5A26154CE54AFD9DB3C8E9EED4DDD03ED2E42876A4760DA
16D3D24B402F62BC6975B78218F3299EC7FEEE5B8D8919E0D1E69B1FE209C5F7
4C458A25AA306A89B60E01C8D8AA2B2A13F17B8EB838C38E8A5608A05FCC5A87
AD774203738D9D144919E98321C5CD901ECEF7777382B77264E93192E37A07A6
CA7A0C7587802F6C66C3BC6E9DF45A22A24877E4A44990FE711EC7925B7D350B
4BE346E565F3EC43199BC6DFD6A461F7C133040301738DFF4592B61BBCA3F5D4
3BAB1110E992F8D6ADBBABDEB6E28405DA733CA0D6ACFF250B776E9BA0BF1ED2
DADC7E6D46A7EC7F0CA5FEA7ACFB91837C724116ABA03F291FFC03EE87551033
E8D6A897962EBECE5D5A2C232286A6ADF877CDB9AA099118F837749BF15B2B38
93392703B962DBB782BC80EC2601241752981631B32A873344244C3F0178042E
6585F52957717DAEF3986D42C9BA0FEB465309FBCD5D50D1D84ADD3CD5EE1CB9
288F0AC1F4E8204B23F42FEECCF35182E14D08DE0E3BBA9399A0F81B43C52F5C
064CF68D9D436D378CBE71422FEDB09EBE8551C00AF2D8AE8F680D6FA4FA0901
8EA13E7145AC5BD6439930D168D60FD35E01D6C00DF5F2109C43785B93336E93
9EB40A8E211E11EE1C982571426A9D9F41C243625E238A6AD4A3691DC0A61B66
4FBC40BCDE6BC5813EA8EA2805D162970A39F150893C468EC8FE9372FB5BC272
4BDD1544E6D12AC83C826A94C6EAF95A41421233E796CBA94DB00652C28C6353
79A0716AEBD44EECB32949EEC57EC3D3F5B690C7C4181757961D317D2C3BFDF8
CAF8B9C8FB9A42DD9EEF17419156185DA0B476A04A3C825D238B001B405B496D
082A3CAE021B9D7580B45EE76FACA78BA872A266C2273F2AC86AEC0F80EB276A
F5A8410A54FC2AC18D781CD9AC9FBF383B3364B58D57CE7F26626D347DD94AD6
D2B8D4BCB2882C53BDE88CC3F4273C1D65E9D8BDAC9197ECCAA33A91ECCE2774
B6ED9F475C13A91AF5BAA7AB8DE0B4489FF880E1473C6E028D62D173241D8DF9
D73673B39BC30D150DC60D8FC2170690DBA4D684992F3706AF1F3BA01BA20E74
E4B3142165DA24E42682C3F08BA2B06A7BC1D6DAF7C6CECF4FC90D63580B9DCA
D8904BA5890A643C8AFFA53FF8517F2B5342AECDB38BB26878AC1B8A0F7F8421
138892F48469BCD45C1782F8A664335F67393F4B56877DD8BF4F9CC8A1825B19
9E11CFB272AFD4ACCE30841B9230F445B08FAC37BF35A1DAC2EA360E8B79422D
89A90963B539C93D6B5D08E759E14C5B66D6D0C42A26913DBA29C2436155FCDC
A3E214746FF94EED6BEB9190DF3F07E2D62197316B295F11CFFB5B12FD40331C
05DFE4D2F90B69B16E802FC0BA90884F55AF936438B652716AC22772DB7D5B3A
765D877395B50CE31A794158E6028089334F810F4EFBAAF7E6E21F85293D57AB
5E34F05EA975E6CA108E6E69FC2DA21BC33F871D66D40597E4F20CAD0CC21D2C
3A11820D3853812D463E69702266FBCFA896799619B51BBAF11E4CAFD98995E6
33F36355B225F79DC36C582C274D0073568AAC3C47550B39DF3DBCB2599DE29C
B7198F5E92E65523A84653CAFBCDD6419E7547CFC9E196F2F468FDC75E97ABFC
77F831D68BE7242E8E9F3D1D20A904844F71F28513592B2818D77CC02C318656
FBC3584D57470B2D3A514C03BBBDFA84C2144D78776B1A1D36B43A7DFCF5FB13
840016533499F1FC77504661892F60E5A560333458DD227E67353330DF71629D
041E4669A0E03C328549B1C7DB17FD7B8D1D17CC3B3F15EBEC8DE1CE824F5141
CF1311D6F12080D7DC5B971629896BDFD8E6EE02E6582BDFB66FB8BC4AEAF61B
C56910CF1F0EF468C187521A5AE8984A797B9910D008B8DF64C3DA1E32411A23
D9E02A0519CE3509AF240FC56E55FF0EC9BF7AB97E87830D7BABF2D63B62006A
0907E9BDC1C1310C849B7A09D3B0368B26F18B76FD74A7B25A79C8119A84AEAD
19B57317094FA006E3C548B81BD514DB63B73728C3E5D62DD2A461ED43798760
340A37C59759C5297B1DBFE5F07B577E8AD78B4A7FE006E4956D9AD9CB2F7477
D883B80D0C60AE19455105F6E2E60A928460EFC6CBAB9C0E53B1A21907D2BB33
301D9F9C23188794FDCCCD945DB52357F888D8ADC89075CE41C043E8E0F01CC8
2909ED7F41116CB67289099D43DE5883BBC650BBEB9E17AA33CD39C509D05439
E53527FD6CB6AC1E40DA54E3C7357186B578B197E519444446F0E24EFE64C0B8
CD9F9C99FB8396391897287CF0EDA608BAA3D77500CA5C69DBD62D5BEE84D14B
CC28686D57BC14B8F92E7A5AE704CA32E0C5CCFA6CB765FA21C81421CBA43134
FE5327D6923C2FA546DF25891BA9E30D1298BEDCEF988C82054FF0DE25B62018
E1EFAA30A43C995DDC4D76AD9B77C5F243BB550009AB2E69290EB95FE9C496DB
C6C347A3D401C5DB0406072CB24BCAE2C24A6006DFE7FE2D948CA8D28E4D57DC
5B4839CE0339BF6BC5B314842BDC50C178F872E713DF2AF6650B41D24098F35E
546344CF01EA284995C2EBD0BC63C11A43AD341D891F9D46419B7ECCC0D86F27
15302A011831C18383C2601D5D8CA991B3B8680134F0880914BD0EC73F381FD8
676D2CB4E680ADDCDE3CC4C78405155BE26E485F0E39A8CF0C08F2DC7AC168AB
16D08FD8DAEA735AE36AE3B0C2A3890E939BCC686BB3E2968955BF24537AA90B
3E59C207CF142384460853B5BE39E3E821FB39872B36FF78C2E9F0C26BDA9045
6018E3AFDDD27E261A04667C1A2F6BDBA470847D2800F2FFA57354EE3917FCE0
20CC9867D25D2AE336A9777E842905B73D4FF53D094DF517082507D67668DE44
8A9E1DA9B74939D30598F18CF37C02CCFF21409E1321A9FD66CC91D0C7772D01
E81524DAD37599C33368288AC566B61D76FB80A71B26E71BB0EF4CE05358FD5F
334D0DD905A4EBE3617E937E2DFFFBC99CD0E1D18CA9026751FB19785B46DE45
201342853E37A57B5E04B0F12E307AEB97F998DBF94967C0AA01266891B4A82F
0845CD07376C9F5B44262C79F663C954E02FA7E25D020391179FD99541806F0C
9320515F072EF098C1328B1CF9BA62E041F2F89BCB1F5E980F7F99B37CF2BC28
6772D1AA3DBD8C84D0BD3697FA32526BBD427343C7AC2EDEE54C1A7133A977C4
D8A918AA986E382928E4522556D16C34A779C98B29DE628872ED4C82B80404A1
EB6CC83BFF194E598999710368E33D2F1810D2334F2C234A17487273969913AD
25DD8D8FF61659358CFE83EDDC01F2DA86199BADBAFD6D66071772FB2B129471
5D2D9068C78881B7ADAED6338ACDD1C3969B04825F687E59F41120ECB2986EF5
2A0400533B90C78606C0F9A2E28477FF4A57F16DD27597560545BB4C4473D288
98B542A339292E3E1E1C2F5C0F12D1823811E7D398C972DDFE5750B900032A25
8060C2D2E735C72550E4D7753E33850B76C1FA10CAF4C5545AE11C8BEADB842C
F5B09A3837027E879C6A745BDAC4A9DE384B124505599652074DA1213E171D13
57078ACFC7F05F9F250EB498F7F4B99F491F1BD7C795D29F0E5575E672E4297D
096644163445EF4728636B2FC519CE3E39D34386A47FC38029855350FE29AB78
5AF1209BC5C3E7505290A371C6B9254462A42F410D8754D31E8F99C3EDC8DCBA
FFD5B32003ACD9BCA74B25D5762078DFAA707AE5F329CCA2C5462EA92B20F614
17FA0AB10C9135E63362901C02788BE21BB71C771798361DFC1913E34A620CF9
55FFD83693F74972EB4DE040B433D8210467F4DD2F22D363369C9BC04574D6CA
D411B76EA85AFA3004648CD3D8982D2890F5A3EADBE35C5240F423A0C1091122
6D2A272EFC6C5CEADDE344E0FCB436B42CF978E71EFC7C60D0966B9391020D84
8007B9683CB4B2BA8B7DA47D2930FABBE0240B64FDFDAB5D6A73590DA9125A3B
90CE131DF56316471B6925591996280D1DD05E58A3A4E059CC055670047E5E8C
E47F41D593404BE24EFC66E82AF15669AB664C3C82DB1E3E052FAF5270775E7E
C1673318670E1C7C6983B278DA8C99E57EDF7BC102A8A4011C7CE4898094BCA6
944C9159A5ED733494180A98574A136D2CB86C46A7F416C0384534BB63B026AF
69DEB459B8B473EFDED3E9CCD4666BB84810A0CAC7ECB8CAA93362EB3E3AF085
71318C0A356D81028829B826C58EF5FBD456EF7855D274B8644412CFCCF60519
CD7393F517E514B1702C9C8DB627457C1B7A63904B441FABBE28AE9FC3EBD321
2AE7EB55EE2F910F35A5D55D2AB7227BE2BF02F78B35C519B70811E783E13AE6
8D35110EB4209AA15F2D64E6ACFA6F41EF4C00E936A28378D5955C2CE254BF03
426F3E7B0B467D4484D44658011F79C326600A502FAA515D8166113EB75E816C
DA1A017DB92685C4CD562000456F0488B4D37FBE1AEFA192A39B5A17B0E95FC6
F8E15D53015A84CB81BECF6AA79CD0CF2EA31DBE3030B591186AEF971BBAFCFB
C56967A12C023C59DBF59AB3E83F792D2D6B2DA75529F14F9A35DDF3017F3373
37EB83328DC400F4CC30DF20F7BF1272AB34B5E74BE2D56AE554A279CCE68C68
341B05C935C2E77B0AD05EBBA6E6BCC6D9BA1BEC75A81DD7C30E6B95132F44F8
1B5FFBB257886A1293C85717299FB8FA395E0A5D1CB659F68335932187EE9699
F9FCD044E8933A68CA7A4061A48A2A94F0CF82820D94471A6F657F2A83185419
CDB443DD9525FD186F461133DF5EEF22BD23E6056EC49BE04594BA2AAB4C2E82
9FE5C6C378F88A42FC92C44EF233BCF13005E91AEC945863ABCD1E0C56E3D02D
4A8AC13F8332C7768FF32841A38B4164BBDA2632FF7A41812E722C1219365555
C22020CF464AB0B7BC9B0C116B71FFD26EDA54268FBE2CAA3B8E06D1EBF79EB6
AAD1A53EF9EC44151BA722F6F26AA0C42D7DC52074EFF858CF60E5477DF526C3
F87B5D9F1D2FB77AF69ECDFBB4FFE079137731EF4EC1B2D0118B8C9CF23F4203
08F671B98BE1D755E50ADC631E5BC9C4165B4CC8551F81E6B046C46B4A023C9F
19835DC8C88A352F67F2A9732238B3C4AFD0D3E064894FC0D10B461544B85F64
FACD3001F4E02762B1F8F47802E8F34BAF7C56519333E1C28C2B66994445A802
C4EEE9E1654A2B4EB42E92B42896BECD20F13107423FE974EFB921DC86D68199
3081DA5D2E1433C6B8731143BC73012845B9A8AD29DFFFD0EFD71F0B89DC80B4
F86FFA56E708F89BCC7C86FB2BD6F58F09714D92031E48103C3341876B45B01F
3A259F71E97A1DB7536583B42646A010AD4CB95D6095ED479E768C7DFA58A5E9
B5859CED3701A1BC638FDE0D95DDFAB025191A0C4E3E66501BA5FE397C22F24F
B4BF1BD485C3AAC9DB5FE4074ABE1512359F412D2B745D8A6A43E56EAA9ED3F0
AA5E1136789AAFC38CCEEA1B3AC754A1001CF9221BC2B90C5FF7F8249FFD38B1
714D2C5C2591904F4860F6E842F25FED4F3E44909EDA71DF104EB0DDB2696673
64D550859170B465A7E520C52B1012CFF8F88C57AEC1D911511DC5354E6838E9
83CF106D7BFF56302D81A9FD100ED08938B2B176D3513D1B3727877CA6544324
278736DD2E4AB19970F807AE5930BCA1C2388ED1BE1ED84B60ABC29359F9F960
D29058664802CBC571DB5F4420663894E94A7AA7C7FA32E2B1065B99DBC7855D
7D17D059958D2EEE93EED69CA56B8FC8281461196B83255560502749F4B98416
7A79CE6A8214FEC836D1C45EEA9A6F767A947E766D8AE2A3A390E58BB690A183
82CFE8C4E3047AAE9107631828BD4F5361789D449506CC8D82A959D40503A364
667288BDED09D31FF2E636904A69BB4655076FD4928E96725CE1CFB5644C2099
371BA351372DDB973B45F11DEB544D93A1E4D48A50344A6BBA1F2B56D5540ED8
A60D39A3D664D595865992502747B105D88AE1F11B600CB4CB79D0EFF4CB6713
0A51A312B169432ABF0EAD02561EECBC1494A062572836443FA8A83FA099B7A7
B383D28C65D868724815B6EB360320A451A5AF72520E86C4EA2C56871F8F7424
69EF321463BFE47D635056B5BC7D9867F17187F4BCCFD8746071896F8EFFFBDE
54F0B36D59E51638A637FC2E50997D1322DA3FCD57674245EEA082210F3D2DD3
E2274F3ADEFD81801D7D2FEF9A55168CEFCC7858CC9F64834966D8D1A8842B24
A771E4709B2C3BC18BA30CCD3D7D2C90985167DC1AF93AC021340616841CAA92
2911201A975AF77A7BE27F3D811DA8C277699470CB0135123B7FB79996DB5B9F
235527A18BD2849D14D28E94132C3E98B025004CD33FA80E4A7DDD07B002E46C
E298900937C28F7BF7A9491746B7E7C69722B9CD4B3F602ED87C76FEEB54D2B2
C44FB4AF5750586337DB164D0F2D0CAF10705B5B36D5692EFD77FEB12482B915
338F5BBF6684A4DE98AD977B482C63B7D9118903BE5FBFE9EEAF3E55B55734BE
F6DA760D9EB5906F15B133D16F262E05F8397E05F42EBBADF8B47E125D29836A
93654E18CE546DE1EE7CE95CC5A027BC2F750FA34F9A33E86C6A672C43D9296E
AE3BF918D2B556962AEED8A952771F19B59A2760C5E3E6576D69D1B64F364AED
7BC801965C0DF7071066B8A6B64A7807503D0F5914436584B71169BAA0BE8163
46D031FA9AE8606792BB63186AE92F1F129E4F3F3A396CBB1CD93516C1A563FA
CBBF62E1A9A031672AD269D3E4B15AC8BAAABD21DCD36151B822D2F0E4A6188C
7BFE3CE3192CA2C3C66CCD88F644C77A4737DC4F6B20159265F85D0E86BC28E0
FF4EB5E0CC1B4F5234EE2F9F44D4C8B53CB993C39A1D12CA7713A1EA1B9CA9EF
D5E728CA7719B4C4D5BA25ACEC5D51C4B7E1099C2852C29316B17C0A118C41EA
AAA1744A5EAE2DFC64F20163BEFCAD83574434DEF49A23019D2EA361FDE44A2A
CF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /ffi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 61 /equal put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD699
CAAF267EE06D621BC343039326854E4F5494A54634314AB366DE27190840E8F7
2EFD964B6294870255E4A960FA6C7DA031D6B683E0113647B27345686B6B47FC
9A546E782E9AB39DD2A3F56335494ECF66B95FBDA7EB2FB5896563404FE61077
9597A25E678DB4EE7B616DD99080BF793661236A0C03309EBD39951A398883FC
919A711E8E89195EFB7318D42CFE278CA6866BF81718901D53F6E6B6617DD00B
951B641FA734C93E9A3DDE30F01CD0131335457FCD38003882A66A4CF8D7B1E2
803CCFC1C9FC2B4B7752E461D1634D57CE39D8E1DB5CFB4C451D3380245635FA
140CEF7FB92E22D07071D76B34DBB96A5A57A7323AE9C2D18348DE00561777DD
1CB32951C3B41629720E21956A2E0336865660580AD6FAA5A61D994DC83E3B37
D07E571957BCC050B841774BC20AAEBD46DC2794D4A9A330C3E2E57C4477049B
393313827A43EA94DA0BC73701373BBB6375EA7AB2ED618FF3D6F451CE41C30B
B402DA4D3F20365D92FF34E0E1AFB42D2B9751D6E641CFECDE50743E064A53A5
85C8FC8C1C8B788F491C937843051E6626CB05F32CBBB7E91027B10398E8B894
51F218B6A703415EE9EB2F7C4D5F7BC898FEEDE94CC0FFB2CAA98571E34DDEAC
38BDB8B84A35E15760990827017C624F35E1BCE3C83C68565ABD5814715F3783
4FAD3448F4BBFCD65AF6C88D4F401CA8D7E4598397EAD9F2EEEA996F3CAF7D08
EA5D8A6AA248BE2FCA7C1BDCA7EE799611B0D1A7158704F4C9DDA1EEF4A1144D
1CFEF6B3E3614F5A88CA96B6831BE586E932CE57F33037F3DC0E43AEE3EE3CAE
12339535337C03BEF3B0585CF42DC6108665D1A21E97033411D22FB4F6FD342F
BEDC815FA53FC27D212A8BAEE00B6C5F344D126AA6FC9E7E2ECF47D4493197F7
20AB43CFB7F826F4F6D2A7B7F8F671365DA720717BDD9E8FD9C6F90676BFAB88
DEC1CA5680F622117252AF51DC71CD0DEE3FE867D06CA199AB4BD79914DAE941
9D1D8AF54191792FEEA8C77FCB69CC08CCB25B2BADFDC820ABB65E4E660A6E65
2A26FF8508494D26AE405762D14462334AF71A1E878EC463113C637CC8580098
961CA86AAED4E4F2B2DFD6C261AD8F8BB237D579796AE1163BE9C1B8C2EE1671
ED68B3EECDD03E3099EA179748263CAAFD7AA024643F7D13AF92D7AC287C327C
6FDF1D364E29610F516493E5423F32C02CA9125AA09D579E58EF0104F6ECDA07
ECA2935382D67B95A788BF962845DFF2C1C6CFE8BD6589B20A16C2E1CE69B430
C9E868EBEEAA18F817C5F28A5787ECF6F5E76A133661B6DA9143D443D5B0066B
051DD9E902E81F262602C9D87938B75EF3037CF6054D70678B01042D547F91A3
D046DE70ECC7B8721F48AD00693D9EFD2E0110B640E38CB4A7EDCC9A36EB3FD3
8729F6E87567247A57B89115DB90A7C2AA2E6EEA7D38726F2A1891340BF1DA9F
49EDA513D7E0D6E482EB87350926910860A95DE4100D2A9BA9137146FB328418
6CC6BA6A41105AF4BE60E0FE5C1E450BA992ADF24378427684B6F255767F85BB
353C380134E1681259EAE8595EE4BD61D7CB962C4EA678D31B849CEAF5D11607
A78387CD1D15426D99D5C1334463D46AC7F012570312C9C0D3222E949E21E436
9A00C97D40E71090768F6557777A8817E21372B47656B5E7C32C1DC983DE2858
E791FA36FC0FA8F5559692B7327B675E4C3201A55173BD45DA2CB6A449BA44F0
7DE38907B58D11FB007D6DCB2A974E04CDD34141696BAE8F8DE783231C08BA95
DD600436E0BF5E8A00CE3C92859961557328D73D5AECB9A0B0D0BCF4999F3780
DD65EE069201745C56613FD2C27A6FF7D30EE720575B4FCDBB28421D2013954D
1D20D0D4385F171E2DEA7320EB47D0FF7FA632254CD5C4A6012CB5F4DC49BF09
0C1BB477C4592FBB6C02941CF41BE5A03E140F0C0BBFAAD8BA0EAE4DDA85585A
0F4F1EC76CC01D0863D83E4F0F6897065446F7653442B8D8DD05615AB2ABAC9D
FCACD7A97CAB77B9A695B08C7478C1E65800C749BA0DFA1F59419F409E9B59D0
213A6F36607CB967152B7208FE82D9B763A993E1A64DF08AA86E554A2C87B187
422C3CF3ADC3A1BF06F1E787DEF42A610E752BB5389E266EB035CC39C828E042
FC059A2C0FC15DAFBFBA22D0B1F6F9AD92CDAEABA38D1A83B78051AE5F450790
02BAA75DA44FED60F61554E7F3646169F9E0E1A6FF19F689D8D54109A2C7842F
CAED2E37FC7C6DEF47747EE3A05EE26677D46407EBD5B0E79D28ED2686E7D610
1C5F1A2A1BF6C0E1A7249F574DC72D76F20DF2DF54EE838864AD1670C83B1CF9
BD605DEB4E6C69649081CF715E6346887DB420A6865731C189D8AAB04A2BFFD6
7FCDADBA9390F264F2FEC1B3C4E796D470813C4EE00343743F9257847FD9B5DD
F4CB8F2043077F250A7A7CBF62B45591900FAECAC2DD8BF069561019E04A1972
C089FB539750B2FC254234703237C85182F9ADD1A3D3A08FAF62673915F28B62
93BF3060E9CAE54D1145826AA49D0F9A5A63AA4C1F27AB44B8A83393E4E7D8A4
B8956ACB245DFBBB30C40075386C8F169BC3EEEC5B249B7A07735A36F8B1CA48
65D7CB118FE0BBCED521386C448F287370A588E43EA7817A0B1B48CFF43EBEFA
BEF2C792576DF68C04D9DCCFB20790040432AFC4904AEB39B987048E8FBE346D
C015FDDF096CE251AB40E97F17A1A3AAC645D48A8F3629C65A153CD3CE51D1D2
2C125EECC5B6161EC0E02277A0EB1FBE7B70C8CEFAC96C6EB80AB33CF4426C7F
BDE46B38B54D534F19F12E1D99AB1AAA6C6A86FAAB794EBEDD9EA671A187BDAE
4A23B9DBBD0BB70482BA1F47A948A368784A2987CAD8F661C9B2477E0379F418
06B7C3D3E1FDDA440FE0BB79A2DC3F725C2EEB125511FF711371F7A5BF501646
390EB98FD4E2285B2DA14099A7DB137EEF6F9B96B3C0F1D796AF6602699A2099
10810D7B74F7F7116D10592F229C24C60220CFB93E1367D1B8263172C133FF30
D285CADCB0655FAF3BBA11181556B22414DDD6C97819F7B343576B4885217F13
300D992293222121CD8C3E2D0FAE398D8B4D35667A052CA1F6A18D7C637D63DA
5A378F10A4C2EA0A0FAF13556D94268D0E40485B51878E328A6350B2FAE102A8
BEBC5D6336B1997841A835CDDFECC3A6BA749032C346868F15C04CA3D3A27807
155EAB53871FBA3FCA427C81A50996583B43EBE51FBE0320F498F4C789DAFC2C
9AA83CC7F574AF99DF6CF3627AF3887EEBBC6C56A8E44815C8652B4364557BBF
21E0201F8DC0669B12B0C756A5F3210287BE390BEAF3DB8B0846106385A46770
0E429E3DDCBFC950FF21DAB58EA0A62E9117DBC9C6A0CE07D2FB56B4432475B5
E53F291A7FD40567D99A66FDF1FC30D1CD2B151B5B6F3C62A715C6908E898F30
FB95883C508443F3FC2764F52DC679F79F7F3506F1F7C1A0A3C95997D4C3BCBF
7B4E2641183870FAF171A3C866A2ABC2E17957997FFB4B6432C698044791B8AF
BEFACF600BF61FF26DEDB1C48ABA27649286515F91EF6C45BE6D1FB3758F4BDE
2378B35ED0985D442D7716B6AAA7984479B2CDDB96A01DFCF10BA883CB2046E8
97DB105D071CF62172B28FBFB6C3C41D2E0E578A7F9D6951A546A987B07066B3
855C49CB08ADFD04FC333570A6830AF73714018E66D1D870CF367287420DFF79
68464EF04B9C1814E28C438AAA72CBF979B3DB6B166F36D191769B35782143B4
5E648CBEEEAD5218376B67959B5DF63CF6E0AADE1E07C4BB5FA6A582BCA979CE
E6F9C59576B5184258B2A995AA848C73D6248071B32AC7974E24DE81CD6B0FF6
176C13E0534B375CDE3CA6DD714DC3AC1D8133976243C9B988979F9839B61951
C2024B69102E4EC95DE6366E02817072771C460ACDBC8595F6C16F9480ADB975
0A6AF9BC6EA8EA9CA04DC8845EA2B166CC78B2C2E196AE7E84EB06B90444D260
B3C7C93502CEC670230125B542ECFEC3040154190755C48EA05FEE3E8FE1D842
3801A96664FA20D07AEF6DC4C3D25B0E6BA61F704CAA30F86D5ACE6BB9D75F9E
FF928D2EBA427A287953A4F8BE6D31F4E6160CC2B113F5C95791E20129D33525
0CC2CB324B83CCD68A03C4D19126657151410D1A7C631454AE1C8CDD8A31A009
0A7C0F1AB834C5D366B441563752BECDEFF78FEFC94FD83958E624ECAA3A29A8
B2DA32C4D360F52DC867639DE20A1FE8A5FF08AD8BD261B4BDA2E86D11929D2D
A33F802318A00294826DC8DBFF7A20AB9970CF4226B84C5662274AE08FA250D0
F3ADA7D911F8FBA229B8BB21A3F345EB7A087B030D7CAEEB66D566C58DBC6EBA
FDBE642C963411707E41DA572B2601547FFBE4E2D3B24AA85ADF6C910893AA4D
C1577BD595B0B80C2C50EFF9994BEB9150A742FD756D06B645AE4F66FD890605
F012AA885BA44F13864C24EEA74FEDABF73C26F4C3F3CEF6908798C028946CBC
6A5FAE1F8F869DFAC4736879C885CAD1448233D148B1384D85B1EF68F2EAA7AF
B7E399E79EAD53C9049D638183680783A1CA2FAF5D3F82E1341DF6629215C8F7
4951EEA26AE75AA27264CFEE9A1FBB1DD1C93E91698C40D01D825505F6649255
18CFE667A3D14F0E1A88372BED059BF00C427C795FA08C33838AB8E3BD6EA463
6FB7C174C95F53431A8B9E6954A601620FF405E158F38E608FFA9789942902FA
57BA9916275F8A0FBB459777D2C2F43396D19C89F43C692C970A8DCFBB6FB2AA
B3C255D42D16F53BB8AA67BDA1F1CD8A61755C5A6350F37CAFC38795F7D5D53B
D9EE02A9D80C6042C5D1FC8E7DE726FD2906815CFF215449C5B6E71ABE2066AD
2BDA4306FCFFEFF3048B7A082D4867CFFB1C5B22591F6578592DF6DBE5367D3A
DC0EADFF6FE267AE9603A30290D0533970D4D56D8D956C38BDB70EBB2049AF1D
CB659CC9F1043AE8ACDFC81CD8082D60316747BA65B4BE24D9F055542DCFC60C
2B06ED5D891F8BF4CE8BC470010C0FA25848C9673581AF223579E598C0697ED7
E95843AEF8D7CF7C83ACD62213BF87A7C91BBE3262461565AF07E2D1B79F7C73
4B61FB600969200C282A8029C7492234253C04FCEE9CB2D62A3570530C0AA61F
88D3885B190E683DA3D0F4DA22BEF32C61E7E6635682DAC7C019A49509CCF840
E0D2B4B43DC4E8B30DD475F251F499BFF0C83A2870459B5D359A8D6D8EEF8F2D
1E4157B8AB842DCE97453C792C420F84E8E9062D9E8C324B327B782D48202EE6
D439D60196AF4C54F82910328E56E30C8A53FC6F8B065C02A18D8D4488B33499
411C5F4DFE0242499834E058FF4825B1A759EA885BB2F46F76F1A8D4FA825965
678AB6F74AEEDA21AA42140111E12176C32B1408CFB69315FA675E0545B7A285
A7E1722988C1ECFFD55C551F52004B5A788DFAA32F2A55F812B13D2FF51C3D22
D195A0522F6E26F35D20A0AA6E874293E89D2B133085260099635E36DD90A2D1
3AA115F412BE806803519B64AD4DA30C3D0723B0AB2A0D006A99FB2050324B1F
9726DCCA87CC5ACC4F6827E75FB33E50068128F227F024564D6FA772225C45EB
F416F46CFD923746F2B2A6332FE6C5AE3C597142CE1D466CCF741F4EA9CEBC24
ADD596EE13E1A89E677937477597D1CA9BE1635F769EC0D312FD32C42BFC4CEB
C1EE423A71D73459C6EC9087CADD0AA933EA8A895195A237D07B40963FED7761
2341465A07B4B0E4B63402049DA548C614A4D803AEB6EE8A7D8E9EB77BCF4B59
613FA5EFC20676EE9884DFF2B76981D84CBF9CAA419C142E1D1DA09395AF3870
1EF8F05298F3A9012EAB3AB6C92B228563FDC325B5EFCB491CCDEF246061D6B2
A350326DB52986BF14C62E7FA70B00879DD2178E46C6BF8D37A86E9E8710877B
685A1473B1701A78841A164920982F664A0D3F7C88E867979E3F75B8512A6A2F
CE267BA3ABDBCD908F2ADF5750734544FB7FC2E0904FF7A33CF90E0E104AE472
794B3A786CCDF21C3FBAA74BB8BB6A2B8D2D79A906A6131BC5398681EF19DFD9
5FC0C489FC31DF0608732A7B987B11F0611454102A0DBE194D5C0E46B138F78B
EA602903337BF4700C768E649E027444E55375C88FD17A437EB2EB66B5127016
2B56A130ECA739251582790DA1DB3AF28E00DA687E892325C62298A3F7BD1A8F
C867536B80F03E59CE2943561DBBDFCB8CBFD6576628A678375441A324E54ADB
AEB92349EC14F4FE08DC5C3EB563F14C16FDF1310C99239F6A161BEC519FEBEB
011971E5C71E50B2D6394B2095E8A4D3491ABB475666132EC862CCE8564CF727
0A5BA37C3F511A20D080F7C95A78A6C2E81BB9548C7003CB21DF140F5DBB32F2
8BD94117E424002D3D65A51E44B330FC3C5286C23A50A87C6F33A41C8E46065F
48A9C01FCB56FBB4AF3A7AF88AA56C3C5F846D226B0785102C951884ABAEC10E
814286DC663A04F6B6B0E0CAF48DC823BDDB0B0937D7EC07AA3810A19873679D
2F926CB6821CF421955BFDF13EFD76F530CF8AE568A100498BBEB478DDA1843C
FFB3551BBA8C206916035EBE97F26B0B58215272F00EF71AEAE524C5A6195F88
ECA427BCE1AD765B13B2B29B6A62D5D86B3429AE120CD8739DB1824998BDE91E
244D892BAB410B05C549305A3203C804E37D598521B21BA920EADCA79B5D1505
E8CF5D8C33316BE0E1B9C47CD5B90863096BEE4CED69E0597C3005CB5CB50AE0
EE558B3682B4C398807A45E80DC727506EB9870917608071CC01F4D6604F4657
24684C7A658E356829CD4B6411709469422AB4E8EF5F18549B3FFEE7AF6C47E9
B853111B0C0926D2EFC7D75DB39E1D07C30491B1252A876D896FA9417E089962
AE8E3D4F4E8A6420F26D13C4F7E81B0883521AB46F65967E34CFCE127924CFFD
151C344DB249912069E7DC8306D131605314CC4FCE8B1BA8AFEFB4E809D6DBA3
9A50C106948796917CC2A3844B2BCA80010C52D8083205ACF0C5A62898ADBBCD
99A203D87281828B653D9F447FB1D9FF8FE8F2FC907A31244A440F995157C959
54C3FA7AD7556E3AF09F28CD8E6986B90CF841E8712B3AD5BBF338EFAC34668D
736CF3D1365709D9EC3805059952D28E442746352FB757AEC29ACDEF6773A047
87FFE5D105433023807F323172A0946153B24EEAFC918C705EEB43B2CAC8597C
29728AF84DE0DE9DDC66CC00333AA13D25A552D8A2061244F044782C5CBE1FF5
CD6CF1791D5981E614C0BB51EBA3515231997EEA72BA66A4A7564F04E43A61AC
60B5D400E5862E5BC31F6E52B45D24E0F07191F36DF33835123E9D3D2261AA9B
3F99ABFC5E07728E19FD5E395F7B4945C77EE456C501627FBB190079231CED57
D0686495818B652FE5BD03AE6126247186030E237C55330014B9B91DAC41634A
0AABAA7947610DEEE61A4C475059844CAA1732E62865E9C2FCB8F54232EEB9DF
D24CEBA857FC4F09450DA18741EC5714EA6DCD53268E5C042BB2571D2D80F08E
3E8681C5579B3EE149554EB952CC4669FE7CCD8C1D6EB1D69D61893E31941E10
A381DAA20132055BB5D14B78C656E79FE433F4BB74D2FBA188A9338F9E2D5BDB
EA71F9D83887BF292EFDF28D790C9C7999D42CC95CB9C85DB9DB818765C1B732
5766CA346C4014BEB5ABAB26C2D4D7A0D5A137EABE837706C6B397C5E8F5B42A
47764922B27CA33E5E1DF7F8E2FF7D85F76EFEF3A254E259EB9FC3E60EA89E3F
3FB553ECCE9598F9798898AA18CB3CA7A629B92283A8A00EB4F5FD248339ECCD
B6582F4B26CE331676C0251694A27875BCC4F5D27A4EBD36F3ECDB31965FF1FA
7ACBC76F7551529B75ECDB004DA75C2C52606FFFC8E0FB923A704ACFFF2B0A78
FDF123F111678AF16CC6F24A14F8F3559ACD8EC73709503403F52ED2C96B8D5D
06CE1640C39C1712E057311D51D2001CA3091F329C9BF33063C2CF79A8F610F7
D92C0D140C26D1753D5CFA34AEE297DBF7924C66559976CE5B98BE7DECD5F3F8
80C39F45B5587D4224B9F72596E276EFC28C8E82C87E7A09FCB829E60781DDB7
9E5BDA3BB79BFDA1B21390B64FEE90FB460993348E1C40D77F0E34220805E377
19618B4CA57EE28DE1C284B9F6E0CAD92C993A28E06869322982B62152D7CD55
32330455A10F0D90B8AD3282F4A39A72C6E40DF8E5D31A89782B2318996B625E
A3C4AB289AC2BF109FFCEA35A1C3DB7287D8E4F2A5BDE70EDB771F3AE433EBB3
15AEFBA9B69752862560F9217B01CB98F8F1BEFB45ABEA3441BA6151E69EB11B
76AE78A110C4B7FBC1E24CC70509DFFB673BBF664D85EFAA4BAEE73527D501F5
CA9D62127553EE90AFD0578BABA601DD9FC2C1C2DF974639918F590EA1E9CAFA
4A446EF005E4F989EC1F54C3CC8939A524E549AD567E2D0D6F3D5948CDD7842B
E2655774EAB4199E3FC179661F082A186B01A1C6FC62342BD356673AF86CCFA7
79C28839BD1F3C696E66FACDC48810ABFCDC1E04B0F53486FE203A39113F31FA
F2B7304E384C2B71025567FAEB5E260338928AE069465F15691DC54D6F1E538B
41789CC85222013817136E3D40F22DF100F64925BADF3004B7AA1893E764D4C5
BE5DEE3563259A33668B42F49A4832E871B88929A0554E161FC71D2DCD52B7B4
9965B032EE2150158D3DCB4FA32AE84FF565FA15FD92C93F589984650F58FE94
C92928BB3EBF011899F057974E175DEFDB44D39F44F7416183C08EDD080A470E
894320734F7FD64C1D36E834AE9DE0B6C1F2D3EB50DE6BD321DEE2558F12F148
17283ACFA0B0B51B01493603D1F4B57B93FCC0F3CD6703A94C3878268A34904B
BCC26C67D7A886E06B3976B1D0FF308EC5B3B5B471149AFD977082AB2FBC65F2
2C07ED9B7C235768048B981A0375F1FB93F247EA65FBD7170BC4F59A6B8EDAB1
3622642DAB7EA3ECA305B75D1D8697D1115D51049612318FE704462502317635
F5F8D82AE61178B19BF6FBA1237AAF8600AC3B5A7CFA8597E8175C8B9B0F8F8E
BD3D18D0C681FA1262CF7893EDAB597C3C14145894BB54E833787407F4072D4E
F3262881B286ECAE57D62B3727ED52857F96A95903E14C974E1997D52F5B072E
2FCE170211469F75FD9F7263B821E9E825AF6091B76AA925525EB175E737B2B4
F2BED502DF81A1FED63CC26DAB9C25E2E69039DA0D8C9D86E9C668A8AB3AD1D2
706527A159CF27367A78557D65B28DD26B21ACA9F27828AC5637A450A07C61FF
CD7906FC2B11EFC0C86FA021C088B7633AA94A71D979C556FFB53ABD4568CB5C
D08A46D124170090F3C1394AC56500D49D54DC2BF41E17B8AC82DE9345D486BB
19CA6AA972596C03DB0AFB32A9BCBECCFA8CE8DEF84DE5CB073AF1348FE0281D
19FA7577DB4CC162881005B3331E8B9D1FB551E601CE4ECFFB2B6FBBE3542F8A
017123F584443D7AE166981F83BF75BBB5732D4783920871D3DEAA9D27BFF3DA
060BC0CBBD662BFA9C4DF538BDD8CBC67C264D4232E80AE811C52003F690316F
41A004E7F375C4633AFF7FDB2BBDD14628F0AD29D90AD8ECFD7E917894BB07F1
D7DE857723178981592F9E265C2AD4E489056A885F67810E5EECDE4EC617AE57
C7F2EAB7EE5E50FDED44EE6CBD8E0CFBBE6A8404F42B5C100E89ED3887098F0D
0C1B06DE9AFEB37E509162EAAE35EFADA9D5FD7325182A77418DF5E343D6E0F7
26EFCB5B169A4D41341A6D8EEEDA990EA8C0B42FCA85269721F73A24BD5A3A76
264DB36F792C5A5621397631BF33692EAD2EDA02A28162B593A5FC553ED8AD54
6163A2AEA621B8F4D33A212C3AD84603C74B611AD2866323B2FA76F8010823F8
A6128DFE543A596EC5FC4C6D6C829454DA3382FDFC66F7A4017BF3964E7338C1
2BBBA7CA1A34FA4AD948B65982DAD0069ECBF8F3DEBAF7A526938FE9DA9D805E
54C57D686E514B3BEED476CFC4D9D05F7E5DD09ABA2FEB46CABE580607664FD1
1EB784E3D8B99BD8677BB3AECCA6F0720C52F0982628DDBBC8B2DB54A871CBE8
CEEFAA3443E84040F5A5B6EC61180B2698EDB42DEB2D66849B8DAD4212BCD98E
9995E97467DEBCB551355C699EC4E473D727EAA3B5E31B507376620DEEAE34D9
2D44F4477818A09E92B31DF69DDA11DED3AD7BB345B63CAC0544CA1E31547023
F400F1AE0AC1BD70B474B267DFD5702E8331A68B2E77BAFDACED9666317AFBC8
E82E0FE2303F841B0492BB15FD19BE6EA448DF6CA4752AAF92BFBAC68A20E897
88FC26CFC56895023253D0C7563F72FAA18869D698C8E0C89ED32102A3DC6C41
2DA583B5FB9374673255ADF239D964B8B9C0C707B76F9DD730CA91BAFBADB2F3
F5F0B37157696A56B7C966CAA4DC95C4A5FA99626550E5CC2F4F5C72DC090DEA
3402967C9174BA90E859557A563F04A98363D273E7F6C78984E6094ABB59E5D7
922CBDDA38B6C2337BA52792115330BF4455D76E07D56576CC61A5B2C988C0B7
308AB528DA3438217DA3C72806DD31696703C82C179AB3D975D35DECB9006E90
388A4760EB9E8C2E588C12297161E62B96B91265F78140A2609E0AA963B4961D
304DB01FADE6D796C1DBB8E91E03828EE956FF29E52FE87565ADFA73C2EAFFE0
620BFD6866A7C3D0B65DADA5B0C6E6A6AEBC47E03EE297E91F5F59EDCAA42262
D70D0371B2C737D23D0F8148A935DC6BB593E262B76BC870A86BB3FA78E90DCD
F3884B195989486E7CFAEC5A6B816DBE069C5AE204085C53414D1EBA032C3EFB
3993265983A2DC16603CA95A02B1F80A15B3B4002CF093DEB88086EBBBF85E8E
6A9BA8518C52C8DB69B42BEE5469B856FB448884ECA2AD3446E6CB5E86182ADD
B288F461C29BEDCA9D00F43D4B67CB6DD7E0D06305053E693DAA89C94A7AE939
9BC79A93838FB75A76BBBF7D1ADE0986ADB25F54A67D659C29C17B938A2E0D38
E951AC2E6B060FC910AAF01983689765EB6053C3EB4DE533ED78599A1484DC6B
0F066A44D5A4A38A97F0BE2203CC9F6098E61EEE8B10C473969A4F9A64591B83
69ECE3E4E207173150E9D1576CBB10404836E8720B0FACD646DF7FBA77EE2515
82B5C1C83EEF77DD80382AA5E902CBA5C53C651AC21413CB87933118A433AFE9
11F7400E700C981F9A0AFB989E7E5CF0FDDB37D6B8EE0C0ED0361E89825068A3
F95969BDBE2009E6C2F0881767CBE3D3110C5D5A954DA6C68B7D2C7E3978D396
A07EB96D90703551C05641DB86EDF30417DF1E850A7215F42D569FCD5F5D78BA
A85B5B514DA0C1B202E7E94D08A0A062B3B53293888C8D781A36D39156D5E608
6712E0E24861E6E9D7F2E635520E4B3B167CF6A2D247292C46D0C300E4479294
D262045A221B82CEFE2755ECB63004030845AF657775E1F1E7226536AA758940
975E8DFE13F1096360025D8120B9EFFB1C7A1B151105A7E97F8D798959B1BDD9
11E9D96EA6C6D706B7A68631801C529281BBEFF5D345157FB2A3983750860FB6
FDEEB9A4D5D202A9356E975E54D3CFD863223FC3F777E06C6844FD82E8566A04
E462AD048C16CD8BEB6B82739C42F1FCDDF27E4A4AC3D858A5F84E5972FEA91E
55C3A0B5952F9E9FC0F80C3C88A986FBF6F25432C8CB9F5B9A26DC0342BA7BAD
E68279D79DD0C7F6CB099895EE4815A3A5C43BB0E126EDF43BF27C8213FFDEC4
D32FF60510AC02CA770F53075CC3CAC875FD88A4DE3B8F2EDE71C6E5B9101BBF
43045689F6E53D9339E05232661989E09A72A3E842BE22A52EB242B5AEB9A4A4
F5F417BA6DADEB9BF86B8B3943892B9606E8E074B6748D9126A5B5F4D60A0F29
7D993950559ACD75E3373D8E8A6E288A48DC149D7E36500A8D53FC2CDB05AED1
EA7EEADCAF59F84D87A0DE7A7EAF5997879F93F0C894C55C39A65CE3F1DEF7E5
BBB39F071A31B19823217A497C83590372190CA9CB0C2CF643BE3035919A7069
E1031FEF956568689D6C604033D134E92D1B518E4733E443B72D500AA9CDF04A
2B371507220C7915A541328AC00BB623B23EF63A578B00EE7B02EB02D73836DC
DBA574647D056B0C5435A343C8D095E12A67A1B9E6F655DF9B861DDE12C37506
D7668E5B774422797480AC5016770AB01B55C1436E54E9BCD9AD807DCAA4E29E
37C72A1956F438169339AA556A17FBD65BB12E47DCDD373BBAEE8AA2A135C91E
220DD6103B86F681D0CED2C9409530BD3FB46E5E2C3992EF31B91A71A32B8D1E
A02E32AE090A967BDABFA639B37887049521DD14D566C6FD6862C0E40E5B7508
E01F2EF6154D672596158599B3FD56F2A043B206695BCC3D1D76EC4346BB6BE6
79652ECCC0B86F7F07F52D9113EA077CCDB16BE4C4B554CDEA25858622972205
097BE17D0241B491585862AC536EFE7533EF4CE2D08464011AA4E56D1064F2AE
DA58AECFEDC889217B2FD5005AF4454C33A8B35A8381A0379650900B5EA5A9ED
BAFA721EF6E6F4008C127C1798D0CD580E2B911A1CF875A46AFE561EDAE1E53F
0609C3A9B60A7F19D9D9DAD4084C1CE340D8A553B3856E47EAE6E6131E49EB9B
E3A14AD2ABA54362B15AB24B348B88F035FF8E22F834CB1F351A590921449B76
E1EF57202D67B33DD62F4D8D57826B814CB4C97C60C57E16763E6B87C83BA6E1
64040DC4C23CEAC1D5054D97153C8777B1D7B4FCE3567B452AB499666C5D8646
1FC8F09AB969FD4841F564FB1C2273F5DB3BBE8A9D56C27AE186E1BF92560495
5B53B96E7AA4BBE9C2EFD7332EC9E184AFE455B3F7B53E590E9C408A75DA599E
D60BE7857271B8730D7CF3DBDC1F4906033C48189AAFAD5289F9192D4260350A
6A2483FC529D4B1593AE59BFC5B6CC6CD3FCF82B4588AFCF26BBEDA5E0AD2F4F
9F576B3732049868FCD8143CA4AC3F2E1B475A576FD26E66B1498010C8AF910E
3B94286616478280C552FE36DDA48F55DB9697807570ECD668416B642AFDBAB6
DC1DFA6D191C8C5DB74047987D5BE16F7899F3F0944C86F452AD5FB3DD333157
3D4FF9FC05887FBA4B1BDD7FDC1B0E10E62639B833BC502B67438F48CF28560B
756C58635FA7C2FC8377812A8BF6C4BC8C2E1EBD06F966604FCE82B698174B70
8427E99BC122DA2EE064CD9E9D250A4A99D2E366B1681AD709E68DCA7CCBA528
5FC1FE41F227458886D5054C7F59AB647A84DCD0DD6FB52DD2EEF94DE35461AA
77E8C2D775B43D669D996A3A3FFB3A37062FCC39A99C331CC876805E0BE0B7CB
E076DD721437FB9DE85032DFB005FB3146FCF767D718649CD831929DCC6785BB
E888C4190D6095BB0DCD7C345307D7BAFF844196E00C6A526713B4B888B15199
60A134A5914C36310848BF1AC1767686DFE34A654EB51EB3CB214F4F214D5DB4
576B971DBFB3A7317BDBC7B1E29B2B50C830BDE7F7EB6CE2A367F273D4C80E2B
14D2DF571617ACA3F54AB81D1AA2749D35C872CE600F5A8C407BA366827A0B75
29BA5928D713131F8345BF421BD10BC40FF617D7D1D699C25A50972C2020BF64
399013519406EA86BB52178E3D9F37D4EFE5562FB93089291A772441E4CD7DD1
3B7A9D8626FF30D3D2DC7693436D84DE2C5B9CCA7535080EF3069BCA16880845
6668F790E88BD34498B7B0464292DCE9964436BFFE8C0562DB3A5739B1C80B85
422332405B7098FEC8BFCC580CFFC12B218018ABD0815A064C8080C1B88902DC
2F2913A6BB3B1897DAC1EBD1DE1C9044C3CAA800877486DD1A2ABC2154063948
031B0FF99887B4B994042A84F1233F440E5892D023EF553575C049E542328895
A6CCE3CF41064A06695FA392749AAC9F6F6F7212A7DE623890AF0A788DE3D9A5
AAFECF6FDFA744D35A39FC6BE817CBAEE2B13658C69CC566592CCF18FDDA2AAF
9377230281B9D1303911DCAA6BA2CADFD3358D83BECE78388F14BCD30A532835
D295F5B4B2A1A3F9377D6FD27A6D9FCFD6C1A5690B70C40D37D80644350A8EBE
075FE963935B078B1839A307B1EA95B32810EB48B0BCD2664018191F1F27452E
98309BF5E7315760ADA53058D655F4610FFA45F22FEFBAC011253D7CA0BBFDFF
D834D5692C92C567B9C583897864E59C4AD8CFF0363B01F6E35A2B473DD0C58E
207B5D33CD5C2E85BF10696F80C78ACCCA42F2C7634E0A44518A5774F22439A2
FED51AE31639C2D48D9C002EA4A80294AED6AC520D994BC443ADFA2B1703BDC1
156E77A0A91384C61C0DF196D6F4044F4F8E28EF5019E32063DE3B88F02E0B13
68A67ACA6F3E38D7DB1254445D524A6C07661FE6959712E6CC0167A7AE14A4AC
EFE030744614CED2EB28F5CF090A1F47E1A6A3BCB8F340E15BE4E015F11151EE
D036C1621FD1C97B5DBB67905F176D269FCF74A375604AEF6896722E2857546E
2D322F6DE6DC8DE3C6A8F9D61571BFD195928F33083D6AFB6BBBA86D1F04CCF0
948EC98A8A1D30F5D585D70897541C755B5B758262DA385D929DC62D38F9A56E
6CB45AE55B69AB1C32A0BF16892B9CEB7578B9D0C9157692598C4392DDF156D4
24B5199437343E956D59FEA0253535C800E3EABBC2F3C7EBD73F7EB10D10A068
4058D9D88951FC497260226962C196D6A277881DBE90259478D99952EACB99CF
3CBE13120C63E6DEF132304DFC8546102CF7133793A1B8E00C3688F956C937A5
F5301547DBB32A84DD908BC2905C7600729EF306A492072745DB8E77B2C29AE4
2A69E022EC90477946CD836C76D79BF78D4066CFED8002BFF1970DC10557FD6E
DFC330FB3E691952DCEA732952EA481F5A395179EE2DB6DBF76B201A04D20E31
0E154232D057EBA6EBC3910C52478BC9BC98DD0A73FC72045241267B504AF57E
2DAEC62890CBB9EABD77F6B6096507DB04C36177496E9A769099AC2C91B555B0
9F3C27C4B9C9F5B48BCE48F87B4D2F78436F97F7D3D6CD4F34AD1A8D81CDECA5
9ADB0C72A1C531F4BD2082BBFDFCD4A4FB56F5E67231C42D0936F0F3D5BB1B4B
393F8E71CE6C373C1546B8D4E3999EF8792D8DC3C310AA27A3700E11D4D628D4
A2829FBD5C485F8DC6651D638A0E3E6EFA97B3B6D00CB9B0F808C6A17EBF84DC
ABCEE8E0534A82978CC952DB13D5006803E2F11A6FF5C4F7E7025528312FA4DC
EC6D794A9DC5871B9A272CCA368AF148C4601D4096D447503B28385E7DB11237
5140CCFB63BE00127A39368DEDBC60F09F8B8CE45424C1844FF97AD92488BA30
5AE045DA302DCC0985FD06C74B3152B3CA0759339427DB170E52C907B54AA1D6
E185BE5AF0AE95C7DFAEC0D32856EEEEF9E755F775A242B6B74A8CA374CC57F3
6864F909C2E62BFD5420AD6CC12720CF2774DAB94BCA7A3C915FB95931D04DEB
21DFCC134BD6558FAF04F1CB12507E845AC6B0352C1DE3A7FD431DE7FDC80ED8
E9CF4BA7232AF95765A47642139A35669F4B400959F7EF6DBDC246F600E6E1A5
9E628DF86B62D63BC05ECD1E827567400592F216D3CF0638E60F484EE67795A9
99DA08451B26CE716BB6B7E1961086657F4AE63CE4A2AA35151ADAD3932C26C2
3C7B94D83B2BBEC27A5297CE55C34B85653353BF86E5BAF5D37F9BA62AB445F7
776E4BAF70F5F62A86D55C14F5FEFB1A03D99E9A09C1052AFD3EAC4072611DD2
9711537943278A22A895F01257BD21C46D4E25B22B41D988C68FEB4E01639359
D9BC52C63199415964E49A2789A4503AB8A8B6A3C7090C02CF67053FBD719CC4
8D0C9B2C878546BBED8A6319AFB3A673B7E579855E09381D05DEEEEE9DE56451
CCF1CF970E87ABC67A51415408716424E8B936947905BE1C536C23B310B4F7DC
36650730A6BB794383D23021F6CCE06E2DD5A6DAEF7126DA767DE2BD98CCDCFE
F01F07486C61E34CFE6CAF32F482A77ADA5038F511D6366DD5F3154883CFE4EF
04F6A63BAACAD2E78AB8F47B66BA8FF70F3E3A9BC5C8D3CC73E515DD69B2E14B
A62A44E1F5CB222291C4EC5B9EA3DBE38EEEBF740441B57DD9CA5B565BACE450
C005DF14C9B60B03DFDDF0C5C32CB4EC4AE29F5E29273A82AC2B89F2F593CD15
403710445D9A0350884796B4BDE937FABF48CC5A392E34B41B71C9D12467BFF3
14B2CB28F2E7F08361FC610BBC3EE6D516A092309A81A42165FCFB630E50DB8B
F77656817964B92AE13A430DB767479BD64E53683F08A08932CBAD945DBD8DC8
032046147896FB0D6C60BD9F04FCE2FD37B7226EB52D39C363CB09EA6E1CF1E5
D799A9FD803A37DBD67FEA6D24FA7D606896043CE2F6FFF3D38AE78B349A905D
05846D696EBAD17EBE808692A8B27B33BFA6987C92E9957B156E79AA2C5AD67B
A54925E05E95128A03CBDC659451258BDE736006F68765E3B90BFB7644559143
48B7420BBEAAFE2386A77521A5F5A5E746C2B0F96C9CA7BF7A6CC27DD5C9F714
178B043F66E4B687412E9010FED50B95243A5A8E21E7ADB3C143F7F5EE284727
A298780F2E95BD6169EFB4E0D47106E9815ED897691CDA6586F26AADC7474858
04E8DCAB7FD6EEB554FB3A8C1DF009C0C88CC091F14B0DEF31FD2D3EE097F0A0
F7D81AC2F887A7457C3BE8469A3F1ABA57FD47D75A15E233BC097797F9FF0151
E2D1FEF6BDF4A53BFB700CC9636EA7708C46A12A7E03EDD6084435F97C72A5A2
B0EF009A835A3D8771A9CDE56649BE3606F666729147CCCAE2869654E5CE389C
3A72C5F7B47978800DAAD0D994128FD23AB6B9934B7AB04E1A3A1C46C771455C
598641DAB7684E33420424ECA824FF01891AFE0CAD653C5CCCD3CF69453CBAD4
879996876C247F44D672B20C7E378A16423594FEB697815537ADDBB2F663E724
115B3C7BCB4490D42F8339BCAA62C1858CCA35E53CB9F4F79369873BA4B8F9A9
17EC1EB9F482E312AA781F8228275A052F01362D19E6017644822472BE711462
9640653AC9BD7E91BB5DAD4B5AA44A15EF9ADCC79CE3F8C64C85369E12291929
92E549
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B00D1AD408DFA68317242807EE3C882034CAE3
F78F40E9A456BCE29C7A942521953D9F32D503ACC6363E3719FDA66CB6A0EA73
47B41E254A9A947295DB66AFA891D9BA6D49BCB4D9FE877F6B93D17CD9EA8B1B
29198097EC34C254C3BB351CFAF49829F5126BBECC7EA27A512D0D2798E40E31
3C92D82CFFAD4D73C32468CAC3649B591C4BFF3C893BADBD1EC5175315D150C5
31DB52CFEFC656541348D8F223E5C93AE6947D76EC59D97F97A4A926B30E1010
E0520DE07F8C1F16FF7B32BD254816C19F5DB20A431F98EC2C6A31DD256CA630
D7C620684782DCF77C25BA7CF8FB0C661C6993DDE16371EEDABF5A8635A90F90
F11723D1D99815D935F8545DAE99609DF76C5F77027569AC592FD2AE37300994
74EE07B28D03926C597BAC4FB432D884191966687188466F7604775C5BD8F7C6
10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /gamma put
dup 14 /delta put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 66 /B put
dup 67 /C put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709006B68486B326967A28D
41E878EF9CDFFA015BFD11310CB2305640182A131B96D73348B7ED8D31A29D7F
2D889D8EC4F6C7A55DD179594ABED611CE4DE790CDDCB68CC677A362B879F4A7
F4F84113A561F6D170454B0DC4DB2F973E21176E5B00D0774F0BDB3F0E22D753
FDC635611AC85411D57FCE2CC85BB5DAE17BC41F3C1E5CA1BE272ECDEC1C574E
E68E33D269E90877555B1E9AF694D44B85295968D0CCDAC4B5EEFD6E6F284597
DC1016F2D7502E91FD71BA624C499BC62FE7B4734070F8C123A633E51596A0EA
852F2EC862FB85A143272DCB3573DE43FDE7D2A8DC0A7A118454B0EFD355444F
1EF2CAC27FAE4CA32E601B41F93B4A67AB452296C94E475F71D759B808FF722B
3E0D1366574B14F14B3AD58805DC0020DA959EF524B8BE47F16C0A11097B59EC
B9ED4D16EFFBCCFF0CF648981BB0F888CE52AE79C0C7596E61997B1C1F3C19B4
A0FD935426E1A7AFC5E8194110F5C510EA23F4925336C274C5E67AC4B2F384E5
1CA45D81C33BA4D13E8C03F4B60485EF94BED0241E39A771747F79A79D9BFE19
96455987BE9A307BB4A1EBC0863AC06F0BB192C8BB84303FC1A7835D4703E2EA
572859F28C4A005442D767AA1529E8B1A2C0601C57F5B7B1717C456ED996C6B9
DE9E17792B70B2B343DA5EBB67D9941E9310F38C1F6ECCDF4C2773BA052B475D
09EB09469D2BB86F7BC232B842C86DE5C7AD5A8F0F05210CD908AA7B6F582F60
F9AFD245739E04FD5DEA0FB07BCAA18723F901BF5F6B6BB34516E95531B250C3
F352B68B3A44C5A4EFFB389E676C1C93D49B47DBB0BAADF97494B3039C1267B2
FCC16AB586FF1FD4C383E2785EAD36F41274FB0BFF9EA220C6E9A7B5EDA26186
578223C50EB478AC4131EF3983A51C08D9C48CBADB1212E15060265B49FF4375
CF877640C27032E69A65588CD61115FC966FCFE5196203FF7FB6D35742A408FA
77154EB77D6F524816961EC14B5541515438E1F36DBC13E11854A23AF95CFE0B
595074FFD037E05D5CA52882F7204E9DF81B2CF0B44C1F94B77B22E158BA172B
637AC062FB49D09FC3AA880C2D40608B51B17B14FB582DDFD9F95CB510521D25
E3923F0EED878BB5DF2967134BF5654FDA723BDC312FA582811CDA7DEB07116A
A3FC8324D5FD6E41AC58AFE9F2D4CA9D58D047FADDCE8B63D758CB167D5481A1
CAAC5F80817E2233B220056CFAAC2215793E91C43BDDFC77375E610F3F6C7C3D
E13338F52F2E752C6A41E086DFAC2247BE094A885352C70B1CECF2F83A7B3D47
542FFF5987268E60E7FD64B017EC6A8D697BCF5A9CD47B1070873F9D8AB139E2
6532E746B598210B22BB6975FC39E536B7741E7137627407923242140510B81B
1D598AAD2CC54B09E15B8B03F95D21E9D654E7A012A9A03F9BC4CEF9E22CBAC7
6B0648184969E1B81EA6F24013FAECD1E3B4B5ADA3A0E6C602DD8753E266A38C
32CA6A6C6F886F2773FA7B7ACA217066183BA04BC89660949F89E6F740EB0CB6
9A2D2DA391F664BCE4148D378E3DA00ECDF9FEBE424C8D607EF6BABA6D1482E9
C237020C52054F76ADC3DBFF65EE19016B50905C922F30118A0B30CC1FEFA619
9B33F3C1173535E17C8882EA5A3839BCB53FCA127E78284481518A84B2D8EFE4
C6EF055B5E1EE2EDF7BD08F26568DCC0897E85499FC37B8CEF9202DF5B7A4FD3
F444543483BE7CFAA66508B295608CE1B4B4E7EF3018157084D444A78F48893B
9B33A1D6090CEA07382BCFFC85844223E04BE24E0A032DB9C0656BE253F321F1
FAECC83720BD3C84EF6FC14BDB0EB49BADE1D554530F2270D0132628D7CAE18B
426A3BC6FB38AECDEA912516039C6C170D61B7C3D636D48B5589BA27BDAFFAFB
0A5DC5E7B3061BB6599DDE370690A4380917962C18EFFC6774F6DB08B799C596
68571FADB35D9A3FDEF856C43D283247162C392D23E6E34C7530420526F9A0BB
461BB0718D6A01F62363124237304AEB6B281F793211E318899050D9E5303C9D
C3E1E93F0F5BFF2B6BF271B4E439800F46792E1627BC84CBC7375E8493D0C03B
FD5673FFCD5B66A4A0AB2BF713C979F3B3DCC30B06B992E6E46EDB3C97740BDF
77DAE7745641A8C29E25A879DE77B9241F2B90C114333B1683C974089DD58B98
3E6835FFB9F3DC7854163C059E3458FCB65296679CAC34571A3BE0F1BA2D161A
8A8FF089317432768E723B00D50454671A2097E6BC513D2103C4B493700A6122
E3D0296E18EAC61543D0CB12068E28E1E5D75406AC45A942B8D91150396B95EF
91BF5AA19045C8002D16D084A1B04DEDF593F484D342A4C87FF2436506ED8F07
AA6DF1B793B830DA3911A108C02DCE1618F5228DC81E5FEE94BFA683C896C8E6
E83E28971BA4146388D15056E2B51771A6551E3F6A02F092672E13174F471868
E87568A844EEA01BFC9ADB1FFE593AC43E8FE3947ED1692EF78037A73DE32D6B
135575256D13D3B3EBF3F172F56D775CFEC9EFAAA8AE0A5D150AA1DA0DC5B529
BFDE8E2FE41ECBB19903CCF604CE5BB11D0640DBA252FBF47E88C84C4FC217F4
4C66B876102BE8464D033CDCF936A91FAFA495F70A51DCDAF184AA96872C70D2
A54DD6DA4BC7FEA09F73EA7232665773EA0033DFBA39C5C1E5DEA600BA930D3E
945372BD81D3DE3CD424E81D1A8F74F3E4728B5F6428464657F7802FB40DAB0A
92F4543C36E96C194CCF397522B547BFF593CCFAF660AD3A8F3E1C38DAA8E4F1
00ABEA59C54B1AAC7B85246EDEA00762339E4D61F587A3CF299BAD6A8C475D18
8C72806BDFD0DAFB5DCAEFBBA852A8BF8DDBA7C4F4F0E5D522F81D70C95ED1AC
E04E56591EF314D3DED15AF0DDB34C4506F9DC5EF42B23DFA178CC169F4F44A8
756054708E98EC78850C11EC7801D9C7EA82F00AA0FA26C4B82570C747A08126
8D2AED0891907FB943EA9608E2E41F22327781F43B2D09CFB61799DA12672F30
A93AE3EC082A7FA861500A83FAA9F0FA341C7E7A2E9DF52E68725F5A0BC46543
D665C15E06AB565F67E530075E17962341509D37755FA5E87FA82DB5910B5FF9
9B6FB5C26F6DC63A13D510899F0D19564359C63C43626BE48462AF9FD5692809
173E34EA8BBE39D7A6C3D74B91EA0194685A3066C19D088CAA09A0E917A894D7
1468C78284FBFB2040D9A1154FB49AB6782EC920A6F0C2B5C65ACEBE1FCC439D
5EE3948BE416DEF4F776AEBC7614014AC5C9FC4FCE71D936352E941562F02786
B0C20CD610211E591E03D9930824BD5C50EFD3DE1F985F13AAB1136D9B70AF84
3A87E8328DADEA3101E5B88B02BAF7206EDCE2F2982D5660344893CB22880A4A
7E4D3B28630F22F5035F460391F5F69EDFDB3C2B992507775383A5479B831022
F57DDC7F02ED0D8DDCE0327130877D5B06B02A9BAD4AB003BF233CD4BA007FAD
3F09301E8028B40D1EC36FF91638625BB39469C222DE6B595CD9E2AB2DB781B0
D735D8B476802F921451CA46FB1E8DFAE51FFAB407B964378959D4588A258243
FFB4B750C6C90BB35925D502908245FD480F14E085F24E20758BB02899E23544
69226B718E3F8FCB6F5FA297F86C12581DF0EF157EC79B514A5EF79F3AC58EF6
792C2AFA891B2F9AD9776F8A3FD92E2F7B3B548D3B467CA7BB7B0DFD32D878E5
9E4EA764663A322C736A7F05A64A7E6AE4D81091B762A42897BB4AB4AB471659
DCB5B406ECFB14B7CCA3AAA5F8AD789A503AEBDE22A4D0956F012065F5D8AD25
196D5920D78A27E991CE8000B33A70105F71580A4DFA2065A8A60E50A05ADECC
E392C09666C7934281E8A3C25B95B8C52A890301AC922F26C6871C6CDA4FBB99
25A44A94283E6DA0FD0195E2AC7ECCA9D59DB699CCE063FEA799B6AD48964E89
EBC3C24B65397F2BE05A128F1654FBA5D58B83A8D6B1D632389C2F4791AC1BEA
CEE0763D2A28BF5AC472341D646669F45950B8CAC8A7A016ABDC97E7F4738D55
EFE06A60B8DD29828ACB58D90F040AC9BC19E30D020FA95F404091A4C286D9AB
C687288307CC4164B9837100219019B10C5F8E1B3265754A6B2D110AB5BD6DB0
ECA074EF99D042628BC6EBC0D26AAC6CCDB62A18D6B0114F3F2205515A1C7C56
46373EC6F7A95B3241BD9CC3EB1E3FCDBE77CDBAFC3539EEDDA368E3E32D4C56
8967A3B4098DF20BE986257937C80966F4D3096F8BF1844CE9107EC2894F8F6A
7D56FAA50E3DC7FE8345FA8ACCA5986F3A0A1DF7EFE965F38A8C63DE3E63027A
FFEB000266D3E97E68323DA91BE4BABCB74E43A1AE34C68235C0B41C4104D652
19F0897256A3E65A146B7220941CA0F0FB68F9DD78B75BC034B521F5A23217D6
7BE043DA55D21B3E85B1C3561CB3BE0A982CC91612D17F93C88864B095ED9354
11E292AFA9E15BDD8F3CB1C57F6D2F7C1D5A05DBDFEA595B9BF9E1B923BCA782
64990A4F776016B29CF0837A61236CC44A93B03EE7A9D2B44A51352F02B80351
BF5EE697DD4CF0E01AC2BF6E7317BD06751767B63BF08620C78420F678B5C458
4A1E609553E3988C265DD8E09DE1755209B075EE20F510D54AB9011892D6298B
91B9456DEAFCDAAD56E42B30E00EF224F42E35483C1A6504151A1ADB10D1DA66
0179EC7F539C8A3076BC8CCCD6CBE4E9EEF291F8F79B7F086D057282735011FF
D6F8F89D1CF0B7381A89CFF50BAC481D5546E3C6A9FD038EAA8003ED833767CE
4538147C9BA5EE29956BAC8A41CDD11CA9C0DDCBCFB15EC31C5E904E4DAC87E1
CE4E947B362E054800D1F74FAEB77D4ADDD1CC647E313F346EFEAA2B337E819F
EDBBD8A71A7A586677780919E3D28B5394F6A5EA5BA91FFD584EDF54CA10CB8E
25CBFDDD21C830454FEDFE91D7F11E5F658BFD72BE650A8B273D831B9027D7D2
620BF86440863623813A68EB08974AA9CEBCE990848561F6AEE43B613EE972A2
E4FB46159ECC17FD3A0C8633556D26C8B122C8D3FC4E54FF5FEF7738379BFD70
A8FD9129C75FFA9F6ED04B0904517B13F06D634BD38F6AAC12567D47F50F7AA8
6E194578C85860A19F0DF7663AD7395E61ACE903DCEFF46B490834FB8CE22E82
7FFE82884FD76A15547BAE8604E63C7B7AD4C92AC661C05530D4F3177F268F16
E8C9D98DFEA957853DC7C80BCA644492A506788F2BDA3EE997B9917AA6F83BD1
3ADCDCB90A6DE28E820686D3C6563DAD230A43FFA8669295BF8D04C7DB5564DB
5C657FC5C77126F44801184184E2017E43C939C85CB877F64BA9FF7640B284C3
8937817BEBD84051CDEEA4586A1ADD09F79641E648EF8D60026CE25010A26178
0D2B04130668008AF31992BEB3BAE2C14E14B68C6571F0D1FF05ED4F94232FBD
EAF27C46F87A70A50A9CCD5AA6B9F9608AD2EC096FC53D82D1399CDDB78CB163
160C51BD28F27EF18010BE08D1AB80F65BF29EEBE53C322B75FE5AD398BD27B8
41F26F5E7DE9F91E9F8676C4B60FB2918764E2F15122FD8085DF948E4E35C5F6
978C022775994E1621D8B6C7D180C868DF8C7B1E20D8477BA972D6FCAC1552D4
BD81CA0BA411429519AAABB88EF03EC16CD3BD5A6D3E366A42A0F9338607FFFC
84EB83FB9990CBA16023ACB43855A0BBEFA8D8CF18977A829CCE9E2DBB0220DC
EEB1A61287BFB8E8FD5567AB863F73D52769AA2C87D9568999D532D59A459ED9
6879CCE7CFAC86798B1CC56C23BD3E69D96EAF275A387C9DF5B893C82803B13A
9426D47E3B1604514A1D64F45191BFEBF84D5FC395FF114D78220EE7D96BBD4A
0948107B0B793C5B959B07E5FCD6A45134F51ED31DE20A15D0A78BED8B8494D4
164439930826DCB6C688DCC40D09F2F62B6F59D35FC331FF8F28D0395457BC24
5679C0764AC68AA9008C4B3E2F1F3485DFDF2C7F3AAC561E8CF56B96AA709E75
BCF2382F58D7FEA28E0EF3E70EA627C8D271919510B93B402A4707EADF270B9B
472197D1A2DB7618434A5D444F0737D2AF7E2C5C00AB6EE0C7E29A52D87B4CE9
32893831FE950225E721E846FA582A419D15E5722FC9B6F424B57ACE4BB8F730
18C9D993073539F6879E772E724922497171BB42D6519F49323876196D04A80B
6C4C4CF21848CABCC2C7E1CFFAE6D74CF1632775D95595F57A00FB4E8F460A3C
6855B46BA77C0FF099162109E4C81820778760E76BB27A8DC0F3620FEB88B0FF
9C20D3EF6AA7034F63EAC946DD70E80A81732C0C8CD0A1B6FF8A52984FCC6A94
0F195D2973FD4E643C9D23FB0E9BECBA7517C05E9A59AFABC90AC49B4494EE48
1E6674C2DE500248E2C7F1B8BFE0E271855B15E344B91130FEDCC277C91BFD44
99E4A2D9F4C4899A9333FE1B77E9FF47DDEF6F0CF9388B317F83300ADBA1C783
654841564CB6C1E56E173CA844BA3317582510AF9A2B4442BF172E19E730D16D
87C07CA5438ECB96AC47B2333ECFA8F2021E65D9B340A1480119EC90A5F415DF
4FA21C2C7A8B147379034A87187DB9FC886A0E5371437FD438DF6904F14A9193
E6367C40B806CFD983DA9D208744DDB5086140BD15E1C5D505DF0A84B32083D6
F5550EF123669AA283F42C084102DFCA800B18BFA800E2F36FA1A3D1BB85DC35
EE7B5006C2C6E3DEB4C8538B02CE1A84FD54CF14836FFEDA036A58D2A93C0BD0
92099065BDDA863D9111961BFC4C77559CF7A372151BF9D036A14916CCB65D8F
07C9D54ED9180C3D0DF62E8B9F81F88D650205AFD6862CEA77BDD4EEEC9EA37A
14FB62CA4A26E50280C224B2663C3521BE6012DD98B99F89362EED1CC10DC414
BD62E7B5C152D8AA0378C42970EE9D11786C490E20BB4D35B0AB3E0B60C34E16
E1E01834C72688605C4BCBA364EA1DE4B768F35E7566E858008BD60FA3F0E154
490234964EB9E38A1ED036FFB290C7E05DA79168B2BA4FF17FD34D04F2C87C7C
1C41D159FA722DD9FCA93B223486702922C5AA8408BA7EEE13E5251D7EF1DEF8
16B7A1887D0E03FB4128D129E49D0781C1333C29EF9D790297B421C42813DA8E
58CBA72ECE78461165C4BC0D7DDEFB3543BD979DFE782F2A9700D3C18D89A80A
372DFE79D68F272CAC2C775B6964AE086502FEC1A41B6C93DAE7797BC6B88981
4BC808F3F3575E58451B3A6BCF2C51560C224390BA29A0C0F88205A808D3F387
7AC4E7264E6B864A3EB49A448DF8EE2FF9AF0A6B732783D2AF844BCFD6350633
AC3B002000226DE9729E88AF412A5BA09A8D4DD3BAF2DA5CF2E3A6410F8EE41B
A2BD5A57868E992791C0E74D3D495BC9B6C2691D83C9D61A8511747ED7CE950D
4EBAC26AED0440363BD3DE9FD44381EBC4FFD9618E27ABB1A172D21668EB93A3
99BE711B3AAF5836AD57015FB5ADBE371BB9009C947845738AAD727C8D49EB9E
87EA17111EFCB645200FC33535309766AEC93DB35A74DBD383708CF3B0EB93DA
0FB0BB636C808459EC5CF8CFB9A7E7AF342947BB5E0B9EC99D993E6C133C2326
6D153743A4D179AFD90AED444AA4779F5C487A8F407FF45D06470E7CD2B1512E
E9659EC252BD122D4060AA0A56DDA0BAF4CD9E608D8A36F17BD44E98B46DB05E
0D56608E7EBE1F9B7699105676531D20DF8873915CB91186B184C9F70A481F5B
A0CE60D967D5B2AEF28D424E94D22BB1DBFB2DC49D6C28C57BAC2101E4F815C0
9885D8B94C5DBCA4CD204A7E91E4D008EE45B7D61CE82F4DA988C4D17BB67027
1086F9928F607B8C20298D3FEA5A799A0AE15BC8E1C6ECF528916DA735104607
7593533849274E9A9A2BB5E56AC3291A208D90C512A4216BE787736A8CDD5064
3C0D5C1BEC3EAA75074B677C29D3E7CC9D3C7E8B0BBC218457209BD6BB6243E6
28F7D0CAF269371E9DADBAE7175146E8A331AFEB7664FD9D62700B7D443D32A3
1ECB0159C53EED3E7DAD1930F4F02BC57B294195EC3BB7787A76D2D4AB0A3363
E3ACEF05F642F697A1E3EECD498913248D29E874940A5B9ECF8EC0BCCE1E163F
0538FB5564E5B2671AD79F1533E85EB527A67353F1F085DB86081EAFA9C47F2B
5FECE17C2BD6631A1D29A081AB3781BBCF4E3A24BC2DCD6DF0D5AFD427A7E030
922609E039A8A0E0FA4A5BBE300F55D7315ED726645F92AC86EF0D96527C4005
F9317D87B07061C8666D5942E290D438CAAECCA326E803417F5E256F3F796ED6
2F6A7FABFAC33E863CCA9C18FA8205561D1122E08F7A991FF0DF9F8D0EABB3C6
A5EEBB782173C4E72405D07594180A297735B00EBD7204F5FEC96FD39BD7435C
F3DDFE2CC562990BB20E6FBFEA917E56B5D3551C09DEEE87446B138CA28ECB39
545689AD66BC31C3FED7B811C55C8DF137C3012DD38BCEF70777B616181ED9B7
51A49AB58F7CEDB50D394EA730C38398723D28EEF42DEEA0E72EDE9A3A45492E
52F6949DEA3BDC47919A41EE086DB4C60492CA1038FEA46B359C27A1BE669FEC
A80478E0109D210778D73ED4D668EFE4B3ED457374E7016A9DF87A9BBBBB01C8
46B200DC8F16A8B11663919337D43916CCEA54727940D901536E1B3C19869154
9A5DA56A791F51DB190F89891A978633C7A34E68E422F9D456947172B858376C
F219664E209E25E0BAD1CBAE748E29ADDF6AFAEF96BBFE367E795D4E3BB403A9
79F8227A3F3264BBF8969E418FC920059690CA35D8BAFA264CCC25F7A0F2B68C
BB97D64471D3E6611C56A63A9E2CE6C8D456F1C8AEF3A35A20B5E94E5C27B744
C369875665672146159CE8A23219EF98EC6EE9867AE5A76D8D60441E898B9240
AB96EACE40380FD15A93548CE867AE7C4C44E3E1CB5FF74E747AA4F82FC64B09
4E41A5F00E905A3481194CC568FE5698B4FB270CD1B348006BF82EA649B6E012
FB993660DE4C4B84F31CB607692B847C06CB87A769721CB05CDB20E2C7D55581
8C298634A913EE52BBDC9EE0F5D9F3DB6DC8A2E17D57616E3BE2812522003D84
44EDF6B3B65129CDA1597743CC1AA4A7933BF4B55C181E3FD343F2881A88BA0A
B89B800EC8A532FBED1A727AEA31F1B7EE84C624FF4482F2680011B65CA4622A
634332C7CF08E4844D2C82CE006545488197B2230B318B38AF793F3AB2EFE129
00A2A4D63732E7D56CEAD73D6FF111A24B7CCD29B915BF08084D10074656B4CD
ED1C8152C875BE68E980738353C1CB9DF3C1F18D5D15FD2397D7E4DBD1C2D120
E49EDDBC1F015D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/UniqueID 5000829 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 66 /B put
dup 67 /C put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4962EFAC0FA86B14F3C046A1F7085E40E99C0F2841
8B2C299411F9DC8FA0C8C7E5D7822A10D31D881F6C47B6C47CFA943FF9A9F5E8
D5F1C3E6CCFA324059B942FBA2C6D0E9A3D080DA0CD80D8DF76B0FB6BB706F45
C84054E62F75294ED126A95DBB4FA2D09EF80D1F2C507DF980D3DD2BFA3DBF49
6A99DCC954BE39E51507B12ECDD92C397E82B1E979FBFCE731CDDAE1D9147448
8C312DF818A0E08266A2B60C9C0902AE64276F7A1C6D7BB2EDCCB2E3B7659B13
AEA47A527FB302716624B48AB754218E2E3D99115C606CBC90B5EF73B9F99439
6184472986249C8D8E52A404FE76E17FF814D5BDCA95AC580B44DAE8C593939C
9E7C0ED996B9D2B8118F71BC2F0EBBEA6D7E18FC7CCDC78BF05A034BE39DF9EE
C6BDAE8886C7058B15DABA55E85757137873AE811F25AC7EE3A0CCB8649F6095
7249EDD95E20DF06719DE1E109E5BEFC2A4098E77020110C37A90B5BDBF09775
B4356BF8281F2D2B0016B2B29B3D67C267E732A8DDD131B064946D81D83881AE
AD3F826DDE6135241432641F04D3FE4F25E27C2ABE4AE0125D437EA8BE4B8D62
BE229F35324501AEAD94AA78F850536004C9F6BBE03CC7D10417F50D32956010
1378CC2850D82EE1A2F0509A035AE3749991DE0F357D2060B029C1C80A0AA1A6
E4AC50E58153FE77269E171134E3BFE65431C1536228FCE80FD44B49B8059ACF
E6DABCC6E166951492454C7669C9B96D0089EA127B4A5EB38E31C7FB5DEB9C2C
F422DFFD3B72A16867D56C8B7B4F566F04DA0A5666BF518ABAF1BEB97B385224
4FDEF451E11298201830F4A755D4969254BED67B725E515525C297CB90A606A6
0DEE888C56BA742A2A061F44F5F7421368A230FDAC6A90B4BF5B86C0DA478505
B996CA48EEB9EF955D402CFD5897BFDD86CA4D94AFD962596E38E6F6AE9A425C
AA465C3DD4FF1B6A2486BBBD5B16656ED1007A51585F22F40450522AF2F9645E
FE90AD3775B89490251F8C2DE903AC2707472D9853AA257DAC50E8161BF324AD
200F87E82DA74A33A22B01959AC88A1BA538ABBEAEAF54599F8963309A5671D4
E76A43A3D559364D0B54B86924E533D39631CB21B51393372924F1BF9B43100C
1560F417D042139674055344959C3DA852C683ACEA2FD94A341C330D52D78DAA
C27064C9B44350337F5ED9E0E7E0A0472B9ABCF6BB0ACD1A5C5E4AF0027B3FF0
8AD3A2BFFAD946ABBDBAA3CFFDF1CA4B2E02ECA1C4A521497AEFAD98BB9ED734
44D48A4E89A84507EFF750433469A95E605A58F8C72B329B23E23252890F27E1
73E96F463FF709C815DC73F79D86A0717BF3E3E85503488E2ECB0886E9997139
0E0F56F7A01A5632DB35770ACE9D5D4363707206D79E3ABBB849CA06CA8ECAC6
86A1C2B486F46CDB427AD76B8E747104A9E1DF811157C9F27D27A4BBD0151169
E37BCB66F2ED11F6BA30BCB1EE8742ED60AB5E6385069D470705E51EB288BFDF
F62E0F08763082A23095B62F3BD8323447E6FAB5694640F7CF6CCBD98406424D
0CC0214AF3E7483466115560E98AEF27BD263A8937C81A2EB5CE44303DC5496C
0E59FE5E39C3AB454A950E7FE333E16A4C82322B98FA30C94BA52B6A858266DE
8C9F3042BAD6B3A39D67F8A76A681471B54BF8A6942A3FB9168AEAE03A539B4A
4F34CCDAFE3B451C42D2238D4612E366B0FFEC78CD061C36226CDDDD386B6AC8
2DB095D0CF41866145BD8DDE538E77B468AE32BFE0798B05495728CC5423B732
4CCB73A434D26EDBCC47A0F5332FDBD5DB8DBC87D14DAD3088AB0C66D2B31E1C
5E8DF96B9FE97EE244E64BA1AF30DBD02CD26BD86DA320A31B5594199127CC52
D03F2F34EFB6B4909B2BA6D06312E1C963E05693B876E21CE447D9E9D4115A86
491E4981D2F24D44D5F43AF323160C02EE13BB3F838693F1BFEC4D31119B32EF
AEE4762DEE8B0E681C6B9B482C6930852C0122AA3195065183DE4367EA705606
D6F3B95877267A74B7224CF7A2D39C44AE3BB1DA93139CDBE5FEC08107661944
181863CA0B582895A175B4104D3833187EC15236588A2A6E8A5B79A185A6B529
F41FC2FC7ECAEEFAE0B1ED959C8FA76D06A96353708B29735BD59435D8A5019D
23F36CAE5B84ECB10393DC09DCC0036BC505B124A083F8F0D6549416F99BB5A9
8E84593023811311518F5529E09463A8E28B1795C87A4DB07DD2708DFCECF199
5680F4057992059D1482DAA3520E2C95A115B0DD7F82354E0BACE67D3AF7F594
0E56E3A59B7229968DCAA4AA6B880B6B9B619766C0F76E359A2BDCCAB765F394
8ED5ED90A548FBE43046C3D731E4A4F68265D817D7D5DD79585BDC60C750F8C5
3C79D8F7BBD4FE300827D4CC78FA5C5A2CC84C2F0C2AA92B8E9A6B5D4F457DFD
BAE8917E7BB46E30A1AEFA4F40F00752F4F02A20FD4D4BB2670AC387717B8EA0
C2533E9943741EFA53D8C9CD918598E9D988280820AFA11E28D092BB8327A7EA
23C26BBFE61BC57764EB869907156FEBB9F0EE5CA7120AB3A4F5F69789876758
D01D57E9BFD63E4B1F5FB37DFEE6CBAADFDDEE1F50183413ABC69E31807A6A23
A7C70CF329BF04057E9A3E8B12C380CB15C2FCF54CACAFE050A34DD6E0155061
2C5BDD2107DA040254520DC5667D3CC2412B4EC1630B8214E7C8BE0781360701
640B23959CE3B59CA8B0DE8D35ECEC94090BC7D3CA1D16A333C4B14355E58A0D
8F3AA8171E53BFD9A90F9E7AE3A70C2D2896BCAC23C434C5C5F0CE5120BE475E
EE16D7718DED60AA61474463D3B5AC67717AC94C1D318D6B6E4AF9872C1535F0
7D677FB864A09CD93247FEE2C669D55B876DB44C0EB77426CE39909B5B47B877
734DF17586440088549E4B25A9E343F133B4DD9D9BAFD8292427E30A4C45F865
480F1384DD46C30C4745F4DD2F30FDC0CDB20E4F337059D400540A2192EA2161
7F6B4472F79A056B4B82CC62B1190F28468F1AECA057EED04988087B5A60FB4F
2A4142021FA118633ADA8AE5AF7EDCBC969A0CB2C92A23199EBD0960DB481949
E00EEEAA2E0E110DCB6E1C0388AEE6DE054F9A15DA07BE731B85EA20F8FC53FD
A20A5127791C92186472AF85215825AD235F82FC3CE6D8C5B81A0FB1CC0C7669
71DB944E54168C53330AFED8070E4D48B5A5C67872C20EF2B96BB88965C8B34B
80E50852838CFD111E32142FFBABD87F864612A32A955B3E27B696A73DF408E6
B885A79342DF901A6AA3CAF752352AE8B87697C5E97931B04E663B0F5D0C57DB
04D94CBBDC33062DD71E247527CDA9A4F8740D190FD4651A3D278EE4826B015C
C14E7E0B863D2377E5B9E80F7CC9254BB92746DEF052DFB3FD2EBFB5649E64B2
A6243C7DD92A10E092F78BD04A9BF3D3320B84297FC4D0A11DE9D002A79FD1A5
4E143E36CC943A9DEB0CB723AC6F3B8C215567250248D7234F634A5244548FC2
90EB34A523FA2164FFCD1CD08C4A9548BBF3CF4E9E8E5767AA4D21F9B48B7141
5C723D226B7857C671FF985755C6869123F15288A4B052D0AF8519F181F4BE8D
EC0F75BB7E1AAD2B483B58607A7629C873310BB2914A4F34BF28F159B1CB3FAC
447C66218EA3015369BE3F4C2EC9888B563242CB976596954D73AB816868968D
F9FB005308156B1F606508F43B66B8938E1AA4879EC68B60E183183E09BB1D1B
925241DF671AEF24EBE7CBA9F56454D89BE86CDB7225086C7C2BFAF9D2C5F17C
9306D098D411C431CB3B41E91AAF89E6C20B75C83625EA42DA232BFCB57BD5AE
1E8BAA504AB50AAB72F4D487949E4A9DA69B28F8BB59CDC045FF697E3C5BBC8D
C19F248048FC0F18CDBCE23EEAC49D39B427118C04B4F630952A5BE05CDD53A3
1DA5C686F4E4A3F297237EA417AB594B38EA4EF4978A6FA53260B8B4164D996E
F8D180A8053DC12D700D8FE91FDDB9DF9056F5A53E386162C409E28B44558E3E
38609628904840B1A3FAFFEF9D2184396D27C33E84DF868ACC668227334477F5
DA86BA3969C133003751B70E33450AF056E1AFB6F93D9073745A432FA4B8E7DC
A4C3FD241F055E61A76BC939710FDB6D0590A96198230B5DAE8DE199B44742AF
7EDC2F1F0A806CCA9B61557C9467378685B85A9826CB67E52CE9EEFEF0A69DE5
5F7EAFC46C3B7D4FB277D2692A8A564D4206757B43FC7ED58D9F63A42B6AE7FB
DD02646B0B2967F8B65C8151F9324FFB1EED94C6CF76D67A2F73186FD3FF1E78
15E0D948353EA90EAE944A224A249514006F477B7D42DF773935FFECFC9D8A01
D29B65CA28F76A66AAAEDAC2E47863ACE0B7DC076411D6E31A13020BB2E89EF7
A06BF9F7404AA35E21522F18F95B9BB380C3405921C954E94ABBE4F9BF5661DC
DEBAC23C5754CDB7FF55EA98D4803AEA094875FAF5BAE40DD617838B17C61FC1
369B917D5EA0A2DBE39AF9214CAF6A6E8D3B61EAF6A33E726240931DC6D721D1
5B82F822F95823CB42051513DCDFD6C92242904D51B6F82D6CB31692D53F0243
693BB738E485A28813607A375840DD70F7829926DEEE5E8428827FE78A64E31D
31641DA73273378364C612187C2E25B94731B753F1FD1485AA5D0AE25A32E2AF
B4FF1A95B122ED4FDD4D31A1E89988913E3AE142A5B0102BA478EA53A3A9E9B7
679DBC88640C793B7CE279699C85A202B37ACBEDE9BF70484EA3E60B3C8B501C
1A3AFF4C57B0BADF6655CD958A9CDAC882B12F51BED5E1FB7E6E290C2BAE650E
F9BE83E6CB7606EE274BF4F40F11EE6E26FFFF36F1E13188B3B9C1D4E250CD3B
E7FA0856A5B70EB0A7B9688D560DFB690126EB8C18AF3673A056DEE74E134BA5
17E6ABFA0AB7AABEAFDB721B9B5D8D1115890119A94AE3930DC186B1A83A033C
5A4FDF590AC2FC3B1BEEE3B0F3DC8A2D46F8D983532476A68C5BC0589C5E616B
14AFA75DD8DEA3EEB9B3114B97D7E5433785FCC2E9ABCCF10D224B4FBBCD351F
6C28D4B1484248B76D581DF1CAA56D162EF5BC7FCD40109E8435E16F062326BC
9776224D85C515A5D8334E7F445F910522F8D185A9AF10A91B2BEF86696EC977
4476E76898DD97A85BACF393E6409189783B5DAEC13DEB27E724C63D36B3A0AA
5F611F32C2B6196BF8DE7E41FCDDCF013F4D012F593CF665C94E464A4C4FB849
05CA44AA0D62A45C96461DD45B92C635150D5D85BCC8D05CB453A09B79FEA4BB
AE1D5FFBF7C879F391629C19811694DFBCA772FF99FFD4D677532B08EEB33316
6C35F81896A5EF961122CE8F7CCFDC18113073A5D8E506CA9477A39FE0335E2E
4ECE098AEC27C9BFF6C99E4B7C9A1459B776881346FA03E85C72D05E19949381
52D93A1E66982FAFEB52865CF34DE0EAC829F5FD77E3CD9B531199E1D920D659
F391DB0DFE9FC3CB3EFF8F744B96CAE27369E3590BD8BEE620BE8C4F9C98141B
2D005E7B956F08D0461FFB5E7CAC710DE0D6526C7D044D85D18D09632E4EC77E
844C143AD722BFF6FA51F51EC70F71C29AF7B7A17B8839B434ADE41F372D2352
74F1ECEBB532E60BCCF6DE2BAA8AFF9B77A847F59AE3F4D0F98707A0514B4CE5
6E2138C450C6F14ADC348B1150E3948BB9D5BEAFB6121CA443BD92ECE11992BD
418C87D8E4F14A113FE6CCB74C00C04E19ACB6565805F1DE3EBFD9DB93AA15EC
0D818DCA9A57C9949CA1D2E8B41C45891C5FEA7929DB2284A0B57FED9602306D
31708A9235E101C7D1EDFE7A2B4C093CCE16C0AA2C84DB8424C2818CFC4E4C3B
736A8CB0BD6D33A26FF8A896EA27D9BFC12472235DA23B89F8D64B5D62A8F17F
4A697647C118263D4034F351BC162EF187A01410D12CB4B03F1A2FA08FB078B1
92E67990DB16BEB3278A90B3510C3175C7CEEFD97A05E09969DCA5D3A2C77135
FBC5B3F3868BFFC6288CB600719562B2A3E4B0F9AD96D68B8CA26CAFE8A995E9
43D9FBAB43046FE10125B0AD6D1B35614206D9BE929A1E80F44C71412E65741F
453EB9332A5B1D810A07CC14C075468107905A438E838BEBC422D295A7BF50B5
1C7F0AA44BC141FF260C26778104B38795F55397321F68FBD7244E5BC9B0897C
390CB52D16BF35A769E6D60D8ADFC464145FE79957A64C35384AF69C73CCD152
C56099C201F88759AFB7653CA7EF4309ADB7B8B762A7E6106FAE7DC8CAD02F73
2DA02C13110B13CA585BA75440A6FF124F74018770A1404F21BBFEDA2F8BE40B
54375B1FA5B04DF5FF196F4DFCCDFDAF27F0BB6F445808E7314C34EBE32E971F
B4E18135CA123E1FB9F54BDCA7A9E76352372E268ADFD1D247827B1ED428ECDC
4B714520962F482F3E385209BF870887A3EC970F607F197581EEC8B28B6D5D0C
2711FFED7E36E35DEA461EF502A5C61BCC9CF9DA0D8FE750888295757CDD8EE8
AC8D1F14A1E11D63EFF7FF10CFBE9CDADBD4E26ACD353C2D4A24A709A38068B9
1BC4CC20850F9E1A847A922F9009A1D92573862E2913293FF45636D6DCAC3211
099A741D3403A99CF37B93728ED6722961FA979B1B7868D5FFEDE754D9A28961
6C5626DF242C856300BE3F2D4BEA2EC4A5EFDBFD904DEAC821B02390874ED4BF
3AE7DB62906FD404D3A2012F003D8BD86E2E01711448D6C7D64EC6CFCC740429
425693BA553B7CA4294E4E1D2D60F683E5950EDA43BACF3AA768DC1B4950EE21
C83E1D39FADE5A5DD2F2DD1C6787180ABDE323FCB0819E2AD1517884DFD88189
84B02B6C6C8BD16A6268FEB9A91AF35720C9152B2E69BA714005797B7EE0509E
8E8AB11C3588CFB7EA2BA35BB44ECAE7CB4FE1E0FC00A2509E14D959B0170DDF
34FC2DF72CB31B761AFB9CF3AB3F6CB6A3DCA60D7C6692B3ED3E6B900777F64F
2F68C69442BEA081409B2DD8AED6A3E6767CA8B06DEE31C91646C22197BF6EB7
8C75CBF6F92864322AAF03AFD43D0374ED14C57FAED6D093F49A9A2B41DA6819
FB67B3D729BFB7DF87649B3CE6362630A2016FD1F7B98D45E8C3075920821B3C
6305092FBDCEF27AF828227BC08997011C71EE5592D345E1F41D40133EED23F3
67FDC07E8079EDB86170CCC9ADEE4E4596179F745134F23A2BB5D6B0D1A975FC
C1B6DE220D462E6FA40C821E522018BC1CD72856CCF521646823555364102C72
9865C816209032840D56FDCB2CB03E2281FCAADF807C859CD6AEC67E872FEDB0
935FCB6A2B816F93AA029EFD197CB6DC9E3DD5388CE4A86CF0DF1CEFCAB6BE19
4C2286CDF6F170714746C9E4D047B35638BA23F8957C7BE212F4C9DA0B0F383E
51774CB2423D14FDE466179B94AE6B00B76EDE154D57DDA87B319059DDACCCD0
10E787443CA31B961FB167A23A25738802C118AFCF4E5C3F7E8DC3D2C91EE272
EA0E44C839C60A1624CAFAE68B42361E75BE77A5ABEE51EA19CB9A839C4EC952
E05992576969E023A625DBB7991E380F758BB3B881C310F3172F1B2DEBF26A2F
3324D978C6AC1D1FABD9A42672BA0C625FBFEFE3131567728D7A082DFD0BF840
1F4ACCE3DB710E3B1F10DD373EE60BA72778E2A47CBBB952D7A2A85524983FFD
70C0F428B6108E3426E1D3A6F9C568EA37332B4250CA3C00D98398A1DB7CFC6F
FCBA62A53C7A39E52CAD3DE98894DDDE934675993E463B073A1CF9482D2E82AD
50E62BBD8021E48D4317CACEB6959FFA3A3C8A360086073CB7F0BFC96BC5E46D
75C1D62060B7522AD31047E7788E39240FF6AEFF2937173A5CCEF00C551E6D26
9E84CDEEB6C6A1C9186ED348C1BF7A0E650CAA92C644BD7D32EAEBF00C0E47E4
3B9DCB1DBAB493B7C507F11D132CE37EF927867F9A6D5D31185E8D235ACCBB72
783030F03560244EB640C881AFE338A6A50E4A5033D4FBF854DC381958E368FB
48551D189D1EA87D2BA4A79C632AD0AFCA66487D93320B1E1993B16F7191F074
F1537154B1ED25D4897ADB0ADA13D765F324B796959561C337D1035DF5EED453
6BFBD6C7D0CF055D3470DC3C75752742A6A264020581F5023676B7B73156BE37
A247A65F73AED95051BDCF47098F593E218363DCC9D1DDBCB66A95F0C4076667
A7BA63F184C50D8C78798F6132B465632C2B2838B6FF8C7966049DC1A2854A7B
ABC411C7D5EB87B01E443DFC0E433FA3B7EE9038048C88992B88C2229F5F67E1
E01475C61998FEE0AAD586A4E63634D71790F577F57DDAE180B7B19697736B68
5278B1732CC06EC19436A64A05594B302783CDC6F95A6C952C203CDEA5443455
5FAD0E073DE18473D62D14AFF07DE6866DF7E84900C327E20248F7ADCDE925D9
C680189CF7C8AEC05EE3B41456B7B93E6441D0D461EA8851FFAAC568BA4976FD
9F0CDA54A7A91EC2E49F2E9E952902870BA257695A138089DC438FF61E605CAF
B89D68EB826F00B58B998D3823ACC8B9B2B795864B33BC7FDC8AEFA0208B4305
6A00551A53FE541D1FAA8B3C4CF373A2E02D8BEBD3F9CC5DDCA411196EF24165
4B81CFF085DA3842D6BFCE1D4DB24949BE893132DC7586D83F7880B41065D2A6
A0B5F1134C506F003AAC91720F8513513216BB50B989ABC2F2EB1E9D78281B17
71047042437A7BA84D7DAF4A43EE8143EC2B802631F9FC13BB5239A84C43CE77
F50FE7EBAAFC5B55AC82BCD29B439D0AE16B40A4D9F8F0236A1B3E39DD261AF6
3B6773F287F8E0C5106DBFD6A4D092757C98C042AF84BFA8BD592B91653BCCE7
A84178C31555866666D2C89800409EB179F8C471799B51E56CE2C673AB48A02E
17E7C5E376DD4CC1F09488DB92975DC1EED8891E2823C0E64E8CA03B1926AE3F
84A31DB3FC821415B27953B4A88C15AF0E8643C2B700E7C20AC8D626680EEA0A
9A86FC8F6343A95A97AF41A0FD31883924FC56CEA077BA7897C8865C4AD9D380
B2C8A751CC7583B1647C32D5440A7FE6EE1551AFF55453D367CD705A5EA0ECC5
F48BC8E0BEAFBAF8181F1ED69E8780352DFC383B3E57F29AAFB7DFAC3D2A9689
B311CEA3E7D2C269EFD8562021D9D90E53E112A165C0C12F44EA10C34D90AE32
CDCB59D5D84654D4C892B58B5058073C429F9F5A09B8F88C6ECEF5231F0C5461
8C0CD0733B65088F705A2F279639C49A0F0AF4FEB699C4C89CEA01E5A63F44FD
A6AD1FCB0B759C68D96C06110983D55E9BCE4CA8538EDF42FD7FB8656227BAEB
01CE2C308F24D4F0EACB8BE0104B3E8956B987062BB572370FAFEA107A38D2B2
311A3756435DA3677489A191CD6F1726E37C7D9A7C0E6472CEA40CC67FCCEF34
CE752CE941AE7077722528D1609670EEF3071ED6DE8A6EAE5CB1247C281CC287
D5D35EB5D8671E98F352086446E44B1D86F41DE0DD0632DBE83F6EE11EB87B0E
7A99BD5A8ACC882528A7791837B2D2BE621A09ED18B38D6C79E82403FF7F684B
BE5C4197923F69B544BCB98131B36144E7BD18A4E518B8EF3A4910E3F1D3F6C8
CC822ACCF92764332EFB0D17C742914ABDABEF9F605A9C12DA02EED403AC3ED9
50C45ECCA1089AB75109A90B76C2A9616FE698AF17FE3066C94EF51F0281529B
D012EA4D959E2954A4681BB4081125A0D15731B0A9310D79A6A15790732FB998
311D335A59EC0D959622BD18154257F6398CF1C0FDF3B296C22690D4C583AA27
91F47FB65181822A40F44BF316F2F4B1B1616A7235BA3EB532FFEFB62BA11BDF
B6856B6FC6549376A190940AAFA28E791DE13E352BAC99DBD9455F466944604D
43C4E1392D273C5ECCB1A546F69AE955F542C2E4CDE2EA42A595CE4B65C86CC5
8CE49C803E06D2FB681B61791674D26C796B5395F8F5C5FF85FCE3E4FE59CA4B
4369F91D55B0288FEEE59527B3D99E775791F1E535183E1AA2511AD2D1E18C9D
CCD4AD3E5D9D90235E5026F93A2B75806C3B629306EA17DACFB1B10732D19F37
7D7E2CA343BA35B8619F1B4C466C28E370F9F7DB5E4BB7D8FBE794DADF330032
7C223C19487DAB3ED39AD6BD1E4AA376CCC0569A853853DDF9E6B25C3594B890
841FC4EA8062BB16CE2D46E346C0096389DF9E0BB1562AAEDB8A8CE7755A8191
B1B0B9B30519262FE5D08204E3E859146D26E26F5EFA7B88A0725F5C6CC3D080
34647D75EDD2E3FB44AF04C7C1D3F72EA26E03366E67AD4E00053F28683C7D10
E0750D919FB1075E0D29E3015BF92A67DBE147CDDF99ADF2CAE2B95723FD0AD8
27E4444D3160FF716B3DEBC9145420E71E39F91B88DB09B515C75CAA68251AD2
94D0F3961250AA1AB44078BC1414E78B81FF2502A99B23D54EAB67778EF8F7B4
C1AD2E8DD582F6CDB524E0ACC65A75D8E839DE8874B138B1ED690CEF224A1A5A
508EA407130551B74F6C1AC91849AEDB6375A285E0C359140C82DAC7A9BB20A2
B4A3C71F4FB0CB3D8F8D258D6B15660A6CDD0119E7D2089B37F2B189E282A399
1310B48E1D0D3D8C1E733A4B14145B47455E47CEBC1E7303D2FA8EE2CCA49CA3
2EFA3EE49CEE9816A4A4EFB444240C17C02A844CD9F4FF332BF576E7961E7D67
6E8BAA6D5770F0935DC3A5AD5343C17449215533894C65725F12BA46B2EED20C
D83978AE94BC23473D0A5EC71B80F234E0099C6A2B6CDA76E56585C544EF1D6A
2CE9AFF298165F1A73D3585AEBF375EB331E00DAA4904235673B05C7C811E93C
0E86676122321C9E550A446FE01700225F245FD12F932D5F97F2F615F00B9C7B
5CB880B47EE462B47E878D9DF3FFB7F3BAB96289F4B2C22B20A216ADEC4C4EDA
D89F4F73A109FAF77940FFE46F8C52E9892AAFFB520865D4DEBCB98EB26538BD
1F7F090DE03C4A5D8C006B0C59FFD8D064B5E70A712E9340B7F7F2E4E69DC3EE
2A89BE96825221E00A6B47B7FCE3A6237F51999AFD4EFD5BEA0E892467767D02
FC02A702F3F744D0637A449DC13059D9798BA7F42A0727857E1BC531A1ABDEA5
20C6B96E66FDD521C0C27B7688BCC3612E3D42FCEC22C16D4CACA1B4362F8679
74A10CA791D150C77642D6300D5F26EBF80FDE991D79B99E345853903D2DF5CC
3D4E4C2D402979459BBF842B9C5C4E1B5B09E4C790D0251AF21257E1FBE3BB7D
260618576F48BA776A1015DD1EB2593DC6AB305E0788E070E36016B636F19C67
214BE0574F2312CA86177A5C4010CD2F40274D455FF5323BD219DF349145E8CD
12A677D21C741BD5752B9A4AF3E421CE5B179E489CDF395E8FAEC98031C93D97
81ABACA76BED16F9A0F71B8BAC3A9CE9D5304E3E33CC18133CFE4AEE58EDE408
1045043C039BBCF8442D90F0874C721FE9C03593F4CAE06A93DED4A35A8990BB
F02530E6E974F0957603A0FB8545338DC00DE7254DC9D6ADCBA0E8869EA2820E
75546700C207DF833E6B583552BA245B7BBDC276F9A06F846C1E9BB7B07A19C5
8540DAE59A4F58FAC9DD8A9E1FF92F01AA6C8420012CFC8BEB5E994E10CDDE98
BD3B459771EE45AB7D960608B915C2B1BB2F702013CB5DB216B495B4CD6D4E0F
59E2F4493BD0A12283A3AB510B3929FC8BA7756D86AC604C0DC4C8DF701640A4
DC564EB005E73514B282679015635DD42D2958186EF42460E2942089334C0CE4
35BF610D23B3CC73770A9ED6AB489DD69AA1D6909598905CF41073A7E8E08840
C71114DB771BB802EF33032633AC82D29A851F7DC4207B54D5745F93D57351A2
5D2BEFE77B5EF32A7F6336B94A801CF1622D5067018E68CBDAC2E44D44DAE823
EED8CA5A683BAF5C2319FE657FB201827F2926C96CE9B212B1FF424DC8EF97AD
402150FBDE678752186DE7D35820C31EE75182CA761CF2FF5B5DE44016EDE901
10ED434C067E85A9296F872ED743E663622EDFA8E6EDE9A4A3C35F0E96450422
3A4EF1159B4973AC59F86E8AC3CE0013D7599F9454300D2BFF65DBF5FF7CD99E
41EB8E44C3B39E6D24D3DB8B905580C1373243D33F5B15FBD0D5915466753F0B
AF6FDBCCC5AD6392F1212B4A1CB362C16CA7A40B7D3CFF8617568A761B36C870
AF0992EC068C2B3897FF7097CB8CFCE259171CC40C3CDA2F88BB2A944E8CF10C
5CD767A3D5982ABC67EF82685B6297E3B05654CBB2CCCB5044FDE2392FAEE365
C0BE06BF7A13229859002CB4E16034393993BAF6EE86980A47FC8B8F1A112393
7FE3EF6E19874E34C611C158B2DD49DD2ED7006D034219531FA4E6D63E7FED15
5D888613559DE6FA2FCA6D5004546B6FB53FCB0C6DECB43FFAF7384387E91066
9995EB9DA2387B600E9BA29CE457DDC1D4AA24F8E4EEED4922F009EECBE034EB
883D9A53983C304C872CF8D9F3CC0B221A923B06DEF69477B4CE8C67F22088BF
445CD8AFDF6403666FBDFB866A93DAA3F83196A86E074D6A4C74FB4921C0B509
A9C92F3C3BE94D9AF44C56B180DB2D7D8D9C6247271DA4EC742E20848132F709
B7BD5FB71DFD3B0F2813EC552A35E56C3D403521962773453C8172461144CD5C
5EA96BE4C2C9E297CD35FB18F4E0985DA177A663874182F31493A921F9B5F6F2
513D2DF1E3F8FB945E1E72D7DE8A43D7F4C71AF129658D3D5C99341112B49FBF
5FDB0C795C54D7F8AB09BE537D33BE8A5E53B504E8C1C99213F173CEE4032B65
14DF7655BCA3537F71085A5BD7BE0D254F9B08D4A0EC266D5A3C4C8DE2D380FA
F9CD6FD7041213D270C9414B7A489DF977F39FC189809CA744D2FB24B56F8114
6CB5D47DCCCE031255B04C87BE0D1CBA89E1AE09D55FC0089F9244CD77553E14
F6EBF34CC64C62BE269FDA18DE2C4DE90229A07467B4A7DCE2ADEF9C8DC61E51
50699A1B5FCD8E68397E7202F464F51B2B69E869390E8BB59F9827B988A188E6
80D1A1D297D1973E61F06FAC02A347ADC551B47B8335F4C664F6AF6705876D0B
51E87B5788266EA5A2FEB5C24901F7F8DE4D623153A3054AE7B72F58E538EF91
876124B5332E69D283A232D14BCAFCAF801871200FCFD87A5E9E1499EBD15C9E
361E42229A8ACC2944BFC28E16F4809F7C4BDB44D19BEA50E06B98336520F0F5
ACA8528203B956FF97667A0258A5D8C1A3BC5A78570B8834A94FC1E02C68A573
17943CC86FFA7FEF4D116B632ADB0045DEFBA331938B10A06C4D2B574C5FBB62
AD50302E61E05FDC254683F86D0FC7E7B96768382981959B4FBBF358C32426EA
7D1F7767C0F24EF9524ADA368147D3CD7B72A427EF5C938B1C0AED22B3E0B6D4
3A4F3B0C4CD2071D1ED587E02B368C90C5832E7A3ACBDA92AC07DDDC31D720F3
BA16EB797FE7B3A01F8B57916BC3E7EF1B3666AC033F3C87D126985008F14861
973BB3CAEB50925DDA1E53B688C621EBCEF9DF8D195A1D9FFCBBACE128EBE0FF
4CAC5933E37537483F9A447DA8A7B295ABA532986DBEF5C2C35644C83F7C83A2
25F0DE43BC3529D09B008EA6693251831E791544D28EEA2C0A5E8B162B34AABF
5027BF0D657E695B2C01117F6EE423675250671F0F3CB76B9E5C652592F48A0C
B2017828D82759DCCAA626BB1CC167F34E1F43C2482392E07F43C8D4D11896FE
05D0E646156C50A6FC1A45720184FEBFDBCB08B3400141959F016E48BD46A825
D8B8011603D5B832E71FDE073A8BE3F5DA8347039FBE28D6ADB93303BC6EFF31
F9066BA73CE92C9A95567B0C02DB0E03B9C6F1102D2DC7923B8981C6198ECA4A
5CD909EB6069E40D3F75ED8A360D488A672A8275587A90BDF273E1EDB75101F2
BADC091FCE26139D3A890A54076D20CE406E037E5E359513C369D7BBEFD9C7B4
DF55DB28C5B599D265364B970C93A36B4E5B195D044B56416053B0EB471E6775
69C1165A5E915009035CA8F609CBAD3C4A0F4AA0F5E7524C729305DAEE4B3BEB
E7DADB219BEFCDAE04899BF28963F6CB1C930AC8526DBE12706E5ED2B8B829AF
F44ADADBFA6E5A4D89042A0DB3C5C5D3A37EA5A67AC0D87E40C483CA0412756B
DAF3E4555C9BE50BB886B5BC151B8413D2BEE90E43D66080040D09595D391397
FDACD5178BF5D71FCF60187FC7C5F0FC60C2A660BB4DA0C02094F3C6334BC197
DAC8212F343E9043CF4D20B50AEA7EE4314E22F675D98DCD952452FBDB11FDA0
C053A1963E022E60C3C9CE60687EF12A633EF202A1078C71B55430A3B1B412F0
FFECBF342B8C2B2B15EF345649E3E897706F7E39835259F07301A00EA4F773D4
F48616A48277D947DF8FDD1A8023593963D7C9543A9DFE8B018AA1D1F106B6A6
2CB2234A3DDC81E23E63AB5C7168953B3B82A442FEA3E5AF121D01289BD83D9B
78477081B4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6EFCF9F0831780165A3374B17
88EE15E86A40B16BDFB75FF3B73127BA45BC6E1F752B9A508639FC3EAE24DD7F
3CAE82407719F13E819159309FAEFEE5BEEADCBDB4CA8582DAF2809A41072FD8
17E7072D80C54F98BC9B79B94FA86434DE032E531FC86C88467D824427A45594
4D02A8D6C95F57140DE63C8690E4EDB30C25AAC4250FE6A3779FACAD88A3DAD5
F0C90B42BB4A586DBD10FF2301BC9B33178944FF5CB128A7418377FDE5B12890
DE815CBB66B4310EB4388DD5B1E815C1E17C48887BE5E9BE9A4B975DAC52E5F0
076A6D9627C6A79DA3D3E0AAF33AB36036343B83691442C5E7881954E1C3651B
4523FAB6A39F81E6BF281C5C19F3AD9CAFF5C7634EBD370ED0FD35F425F0F8F0
736233B809D21DEB5A480226611BD9D487682B53ACD88F72DC28E1CAFC1EB1A0
36DFBB72F4577EADE36E90C55A662E82DF84604913AEFE8209B12234B44C0FC1
F8A212862148912E58C4346809E5BA1BF4FBE48C18A792BBDA3AF1CABCEED61C
FDB0A19887ABFF4CEF135C047D661CA145EC50031ECD017DDCEF3B8663FDE927
97BB1607349B9E1516ECB23D1982005929D8FA76F16D536A81700687393D3C04
98513361FA844DD82EFB3FEA523E94591C83ED2A9EA511A2A6D82B4A49D27111
0C68F38C793027331B668145F6431BADF8F364C82D1A5F44B46198DB0FDD02E2
C58F0836DF3F5696EE161FE4833045C238C18DF4E12963BE716685D8CA5A4426
BF254E6304DD7E96192B55F96C13966CE41DF1757921248A35188BDC34A22981
4AED0C7BFBA87BD55D88F902DAC420879709BB3F1E12E3FEB410C946ED2F6B56
028F453BBA15A430DF37EA4F3E6DC5F9B2A71B2A331F66046C2421E582BB925D
9B9F6D2D92ADDDEB95CCE512AADC7A91D626326D4D2DD988F5FE33AE2D880B2B
925B703CB350765722BB2BE4A9F3A99ED9C4EA6CAD97AA38D024059BB8B2BA08
1DF288713E579B76A467D72FF2F3E8953EAE115D70B95BA3749EDA47DE3CAF76
9A796DD7996E6EE26AE0E1B37AD0A01B969A18A7C79AB18FBEC89ED8C87145B9
C3C3C5CEAE5484608226B6893CA572EDA3A9775A202BA7B14767A4CF2ABFF853
A54DA753E21AAC2F2556B06FE7F6B57632E26BD48D3A983451C819D650E3EBF3
BB4A720092BE77051BA5BBB1726E48104F56A735996C423F64C392B24F38D97A
646CDC992E11550CE251426F77AFAFE1895B88D7EB216B1A7A44F78BE7A63E9F
E73882838648C376E18F07181E0807EE808D61754CAA63E5EE247443380932F8
D66985D438ECB2FE3E2A7C5A240B4D2791BAB76EB8CFE95EC78AEB472A5196ED
0B6A0B471C2737F4BA0E2ADCBA607B301A5BE38A721A2C8DD051576BE4A66CE4
6132BABD405C8A86F94DC24E838DAF6FC9E8D08D4CA65F2192D67A34E68C44FC
91DEDB1C5C2EEEDBAAE4E57ACD0E3DF9D8D2C30196314A09BA2A9978350EB827
F9663AA7DC5B28437A4055D4E6679C48963CC8A9CDA3252DA293F9CC3CD0988E
4C6F15E90DD185A757424D0487452EB2171F6471701EB98FB9C5968B35E4D427
115222B4505B0E10A4B43F34645DA1F465EE50D69077E1627DA1132D65DEE86F
220202E03D03DF36F0212F54F15EA2EB78C5E2A54090C561DAC4FB0E2A8E45D5
6000F522CB4C2E8BFD23FB5006474E8EF185D051E7AE3B47C049FD79DC53C93A
7E1F2AF39C1741EAA0B2F73F16A4445D2D58A47EB8E95F2CE54DD47F37B71794
DA9F4924DC887B11208D9069056780A3F420A4B82F200B89F6942CF01974D22E
08631E4E6A3230E42AF31A2AF987B52D3B5A179E71AD472DF0EFBC2D90537F8A
1DB7F4D63BE10C05498B48F8E3CAEDA46F176953042B98CE7E608112928D5AB9
AA9EF96857637BCD1AA857872476F482D93C2020714C23955293DB263CEF72F6
880BDD18A2BF34C16DCEFB14FB74CE480362EEF78B8CB637B267E45E6CA3497E
AF8A9B91C27F2F704D7F261878D6F4C4CB1F827C75CB530B9B547618EB69D06D
A03FAE47D3789D59CF19FBA8F7E47B7504602B973379A1FAD62EDA22C07FE43C
0B4B333F9DE448679CE5545436A395FF52BBD20946A0DFAB4B3C8E02BEE163BA
0954CB74B55B95BFE5DAA3A0D57D58961151885FD088BCB760279077EDEEF26C
A8EE0F0C84F11E827E5AAFD62A822D1736BED26FCA987CA36BD0079AF984EE75
CBD1122FF3815F30C9A0467AAFDD7266574AB6A92E774BA6A505454BCE4FEF41
816D06BDB81AE2187931AF2A29B4463409C3A7BDEEB7B5B45DBFCE9437207EDE
6DB7B1F706B3129B29E83A5DCC3ECA0830937E7AC47A9D2F4A10FC31521F73C2
A83CA2404425638B2622D923601096772D057935596FE10ABC226602610D15E1
1D5325F4681811C883FA3CE1BD48FE2BDC25D49C87C0B0B7F1F22D5E7AB50F05
7FA290434DE740C0015338BB206FE5267F9A00E22D8469E688A0093656B52BDE
BEB3AC87C4137CEB542C4543C93A36357F6BA6C63FDCFD7D48AC1CE67FAF7B0A
53165A704EA2C81F20C24E90D1FBAE69DFC9B96A3BEB7D55689553B44350D7ED
CB71F51C3BADF6143CA75FFF5D8DCBF807140D0C5F2AE90172935E8EBB1E4877
D388D72D4974CFC105AB56C7069C88E7FA9D0F6FEA4422AB2A9E0FA38D86FBBE
8CDE7A7CBEA25611D448DFD2BB9C6C7F12DC4B95534606A2B83F682CC453F809
89421A21B6E137D4E8252B16AB4EFCBD0A87F42438617080B3C7AABEE07D02E9
2B77F1B13C0D93ACF36E0B978BA3342D69BF7BE6CFD726A40BC6C23281CA7DCA
613F692E03989E1A8F35D7E6D588E20BB4DEA3B7D5EDA8BE0EA16CBC411BB3C0
C9C5810E936CE948FE7CD0534B9291042276719A6735FDA1AE664CFCA904202C
ADC72AA1A12DC64355B8001C91112260CF01D9CF2CCE80D2F70F23366801DA50
FF3F33D15609A96FE15263B8818F7793FD6BCE759F83A35B7F4D3635D8E3C443
076ECB8DB762763B377DE09CCD56A61FDF44AE744365D077DDF4ED86DC32F2FA
8A8A0EC539C13314806B6A819EEFF89309F6E798FFFEFEA3C6E2F089F4D5DC17
09233668B914244AAF25BB823F199F1005D7F45E30EE28DCB5A944D931467735
357F58C22FF226CE34081FD6ED47018DD8D13995D9AD2FEAC03A6AA218CD58B0
348BE7DEDEA0C6DC4CCD6F6EEC6B703FF9BDA3AB2A67CFA501EC3729EF9AD4F9
DE97382C1012C82A213E6550D342E544375B7844238502EC26424FA04CD44CA0
4B9DE5910A3FF24E6EF5A674C9644BE7F694A857EB74184F918C2C8A9FE1AD67
7F471635ADB05F0FEE568713B468849D031384A7679D33D9523A36FB3BCF9189
8A586AA06A1997AFE3AEB925B6223875C41266E61232869825921961197ADA82
E9DB879617A22F7831F606CA344E88C60600493760EE5FB99ED840428AAA7ABC
79FC5C2A2BE63B2071342B8ABACCAD26303FC8123CA79CD61E128FBBE23BF71A
9D12602FF09F5951336D14213321F4DD6973CE50CB988B68B8090D707234FCC9
088702BBA8AB236A54061B902BA9CF753D3BDF1758B47B83690E5D3DA1ACEC95
3A3C342F5092796C5017FEFEDC90D70F0CEC250789175B92FFFB74DDF5C685DA
32C8F941D789E926AE604EE7ABC6D480594CAD0DE419834396DF541EE306F738
E0ED64235A21D15257DEB281BE43E8592DB9DAA75223CB74DB2CC26341384A38
6E2698909598899274CDD0E8247794F206B5142FF105655E9E013F8F6BC2CD6D
178F8972DFCAE92B8ED9366A98577CA4435AA1C9E61F9A29121CAD0878E14BB7
5DD380DE1000DFAD7EA4B13B8AF959018AE31A309B9050190BC34A39D46E35B0
FFA0B3C83F4AB1FE29C5BE40F7370F1E8FD32F2587BF0673C7227705AD041EC4
3003F6B28F099D13D263F85FC2AC40098915DF194C0F7573800BF1ADE5CEF694
F6F01A4B7A57D51AFEAFD17DAB88B9C3EF0C2411134A7C8AD860937AD2DF0FB0
31E9F47FBB2BC8E9AA00146D9701B4B4027AB67A1A8F1DE3AB5B5AA436D95C18
238E8ED200CEF80ECCF3479B8E2B8E920BEBC6F75E6606F9D34F1DA4DDC2F767
6145C105D98BBB7235A887CCF01368C96CB2F10D23F7E8E1AC3FE223FFAF377F
727B9DF3BC94F4F70E947F18791612FAF26620E69DC1F5FBCB809BD7D8E36C8F
57BDF52E3E7941A1AEF77E1B7C74607E4607618AC838FCD8B5A237C64BF35AA3
3F7C76AE4595636D21F98EB5ED355426B13034B174F362331A24E9BDF21E0670
55650440D29572E5B6048EEE293CF5CB74ABCED32DB1A91612047B915F74B7AE
9244382F8B5BF552711DF9D970441DEE795C96EEB827229A3B59413C1BF2EC7B
87C2DE7ADFF3FAE634DA68A732DE4878554DD663BB8967D12739A92A1F60394C
911E30A23CCFFACEB725FA2C8283DB063C530F38F874A398B77877915D69E5FD
21C710A7B836FF9BA0EFE9D6039C6AB6AA61190DB063AEFFB4B71E1F11EC085E
BC501FA0F5AB62EBBC43BA5006F15015EF887A300BFD594F5C17B498A4496E58
2EF1474836AF58DAC5221D075116A5638287D608299217BD0D57B6937849E5F8
BBA5421BD4E5BCD111DBB8F8136048E5A1DD387CE80C6ADC75BBF5DF0E31E5E0
8B89B0E33157466FBC8DED837E562F807D45A58B476C9B1DC5C1A7FE2E65AE91
75ECBE57D7CB269BE03C60E9936DA04FE0D8BE2156BB42D2B6B149EE3C50E820
87EE3B66EC0AB146D2306F181BA6333D58BC82EF920408E328B1ABAC806502C9
2D409510CBD393B965DB073FFA127EE3ABBEC1BDBE0330138736247BB782ED02
FE973D90FF5FA2F0E744ACCF23EA0988FFF23D2665F7689FB299410F5ADBBA92
581B8BC705FB7EC23FB462F500AF8310C85EBD9E970CB15CC18366A5CE21DCE7
A2C8BC0BE32E4E49DBD7FD7DFD4A3C64DB93A339E0740C98B21E69E87CE21863
19B3BDEA5439585AABE0C0590690AE88DA207D2BE38079F6097FDF28DF31FDA5
BBC719F47BEC65DC36B753BCF1B25B62F3A47B378A8E99764DC9CD4AA8392DCA
21B91BCD393131242E7E02E90BB4872625CC2DC96E21222C31CB85B75BB54E82
C7B68E2EBD4FCACC9E48863B3CBE92F067E813202E40E6324B3D5A0534D50115
BA622EC66064B2140ED2DA0FA98255D13CEC9D3914F0B5F947218A7E19D41B30
A548C8CD185E75F762E5A43281ABA12D458A8C61A87484137F9F211EFDF5943B
F5BEEFF1F91E8B1D8BB962C55C9FA53B6A427934CD5DCC9B90F0679465E9BEE7
62D904FAC512B8ED49FB7892A2C8F06C84757DDCD460182F2CB9BB5BE1A9C965
3D29AE1DBD489BC179F524F2F941508AF440F3B72AB473B9F3015AAC67DCC071
60C02565D9E727628A385CE86FD9D1F6DFEA339DD5C25297BF8FB8AD13E7A1F6
081728C872EBF49021DFFBB66ACDDA54B8BD5D6EC377A8A8992B752C512B20DD
141B53EA3090E4600295B21D00116576B34D189DFBD8338F565D57119D2B356A
35F39FB6076C8630361E4EB5FB6994E559ACC8D90524BDB34A5723B6FDBCD4C3
71B3D47A82DE1828252D71AF2537545C2AB3182DFF7ACB721A551C21B445CFA5
783416FABE63A227DC3BB355F7DBF9D23358ADFA88781437A86CE56ACD0D236F
4A73EB931971881AA66B783AFA95962E948490026FB4A17E07A6ADE7D8B5B5B5
B17274A78CF3A488853C80D30A1B4FFF7ADB508A0CB92447101FB1F790FA53B0
4EF41223AC2473E9593C5626F9FE84DC8577B380FB21F82CA97259D65C7B2F2B
2E9689AF4C830A97AEFC31C926E62EF3DF49B1F37881FE24E1E4C207343AE346
A2FD67B0D976C1C7EFDEC721D8B047761AECD409DBEBF0C94CEA30758C0BABAC
65B3465C8347050B5192AEC10509AEF4540CDCE11674989B473064C04BD79C5C
ADC301B58647DE9D94430BB34CF7CD46D2BC8CCA266A462BA83F55448C5D09DF
7F30D089A1D5A7F472F3377DB8F630A1B88FDC48834E1975065EA88795AABD38
891F0A86E4C4D1B02C276885C3DC652A5D0BCCA0BC5BF6A2BD2100292D461A99
700C64886017CC1A13682B7C74AD833E90F48B98B625EDF7B666CF3B1BB33D03
89FA11C2B5B6923E9F8394844B8701B62B7DA961C9E365792140F7660FFF8F27
6214B8CC5DB38441D371ADC852F926CB7B7849C38150CD0AD9C110529F4C7547
70B6D103080A438F1FEACC76A1EBA51262F0AEF5491393A8A23504F482213925
1B9BFE0F19A610AC87D4D4B014655514D98116A4AA488C33E84ECB4ACFAD2EE1
20BB33BB48763BFC9C63A5B0A7EF6582E2B953F577A54199B725060A62D55972
D2A87031E8F7C81B24B18F76FF3AEDAEC3BDE9AE75A3529F9E3C8779AFBD5E3F
CFC9859C531626DA88DE679A12898E28BDBB4E975D2778BA4BBEFEE3BA56CB73
45D7817AEF214B74870EFE6B3D7586928B45DDDBF1A7E3561DDC56BA83C6D39E
E0B7E68FFB07DD14D69EB2702C82F4138229B8D126F2360CA1F658D5D4995758
6D4C789DD69AA15949F973C242D384B1E19C456AA21A0A98F7C329D4983E11E8
73A4EC79E12389776A778FD3B3E8188BEBD2E1AE92124339C516DE464885B8E4
4C8E73EE8B8D27A55CCC87F7FFB67FF55DCE744043305F7E545FE3F0FFC26827
B18C4C1418011F46B2BE5C44172A9AA3F60C43E46177D048A25548B912DA37B9
CD4A6ECA4CF02E0F79AAD408B49C70F232D49DC42CBDBCF0E3A4E616D1B1E769
D95853C760EF2993E59F22E1F9DAD89A84D1D2AAA5A4E315653E2A2D9B0DA631
4A621B69F5AD4F0DB5E4A53629ADAB0817E3BD56E72157FCF3F57CFFFA2A93E9
AE9E7A3600C23387E57A0791A905B3A8D7BF88539F0A1A992F7A63CE0478B6B9
5865CD02BF961BE622762344B03F937DC541FB7F0A5789203A1B4FAF10E9784E
A0A9111F32190858908618820D328CFE78C3CCA2FA922BE81A11FBFDD440BC7B
69CB5DE349BC2D5BC4542A8946E2EE2D012EC07CACDAE1203CDA2F55DE5B76E3
933C94230DB58BE15A3E05F9864BCA10FA41933F7468C5AF004DDFFE3A1E29D5
A72D09E1A6F175C56079234119A99B4376DF46F0BD3A5958968AD5A8B1E16629
EEA37369715FD449FE4179A39679B3728F77027955DBE158AF679C88A84639D5
0051E15343FB9768AA6246810BBA98C4942D6F5CB3204BF5DE24FC83612F18D1
B3EADF715DA16F2820F748F30333DC47CD62974CE50DFB2845D79DE1858E5320
C95CBC5F63A37B8E366C4643295F769C4BF749205286F335980DEAD8287A3411
867907874DD5A3F4E924390E7D918115CFFEDD42DE60D9D06612D3741685973F
4C57A65DADB8D5509A5BF79FE5AEF13D1F22FA353AA203A1B4B754EDC65B41DC
8648C5DE785B77939F3E70043A9C56FDC7926DAB60E89AAA39DEC2CAAE28D561
F744405AF9C606A2FE6278E7E1D07D208850A4571476C7749B0A163B1DA3EB8F
145FD448F1B501BE51D8B69171E76D686EA4677D86B173FA6C3508BC7C44086B
C9088D21353EF5988F04A62D3501FE7340BC7E9115FD24F1BDBE62336540D417
C384EDC69237F8AE27A200D3B9405AD9EC372CDCF05B48062E4F1F3E42B05E3B
BB04DDCE5D1F11D2E854F15D47B2CEB5DF16A8D787337AEEDE4D43A6B47FB6FC
54DBCCA16638494E3370C8EFEF39D22EF90E5BD13C16E0363E31662025A3DF03
A491F9C077100FDD7012E5CF995767C340E27FC27032E69A655836C3AF7E743E
362E67DAE80DBFCCD1E41DA6789EE8A2330B68F15A4EBECD9D3EBB1CFCC4377D
331A852958469914FBE8D4EEE0C89AD7A1A505BEE27C7B385B7BF1FB46BB7168
EBACE01A9BA641C84BE9331E54B3D75F03547C35194A899D5AD6629BB81D2CB2
5507DBF4D514A246BD95D73E6197DB503E459B2376AC0BA4515977ACA8310C28
20EC05F2101AFA0963CA72A4D558EB1355EC0521873EA6D89F29F05F93F4E1EE
D95D0EB0A6149B5F915BFA734D2F5EAD0B1E26D7E775F9797686129299A31E20
834F9DFD973E3FE38CA91772E3D1BBF3574E879C064E4BBAC58A21D320638DC9
9C0A84D945F53B12AD87854E5707FAE73436DF00562B3D7D6181FB5B285C6368
F35D776A19359DFAC7DE4F3E86F579C2BE2DB1AC56C360788C869BC9DB7487DC
8A611FEB521F1C6F017EA23394B29C3FDF1DB7A8C2F87C6F678E22CFFFA30FCA
A92061B28D9224D8F5FC9A724D515C64565033482F6F9335809DE6A2BB6EA78E
406C59F44E007F6769CAFCE7509C5C572722F73F1C30BA835DC643432EAAAA7B
44D026AB2FCB22885A9C2C1480903C00361D3E72B1B0CB481BD9C18DCBF3359D
52D0A230566898C246B534810CBA3E13A2C6F92428744A4B3C2E35227A5940B6
3F1743B5D7E085BD4E5B91197D38D2021712F724A27283AA4C442A6E14670E51
5003A995EC42A636C9ABC29E0FC653131AF9320D653A40644AF60D147617EE86
7A2931C421FD9ADA882FD9F6167BB5D8EDCDFEBA240C68491128C63E2B47B10D
F007040CFB1073642C21B9FBBD94B75AD545A742A8577D0885C52696F3FDE20B
E35CA2ACDF7E40D922967F0755AEC3CE25CA12664721E94F9C90EEF3A8BD58C5
D957278737DED754DBF6F7BF3C7A202BFE11DFBDDBCC97E9358ADF3CA7E94B37
297B1DCBDD4C8A4332463F432E837F20B349E569D64A80F7162E2426640F0161
8D99374E8AB1605ECF76CFFB84E4FF7EE0C5F4F8A0B51599BB751EDD65E77B40
DACDA041BFB523617D8BB80C8B4346D3CA8EAEC831ACEEB31A5D65403C2E535B
C0719D9251253333E7991E02CFD8EAC65EC559A4A3D04F1FD736E51DB40D6ED7
B44FF5A0B27886BCD6470346FC3720DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CBEF414F60F
85935BDBDD23254648DEA12B95871AC8F859AD8C9315B258E525FA7BB0DD294D
497646805C3CFC1CFC72C17EED56FC5E7A5FA54691474DEA0C85DD18ECD59923
619117DC6AF37242576C4E9A56BFF2D3E717DFA750607BA2BE87050F8AE8EA72
8056655F9D9DA1ADBCB07A6697F6664AC6B6C1F5650255776305892A6E3D986E
10A3F76B65763C33A249C23C8616B866CC56D8440C501D46E821750FAFBA1CF3
06101C7D563C43EFE7A7AD8D402F232034B7BCEDA9C49AB562DC60CEFA521711
DB3D81E0400F776034AA7370C867BDF8F8CBE2F2E59D2099F8627118EFD202D3
51B7AC1FC6D959ED360AB4E5ECB4966369BA85B6E7733A5C7123CD2519845706
4B684F1C65D278FBCD01A64C1B5BDD5798313CA7CC3A03996EF52A5BAEC94596
23B4C55EFBEBAABF72DB85657F4A3558D4585AD1918E86DAACB863EB75D64BD6
3E250047E910F5587847B9B4F6BC4385D22750F78FA3820035607BDBC19C7399
F90508F5CCF259DA67858F9393AF9AA5E6146E1D4AB77FAC6E459BE47B063969
2D917CDB0ADD125F3A0304E0F0C548E655D710716E4EC8CB12CE2480A578CF4D
587A5A99FBD5CB140E02C5A8CE9D45B1684E027CF555018F19EF54D4F396354A
0C5947E6EF09484E90BBB69AC4EA851AF4CB1A21CA5F8E2827D8264E60CC2552
CFD63851BAE8AE22D898791E61F4413C9E8BF423A7FF763A522C2B09390C49F6
2F8B36645A69B98423568E1552BFD1EBDB58DBFF344861E2698B1C135A260DE5
DC01B8DEAF7032621F182F4ECDED721EE3D52D788FB2660AC0BA836E8B1EA4F1
BFB084AE9319C95757E75F3409FF6CC8F3C38638084F8F4F7DA8B4AEEED926F9
AD4A5C73718F38A4E67E61CD7A1713DE7AD5B63F4EACCC6AEF54FEF08241C7BD
89A71C7BF2452D08237C9FE7CED57497ABE74CC2EFA73D24651664E84B70E8B9
448623CC127B35E5059CAF489C0CBAAAF805CD6674F203D970007F1A62D3E0B2
7A0888C8EA6B4AF189795949E34D4359CD47A000608F799114BE5D36359D0F97
8C665E166A285BB1029C6853A6DC3A6C6AAD5F06979274C994B0AFA172887001
1C338E23CC8638A4F8577696B37428396DCDF7B2DAA5DA16B3490D5AF3371C97
F7278135460B120AFAD7B1429C0141356F32B5BC0788181FCFE5D8C0C466357A
E91F3502403BDB4B7AF52FFDCFA657990E6506883307E08CC89901F0AEA3F094
16AF2C0D22F65D212B37F8DFD91891EB8DA617519A715DE3546E05013E463B2A
66316E8E873705BA7931E67866D671513D46DFF19F107FC68AA4FA40DA840DB4
B9A45F37DE8E58C433DFD3D283D44C3BAFE9DE246648FD74B1077724560AA6AF
DB6EC9401084DE85C43673D652227EB88E279912B638563A1B51C0CB302888F7
9E6386062BE839C1F9D30AFFDE82CADE3491496973DF9FADFEF45E2097170B74
CF6AE3893B86E654BF3FE6CA108E5DED7F9286C07113EC573B375CF7589BE2E1
261F863683A1ACFD71CD2F80536866A3EB71560E40872CA6BF9E77D4AC76F487
3C49ADF8152818A614F9C0556D9DEDB9A655EE349F0956DB6D6268C6CB33DCE3
BFE23BEAF3F65E5AF8BDC03BD3086AC12A9249C62AB971ECDD9C87C2352A3865
2AD8093D4A826AD8D439B6CF13A38F91ADFBB9CCE59383EE85A934AEF8A3C7F9
487C199EAE2232C8DE8712066CCBD86507BFBE205834D232C1773477FF93F3D9
7F68ED490B1BF2559BA71911EA39F39F2F7A620665104F6D5BE22BE9FDB8BFA1
32B48DEC59BA46885C6313BB0B4C5EC408409832F8BF716C81137F36DF286FDF
E2D12D559BAD27D3C565F82E139976B7DBF2C6605C67383C697866034ABA3F09
2C8EE8627B8EAC54752641405068BAB8228AB20DA3924B669B92C2F30125E05D
ECD4DD2AF317DDDCCDA6F29699BA35A395CA33914F86AF235C0907269F2E02A2
F74AD4793EF46ADAF28383D3E241FFB2D6F2631FE8C9BDABBD177170F3317087
33D6CBF533AC3BADA73E5B4278FAB3B9467F5CDEB5EEFF523788F90DFE024A44
2FAC22BB84496F46F61B7458BD57148CA2ADD8EE097F7FFA5CA26BAB26D129A9
90AC1A719B69A41F88196D6817A236EC19B699174D08B4EDD8E374765DE50BAF
B6ED302977E6E6D43692AF46E4913FA8D7651CFF970524807D82562A2A2DE260
D6A5E2CA766E1A2C1B61F3443AEAF89C24E904707538DC2627087A331576AE60
C569B4ABF92AB6713C5CD19A426FD468450DDED93CEC1DB79ABA0FAC1B94FDF2
16C2FE432D90C1777B84FBAE3040DBE3330B5A8982E08CAC27A17F54B6FC5FA6
8E11F8C491FC9B599D5AD88026380247BC273F5018156EB768B6E538C099F14E
3C35E4892E9ECAD44744B823ED84E3E359893F86778B46A307365456223B29AA
0AC2EA49AAC73F2D7B7E704958E0395EC4DC05183B074A36C3B1F58754BA29EB
48815726420BF0F74B87250CAE93EDE0EAE3B46C2356D3B11A879727AC57C8C9
34164AB76B97A62979B2CC38A0DA3F761B20E7BE802B0451E74215E18A92CA23
93A93B100F9434D82EF8214A353F690F934A9815A62C13B381EA7980F42D0AC9
22C4C1BE746A4BBCDFD1D1933767124B83924402BC85689BFF3797387B90A384
F37F552C427AABDB24F15C4770333DE95B328D4AB18ED4239F3291A2E997D9C6
A6D2C4C5A51C83C307BFFB241BD081F06C21F2331EF2B641075FCC01684178B8
E239D2845B039BE40B6D0A69D1583F7F563FE06CE01D7DD724D61765D693A2E9
D0C3161AF65B2BF02CD2E50F4C1B65930F7B3ABED112CAD712DD0514B916BF91
FED5C8C01435154D56D857A30D94F8242F30C8017A5E44743E7868DB36D63FBC
D6EB1A43D618A5325673C4B7F07C19C86D823C0AF8E0859628B677B784A07E2B
C1D87F3EB72486205C231A01ED6E5A041CAD1EFE2316703394D00D738E7E9E46
FDD636FF9CE958F8733B43F07D51953C4893213DF38BB1FFFC38B9730CB9CF2D
76E974D0C65067E987D8896CB025A68D2083788B71AD37482C4E9BC3C2D71563
C34A24089AB484578D531509F328A26341AA5AC2DCE21A43C795E383F5D44D40
0935BE1A92914252C829525EE3B5B96FF771FEFE898DEEA510779DE56FAF0E6E
8FB2622E1F1381A3393D84A9F603FFAD52A161FED2DE667A873A4703B05FA863
8A47E705EFB71B6650D212D4D7BFBD56B61D10FFD7C5ECC335E8B7E717C0E2EB
9734B60017CF42F8D0D51386C59144CB0DCF31A06CD913F9B04B7DB741742309
1239A0BACB3C22B39006F42F397A2655F1706ED5091C008C0A3F36408FE79AFA
25CB52DADE0EC8A6170F71050FE67B3C0AC839E57CD32154A6E1D45DF424BE6D
0D974F5D7774D721EA0A310F72EBDF502BBDAFCCD35799B2CD17DCDE163C323B
76831973884EB4D0B10B992C6FF47E10CA6CFE8D69B233ED4142405152E40BA3
FA130D3EF6D5DD2617511CBAE092C31F5CCBC63AF01EB737E22E2246876E811F
C4BE8BE72988D6B8EA8E308DFABBAE530E597F6A7CBC4604A758236212422399
3C0DE7C4CAB06227E15211FE4A91C586E28FD3F10474E51B5CD8475F3CD0657D
5CA40B11FE937A852915582FB6827643411F61693D0D2A9E0D7D4826ABB7DEF5
52D9345016E036339C1A58AF92267CF4C577DE0A78957A5D803711460BEAC2A6
2EFEE9CA69389EB2209EB30D543F4312085B8A98794C1D891E1571E22513E0FB
58A4A22C59F30B331D853D2C54E5D098B13A82ED2B5329DDB59124DD496E3E5E
2E94D0555A1DA910980F7A2C74CC2E377381975BB1E1F00BA4E6C4ED50C7757D
BA8AC05EA8887820A094C9003755328F018C723E3CC01E3CCFCAA676962CDC71
F63E17E520997E5B980A14581DF8CF577B5E0F21DD3A6BAE1DD782333893D0A7
DD8FC7D19BE8D683E4BC288799CE73A9C27CBF926DC0B95D26E16BC345228D07
72892A09A70F6C96164A00B24C4C36014EDDD8C3135B91D0582D534CC9F287D7
07430CB658A3EB4EC48E1BA91B42602D64EC7A91C9EAEF1E000FBA06A8ED6DAE
AF5C33309C9E47AD0691A736819FA789FEBB70539DB0557518B415440064F409
41B0BC07069E56A2EEF291C83E3F76CBB79CF9AB0DB1E332E37B6DC6D2664399
74A2C8AB16BCF5F7DEAEE87750700086C258D2886AD1A82A760EB32D5CB0C15D
CE265CD3902B282B85CFCA881B89CA77D237A97666C89CC48DE6D97C817C6828
99C767AE180E7C394444C40359CC3E96E3FF052C878F8A2B54761BA1E46059B9
4E3F7C0D45072DCF0400B81877F5ECDF84D42B803BA29C6D930248498261CE31
7DFDFE99BCACD96C9CE91A996C183614BDECEB792856C235BD5BBF0AF79F6823
44A4E7141EE83B5EC63AA4F9DD53E8D8202B38E3DBFCBB2AD9CFE474CF5FAED9
72D046C23C1C8083A421E18906C9D8E18F4340BB51C863DD9EBDD2944276550D
861994203A148A1CDE1DC585E6952CDFE242552D55A975FC0ABFD71FF0ED0A8F
E01C722FF0CD6C378E8C16EACC72F22BB6D5A2BC682D9231325892FCA5790711
85A147DDE6E0A7346F6A2FA040FF1D86C719332B70C3A838A0124E9F09990176
17C3E54A858565D658C8C48381E305CCF49D19FE49C3523909E2D26DE4004A2A
D7AF293813B7E5971278BD63C5F4196630EB02961D72ED6164640BCE52CCB5C4
4A270960B4E144E186E38388E51458348A7C4E93D7B2B325F7C39A5136B7A98B
3BAE818EA30F10ABF13BDBA1AA94ABE92AC1B5AB1D68268AD4FB4BA1140FA29C
BA919339F2718D77239223CCF5A8E4F1AF8D354E369E7AD534BD68949B531355
0BDD4666EB667B7D12B89D7491AAD4F0A6E292311FE04FC7E382D8D06DBAAAEA
8722FA6633CBCA2FA96A7065D19D6E8E9970E9B0C6206A85938B118D56C2F40D
D8CB2C448317F7F76C0A0102A6ED6102F208B79383630BA2AA15068CBE3222D2
A02236201187D5C4B3668A143B88572337CDB79CB58D61D1D52C29E9EBF083EA
B1BC3ACB0397B0F0329C9D0AFCA6F27DB4EEF37FE1BB9B66D951641D97F7DC64
4E30F6F3C56B71346897E418DA509580E7BA8BCD9F190F98C167AAD26B158FC3
CE88154C62AE62D524813891D32BCEE2C3D8DDC2D01DCCD276FCA372321FFCC6
4F5FD5E74D10C6CD9D23432FF3C3E24561354B972482CB5C8C08261D62088ECD
BFE81990453EDE49D8AE1D1951F25441AA794247E92AEF99F89599B490D3527F
4059910C090E84CBF2BA3C9FE169B0338A892839466E3133485D7523063D1062
0CF90C4B43171D61F4B723F6B089F4E301557F0D4DDF297577139F19D840C1A9
E39B6F607D929243BAD709108ABC755E99A4AB598E407D5180CE821C938E7321
512FBBC265248AC509DCBBECF5103E08B2EC3D437150DF95DF4CF798E6FC6EDC
C05DDBFDED6BAC664E1794BEC57A3C9622AFA2DD0214A42CADAA1F04EFFCAC2B
0D66C75832AC9B10CC3AD469150987942D3D7A1B2ED7AE2862CCF17E66ADA203
3579F52348A52EFD70AC69E093479D5FE125E788FAF4C8FE68AA47A02B988209
101A2DA154B517F4E374EE0B9B861E1870F41801FDADE53E2B60639D25ACD217
14A1F880AEF6E06286BCE5E6D37B96BCE171F183682BBE14DA9AD0A41A09308E
BF05DDF4A511B83C7F0DD201D74F23495A21024D4AFF6B700C4E9350329A0BB5
5F6A8A11D4A2F689E48EED7019513588155DE9E6676A3B26EA72F011FD3B5B9B
47D5FD9EF2B30DB0CB9F87A994278101F2EF793D02F10238E683D2976AA18CBC
A7EB1B60DBE3553DE260FFD5907F10006648AF5B11271636EF8E5F44F99E8D05
FF4747FBF1C9C12B6D33E7CDD3765BB9C638E9858955D903B5327A1E231807E4
AD2501D727AD7B0BFE34A9026179DC1EE4AD8CC6F796B181CDFC5A922FA640ED
E6A5E5E94AD4DB9AA8478ED39D864B94781910239BBD81B17CC1EB5C321F5EDC
1C0B1DDC6CDF9D25F27F648AA8E0C6DF8031CFC537C07CF10A5464A16DB3C64F
73DD2BA41E5C27387036466BC56F76DF40028DFD0898B4653B1663DEB2B27DED
94A0980DF298F109AF37F5C211CC817162EB4E56AB5766F920533FB7D592E28A
9A83A6ADAE2FEEC1769EB0CFAA1BE1942FEE4CD251219BA1FC8C89FB3ED58428
EB6ED1180FF9BCA503369E5F3AAAFF3EC0BA05801E988CD12F3FAD550A6AF575
09E6A8D544D496564A60CC30F19449DD024F663EFCCA1C92B97371DFEDE021E2
897702DD7467ADDE0BFEA143179505B2F63AD45D111ADE80341783FCACF6D462
44A9824786ED8511BCBC27E5CB0017B554BD708401D8FEF6539802120F3C93D6
CD1E01C87CE7377C7946AFC5BA55E2F5A65E14EBC17A96AE55999AB0502D7527
8823BD7C05CFC1D00B2D720252B5CB71A0B62481FBF195FE7B8E3759FC5D6329
85231599EE5E8660177B6B890B85165902B5B5BF3D5A01AE4A6A86F7EECC22D0
20E1B1E3D7DFBE4833AEEBA93E4D372E0AA52D04139350616316960076B68CB2
831BF9709D190E9F75207F5888FB98F2BFDDB841F51E538B2C54ECE90CBC3A8E
7E9DABE8346F418FB6BC84DE1A2B65F135880E94391F03EA71BC51A64416E0CA
344BBA6D6E36B12862B6DDEEFF3EC6312F676FFD9E281D607A3F30C4B01AD04C
1870B164F9F82A0E1FCD8093CBE60B66B509A1A77B55346858BC354C0F634F59
1038000F7AC29C087F7B2F1C8C6013493074F823E9AECA74C44B00F31811E523
E86C03F33E8F80D16E52A23DE1B82516F14AB320926D3E31956D981615A7BBCB
5EC3EAB74467CF56354AFE8227EC4EA62F0286B9DA3B17A50D094D712379ED46
B2A63B0039BE04F5657A4166CF276FDC3FAE38273D787371991130170C4D88F9
6ED69655E80B7E246C94D4A977D0BF6B8B051615F0C43F367E55D81F4B9D3BC0
E8E4425753CBD434204198185167E61D07FF314323C8EFA0EFE6E68B1B046FBF
AE81280634A75925868265173873B85165A94A3B9C9E8B20E89EDE9FB7F81279
59DE63DDBC60FB9DEC2ACA521C21F3F4E30BAC584524DAE2614AEAED84725CF0
09F143CD5CE2D59AF046F60F0521752220097A3649716820E552FC2A7303268F
DA525A5A6F8AE5CCD0FF04F9E06427D36E3788EEFEFCEFA53BC631848FC0F3CF
80630C9B42A3A6B166A600E520D35B30029A5182359C858996493C018C7F82F7
38F89697F761DBFA6D986F6D62C193EC19D90807AFD47CDE6FA62351128A6FB0
C226D545715F2D62DC9E3FFC14BCD652CF87977185CE3FBDEFE2DE148BCB438B
F1015F2803C0CE857114B15E143ABB2ABAECDB76EEA2BE6F9A182F72A69BBCA1
7CA6373516E4092996035A8CC1DA30DFD076CA9FA8842E7DAD433FF71774CBE3
D526A282111E2D0C77DD4C92ABCA6158B1484E9FE65BDB99DCD2275FD28B114D
B529496F43D2494657B77F792B8C9D792C08FE9CB0C91D2FEC0F92498A90C949
62AEA05CEC11578F38A792AF40BDB91B86C1DB53226FC6E78E18E9DDD54F27A6
385037D8859EA8FA50CB83EA2C80D8E506C1B68736FB705A76B3D138883A19C4
89C28638B56DC8FA460AA9C46084ABBB321DF9064DAC32DEF132288D8B7B01A0
C7B9F10796DD29DAFCFD3681EA6B7B85862120B4B9F4FE6CBA2AD1C933E8CC89
72E5577A6B1115B3D4B83DCD649125360668890754E33D16040B2FBD130ABE60
25E2112348C641823E7CAD30DC4CF6E167381A82DAAB424F7F4FE29CE4952D5E
AC6753340D374F37EF367933B3EABFD5E7FE5A4E0183189F7F79F126600B46B1
09AEDF2E1917D60F3ABAC64C0B79E5C58801FD04534E9776D024E1DED5065E95
6FF85F4A124B39B2808D5ABEF109D165455B642ECED22FAD2FDBC9FF6AC8A63D
089093DD92001660941683B03E8926F8F59EC4EADC0522203FAA9958C444EA63
A686FDC7277EAC0112328C2D69068DA99283F7BDA09DAB67C5ADBDB1E374B506
AC295D7C28BCCB57978FA84293B7435BEDBF790C4B44F93ADF8FE08B4C777D07
F7C970E59ECC89AE14F4F1858CFDD97C12A42BDB0EFB70EC892379E74540FE0F
CFBD1A305FAFEA916D83B42026D09F45E3C7D0348DC13DC2024107F9D99BB40E
1C519CD2FDD860BC13E16E91277DBBDE0A0226A3B4950FF6707BD66CB3AB0FA0
8655AFF76628E6150A929B9B4358E02CE0CFF2F88B4E6BFA098D32F0E34F78C7
1B619E329B4519C26179A9C5A8E0E3406C8F89F59E9C81628E68B2319D249F7E
C190993642CB358AF09440651F6CF4B3081A4B47E4B2B9E89DD1BECBE087BAC2
50F6D25037E9A86E518161196937F94864C7F677E300FF60A149F29332BEF40B
5B16A1D2DB8C4196AA84C737BB916A45BC324066485B5F403FF29536039E00EE
CA3B59AC6C2117189BF7CD17C07DCD92BDAE55B1AA6B6DE7BD4C644AC5E5B117
1F4C2A259974DEBA904F1BA78CCD89E45E62EFE2B32279C16898AC9973AE2A38
BA3804990F94E899A57E5B9FD471E53566F10D5F8E5F3DA8DB80706ADC544141
5AD0EA34B7BB3A4184DF6304D2867913C97FB5B0DD5CF615B816A6E90F103E02
7A164D305A420304F85E871F5A77FC8DFAF5065F19A41FA567031C4F16544441
32329A660289AAE4410FC64E3302CC824F0067D626B0AAAEF01E2C586D0DA7DA
D6EC523F7FCBBA6AC475C884B3769C75990D0061D8A54917CB026EDAF55491F6
0818EEA3889FB8392F57BE4BE182B460E8A7D3F2B38F560C21236DEC344E8856
4F7395F204C69931F72FA1C9E8B8DE23E8EA982BD63339BB57FF25C28B1602CA
BC7146137E62D7DCE2821994A726A6F36EC0EED9387D12E14CEA8A69E53F1261
70D1C2AB835CFF0400A34F732C632F2FC4035B7D0D6C6530FA6FAB9D14FBF12D
D65789643AA38C113836BD755694824F778E698FD0EF8E5ADB635490CD95A7A9
77C61007F327144125C530010C82FA7C42A496D327B8FF3E19209006052DC161
233FE9BE0A98D582337BBF3521826FE77B0CC40A35F9CDECA501204E32E172F5
14F42DE8AF05E435CC9680A5F971FF70A55CFA157DDFD60498854575A8F9D5DC
279C2F7D7D08D738BB9CBF32CAA8E316FDE2676399F70E74E4432F4E3B2FF589
FC592412BE687A5D43695D0A53AD1CBFF8E7FF0BBBFC23A4D2CDADD01419A8DA
2DEE2823E724E90A578274A848C5CB57EA15F27393A5484D6D9A1149B1BE96F1
AAFF2955A2B15074312B3031128B8300CBE88EBCF38B65B629DCAE195DF4C206
C8874BE0DDEE982F396E601BEADA3FD3737BDD95AB3EF75E6FF993B784C4F9B2
FFD66BB9C84BF28922C3EC0819BA1EC6C44A363E1A25D326A1F6A6B0123BCB42
D5E89B7A32D54010738DD3B436784A142B11CED087025095AE1CF3EF2B45680D
8751AC217008F2D34345865092652B605D4CF47765EE98FAC01B0A3207528853
5E006B608656A0B522AD3A902CED6D4884B85BFDF8A644A2F9FA944128D12382
2530FD788CE0757017A39E27DDFD04964E91C583FEE0854D5F159712344512E2
1C5B5E35A3A79006698BFCBD6DFE60ACE29859D4DBEDEA4D113EC9E691DFCECB
9724CD5C78D397588E920BE0ED616B80F5084C4936D8A0DDA0622A7973489FDD
2D8483987442E6012A4C12459E628D3E36D083DC331E5598F05231B94A792D49
0BCC148C7A49727BFC8E8D27D6604FC2757486DFC867D0B14D5BED195EE6061C
A47631100EC801FE8FFB415B42DA7478BE448D34C88B054367530236F600FD62
0F3E4533A560716D9842618FB001E0CBABDFB50EC74C20E497DF59B36FD56031
3285C2465A03B988F7F3FFAC54B794A7E84A6BE3888374632C8F44932508BD4D
FF2BBBA6CF7FA5DDC5CCB8957494520321533CFD004B4F7C63A043CCCF6B0F58
C310FA01D98B9472B629F5A41A05CF72F26091EC56428F6C58511AEE00A33BBC
AA367ABC243D03C66FFAD7CB3F4CE2C4D1EC7CA389CAE0E8D183689D8EFF3626
EA3C32B3664E47D574C1659ABA0EFDB716F873B8E8671173711BB33FD0C6E4F6
B59217664D00E6A9EDAF0BA338C4DE0F8F61453471755D7E78CC5AA03A53BCC4
00AC325632FD5D092E2A99B720110C52B4CC3DF69D53AE2250D815F3FCB8AB88
CFEF67D14360563966B3271F3688572BDFB67DA18352C4A2CCEF162F4CFA14FA
E2EE8F12B9EC558C85A026425563B711DEB05472DC2794CC1E291AFF76933CF7
5EE5B260B585357FF19872DC862210B8D6C76A2A86C11BE8B16ACAE5410D10E2
A460620B8ED037C82DC5AD3973168543CFF7D97F85B8B9C8736E490F96458B1D
24EED65A16C1E510D473F27E8ADB67490A174E66AEB3BCC68730FFAEBC584280
A9BA5CBA6CD468234D74A028E8D991CBE675C56382E2BADF1E2FA12946FF0639
5E61958293BEB14371CB6FE47DEDB107DC808F20B67FC81FF98A4270C11560B2
72C799D301D2A542C49204C1BF9650F2FE85D99B0096D179DA4C1E7F5CAE0491
3F19224576EF7D30D2ECA6E1ABF4ECFCE7E2AF91DC2B8D874CD5689B8B2E07EF
5F0D51060C3D708ECE2055417E7EE0F3CA8064A3237D6BE11D68B2D3ED582528
ABDC58559C50A3CA899983114E09710BF7C0B33050E083EC01131D68E4AC3BB1
9533E794D184993CA2B4989521111F41C256249FA6A446DFC93AC02D3A5F20AF
076EC3EDCE719522D3974B0614BC44815B2E8259DAC46E9F1FD93AD8DA0A754F
0EDF2B68640048B7142EA3FCD65EF180989A2D1D71AEF584DC8C353AB30F4E49
0C87F5126D2CC736EAFA1467E1F7BA1A236A7F54B3A86296C34468E56886B380
E39EDA8AAC0C89350CF2C82D58E07B975DDDD931A86F93FBF3494117F88462C8
375993A96CF1B6FFECA54F800948C28FAE8D40A5B374DC5A2587F5E9052DED6C
50A35DC781C4FAFA290DA31FEBCADADA61E05A1E362004101E913CA366B63617
8827679C8B13699A829B0A3498CFD6C0B94FD9FD1B41568CF39634D1600B69E4
FA37F030E6ACDEEC44CA060794B13B88EDCCE43CB1F85993818A2C56F736C365
BE2FCFF95C65DEB59DDA68ADCF2C07E8D3D3EA68DDE3A6F8C100719EA303624E
57C2656357606FAB93B9DD3D75177668CC5538D1B8B5CC08CABF91E852193454
F43F35D818EBD4AC7AF0D67AB235C6A55CDE6BB618E90CF5203D75F1A913939D
273D7966AF5E616F15E460A9178C75240A88A2951EB1410816786D16A6C5F74F
692AB281984EE65959276195A0B0FCA69DFBFDB8E5B9159D74A3BE71F9945AB4
F0A2D9CE3891B7DFB30B51862B41B13698066DB3A1156C132F15F60C282A4A16
DBC17FBBBC04D565E9D4D3BB27489A03D95F2FC52DD76ACEDB9940CCCCDAC3B7
B1EB552B5A57A62898F5FF3A677F510E04DA571335B8C1DF5D27D2EDE01A4356
1012EDD569D53EF9FEF1B642A1CF775C5B865FE7D8EA2E207AAC9C0B886E9CC7
E488F5CA3A77736C4C5A8A6603D00D7B4B197CF890E06A1ACC707CB45FC13328
E843D8F78A624FFB61B28A5DCA3ECC6B5E7780223F8BF58BD77354AE2B9C40EB
A0BAE120EFC68E1A12DEF2AF01C53026C2B1B96F94805A514B568281B80A0A1A
D819B542819194C5506799B26F300BC2D6AC3FEFF64D570A357202CAD442FCA1
5F2508CC24C59E778229CDFABAA9DAB9423AF3CE9ADC73B43508B254E5CA8D72
0791FE3F68730602B443ABE24F9BD811AFAD8CEAA0E041F483BA30250AE756DE
AB2D7F66B025A4CC89B3309D240A1826D2EB9E0891A62B5B798A8FE27B567ACF
F92E68B58B4CAB0F8E5327ECF3AF742E3A31A206582083C60A9DABA7DC91C05F
5BB81461090AABF048F3CF86083A1F60A646708337806A60363760646013CB21
4834FBF116933DDB7813CC25AF7672A26F5E15B511403A090A6B96154D809D0F
1BBD1A98D2491971E78FA02AD3807E17204FB1076D32530E233F6D1D67A356B9
92B70D62C60C18BDB137D011D28FC7F22133C9DABB1C1FF12E5BFED5F98F7449
85B430389A955852A02548439D2A538FA621BADB14AEABC62D4156878637B630
9183DF457E67D9C60572C6F16402417737AA5CA427F70E030B8B2AF9BBB1D4B3
BF4A442876E10C244258F673632C554DEF133A5D11991BD01F8C9AE8C0D6B6F9
8B94A26C3B49D64B908AD959F8E5CCACD9D3CD21E7335139FDACE030DDED40A9
AC30DDC7AB28610A7BA34D7C656227655C4FCC8E126671C341E557F3BC34E8B4
D1D579214599391F2D26AEB21FB3DA7E9B5C94D2AADDD97F10EA3B7BFE9CF4B6
5504DFA9F34620A451767C6E21B41770EB698E62A2334B50BCF7D4A5398082E7
592FB101E29AAA5F6014C6669900283A4C627811BF198E5B3B4BF864B9D110CC
A371BEB3BF7AD582997B1DD1D3BA9E993118F079763269A153340BB9D98AB025
179C6C7BCBBB581A65D97C91EC6583224B34BBD8CB27BD4571107FDF7895E4E5
7F7F598E9ADAC6FFF4218560646A07E096912C8A95C410D483AA73EB0B0AE78F
F33E7997BFC0BD1F4B8982FBDB60D12BDDBDB1B3C070D7A83E1F4A08EEF4E3FF
695776DE57252D7E9540199F7E4F13D1DE09E75D63CBB49FD091392BCD13D5D8
A971BFD21396A18CF71D16ECD8A37CC6B1DE599F16433DDA1ADEEFFA15D9D04C
A1A9A5B719C22A2C125990A2D4986D5589ADA6BE495AD5DB7BD17C9214A31ACD
DBBB7FD173C7F0DC2610C171906D33385292029B34E09BAA559EF54E4233CC70
3B5355E422C3C9F64686AC42D1A4A0EA8579B944511E3FDE8A785AEAF729BFF8
BAE9C97A1C9ACC194971A294E90770F5A03DDF82036560629FA89029DC7F04AF
363A5C75148ADD98B8E31CBCE0D18B89D953437FDC6BE091C2F829DECC9F22F9
4BBACB6B93500BDFBF63544119FEFF0F0E0A62B8E0DAA4B2BAA9E886B757A73D
BCC5B03DC90ADDB0F2E0853AEAB0321FF42F53BA0A1F7176F988D347F1202ADE
0281466595BC76BABDFEAF0611AA42BF3F82F5FB7DDEBE96147904902EACBE42
C5D0841E2310747BDE3A85DAF11C9E0A83435F146484B8F9DFDEB8A83685ABCA
C27802BA3E89E2E12D1E7E1E0A8F804FA38FB955C67448EAEBBE311634B37727
E77B5AF5C18EBF0C50F8BF1E11699611987EF2D4B3197C69DA62D0EEDD80C421
D24B2D77BA5D2C19DDDE528124ACAAEEB072745C5CF107F2F4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI7
%!PS-AdobeFont-1.0: CMTI7 003.002
%%Title: CMTI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI7 known{/CMTI7 findfont dup/UniqueID known{dup
/UniqueID get 5000825 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI7 def
/FontBBox {-27 -250 1268 750 }readonly def
/UniqueID 5000825 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI7.) readonly def
/FullName (CMTI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C525641D2B175DB6E
FE5425043CA62CE886B802B23F41D33FF06CB9EAB7DCFEE2AB63C1333D9B042F
B0A32D7634E2BC65BD7B7C53695C585079EBE138B40ED4BC7D06B30C88B5E0C8
E93FF20138D513B24866986C4A633304FC4945EA8A6C6BFFBA1FDCC8F7474BA3
D997548C23060E15A15687E9B58A8D2E2D749776BA364A2E28FB03DA767645CF
34BC9E787E5D3A5B05F67D169D710592108F4647A0004F71159950253FCF9A25
028DBDB4FCDB2AB5F17E49A5DEE3C366C693E0784A4D036F92FC97F1C0A0C08D
E3FD9FB57AA80ADCBF047193DC787C35FB3237AB63613A9244727FB93754EDFC
323A8B936100717C26AFD2A4EC3F66C438FECC2D6EC4C2728ED313AFE51896DE
9BB5E98049A4940FE2EC90074C0EF991AD2073AE06B7AA62C2D6A1E74E72D3D3
739BF7461E7AD856263A57673F6C7E33C07E330A9486B20BC9FE4D2908DBAE9C
1078C36AD01B070C267BE3A1C8D1212DEC9CB71683F464783AA3503DD646FFF8
C0D859A4356E4995246790E5A2FFE5D46CDCE889E32516264498AE92D769897C
A8E5FCA9C15392A3AC0BEE3573EE14EABE243E07F10E33BCFB4CDFC7AEFEAB6C
F62C21EE29CFAA994A575D56C692C6E040FABBFBC5C0C79A23174E728658C967
A64D87103716B3D29D724DAFFFD2DB429F9C60EA4CE589C3B5FDFC57297CE277
80E9A72FFED79394E57C4CE22C5CD55433B3BB329F78F35B25BB3F635DD11897
75C1BE2A808F26E0840D95A04FE7FE0A85B2513745D1FCA46A54BC1EABF596B4
F0344BE1A8297EC0E7932E1C82051868BF9A463ABFE0C63ED8F0760A44DEB196
4643D15E499017B5BCC3D28C576A2E0523BC3C282FC3D078B4F944B22506D29D
8EADCD89A7E73BBA812C34E4D2728C387AFFD3BC4776236A1DD646ACF4ABD7FF
6A09AFC5EEDFC35F3E9A3C0BE49425D85B0E1A935DD5C076062888DA3B4DBD7C
72BD35B29BBF1042EC8A64E64AC472D3E446FFC36FE86ED8B95B65E6756EBF02
FFB1FA08D7CDD1A5104AFDDBAB721951E5BB5D091BE3F827DE1D2667ABFF201F
AFEFEC030C90440D358259A25A2BC111BB56B3E53E5BE0AC8E366CF112C289A5
48442A1E48C0115DF1119349ACB1FE6983D805071DC20D576D9267AACA497EFE
CEF2593A4AC5AF2167627B00C5EA97D125EB8A47E58CD9B213D74F2D37F8E474
D9E3EFE626E138F6B09EC1B90E207C2DE0539CF5AAB4A5CDC331B295D8202562
8482DA317D4BA1404A291D299E0A0F6024696EA9225E4C7B15839F733EC4BFFD
E85B7CE1F0883A5A0B4544E534015E25DF3BF5305682C20B1625C3C6A5700087
72969CBE2D79712C8EBB9F9776DA3D6A7A35C79C6508F8962B1E34007F4F9EB3
E4BBED40B4C76C56974838F6296ACFE974A249F80FFD668AA8159841E46DE0D2
6A5BA7E19B006D7DECFE918E0B792F4D0C04FA774F6B399E165F7687B4962646
2595E5B24DAAA8BB1BF33B972776A258F3D039FFA6CAC49B3274F193070D95EF
B96B07A2C5A413FE43C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E
7627355D5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B515E62DA8609
B45B1BEA5002053BC1F0896E9FBFC00A83FC660BBC5258426108155DA6C00024
AAF2DA69949B5DB8D9EA06A599F2B277E45DB331C6BC2F40660A33BB33FA468C
9F8C6B65CB2E273BE3E076B0C57680E227163C6183C06A4308A0285526E98445
8763C550EE9422B987AF5EA62E89630C007C63E4BB5FFF01BC59793A20DDD35C
BFB5C79B5416EF06B967B572F3C58ECB0A3798C438778F42DCE24943ED290743
6CD8F32177192AD8EF12373CA6E493DA0F045C1CFDDCD49F6E4C067324CA0A3B
389CFF8E2C408D8A4083427D4DD8CE33ACB202800A75E581404334E3A910EE37
9B6DBD1D296C8C164B7B9E1B744A09AAB39963E396F5EAF36D7A02FAC04A666F
6184E9CD0BC31B6C3ECD327960336FB1F9F9EB3B63284E0BEFF29DF468916260
15E6DC9206DDD65F43D75762520C3D6D221FBCBC530EA8ACD715995411F785DD
212848B1DAF379667F67763E6E4AEDE090130D1632153135992A292A12541702
3CCECE5CC690C755E8D6F4FEB9D0C1F5C7BE9E5388520CFB9F705F227E131FD2
ECF6FAEAF05ADC9D7343FCB8CDA6CACF0A89DA6E2F0F58DD74ACD2A670F3AAAC
51C82B11ACF98BBCD1D1DC49E6A8B9815116137E9DE4E3975D3363779165F11A
4EE8B49058750A45DF8D3548CB628EF51A05B36FE8317A864CC5126C073A056F
A1F3DFC27F4A5516782E58C26CDBB2C24693F66FA7BDE6430184675C5BDE38B8
FB08777618A8057F0B8102B14A9122214037FB150322003A0B4EC789F94863C4
7DB0F028D37EBE23863834060E0E7A557B97E9C83B3D1765C08A86A5BC59EAF9
356A0B1A4652044F5757B3CAF077A53D09FAC644D69B3C8FF220E23AC9461FAF
3EDCE217FC3222278BFBFAE76E8A3BE95920C58711CE421E21B3208438871E76
468EABB998E3B8C5A914F2E6D8F3A8390A3F3802843FF261BD4629F369E1E5ED
9A94C4B2724D31091117DBF20F6857873BFCCFEC228FDF1F42DE699A5B3F6633
00EFE62983F273CF97E171823BD3A4B2275D0D7B4980357B1CA613F8383C90FC
080A28C3CA09B30FB156C508C88DA67EA995A4805C0F56A0169CE2F4F165BC67
75D9256A9A182D17804CC75DC09E4195DADA5AB7410132B32AC9FFBD8E91F0EC
5E16F90B4845926B31240ED66CF7E7B30B09A2F0A8B5321E1D41A85C5BC9592B
81E62AB9E1C7689F5F3DD004B32D2F2DFCFF536FA73B708EEB1EC50431F01831
497CF6907E3E0AE42240C1F95CF761BD7C6D063805D473C94371C07CA1065F38
B6B75779F8B4B08993CD240F4ECA804E083034BA706FC89997A900A368D1F65C
E4D4035CA5F16EE160DA90FE84F81DFDD7B89928BBA041CE048841E96F90934B
877CC64D608B2AEC9BEE8B80A0E5181EB32F93463F93E7A2EA94AE70A60CFB8E
94FB7B11A47D9F8CD338296F9B8993BCE0B89AECB520FCE80452B8C5668A7BE1
65484C4F33340EAE118D1DD35772DCA7EE26E9D3097832357431FA2EC7AB1FC9
50E5C8CF1AC6CE26AC96066F5E1141461BC4E9B5D9E8238D6344C201FE1AB5A9
EA45B0714D1BE5DC27C06046BA9A3715129D41065DA246AA3CA2B2C81B1AD030
1218981023F8F5C0C500FCA63C4F745CEC91A8DA9B80BDB28DFC525950F82EC2
E7867CA9E096DA38FF5CE0DE0DDF7033F4CD1EBE11273B1373B76168930EBBFD
0A80E139FA67DAD2DE2F3F5A8233BBEB24354254171B18D4195F613047E63686
90FE10D47434A7DD0C619F2514DC5A46A4075E7B8BA6677E38956368F84158A0
CB37CF43C2E48A3856C0BA0F69BCD63F6782D8475D955566104C34C0453E01F0
9AA0091C9BEB71FCF385D90027C0E69AD0EB7C91B61B2976E31BF9D9AAE65588
498881E5F9AD116E6D4DEAE2182FB848DCED82868355E08D395E1AD26EDB5C24
9B92294E3DF2D11314DA237CDF52A5689AA1FA4E49C4A82381E5C8638B9186CB
633333610FF4112D7D02C3CA9AA6B44F5CAC4582EA66542B552A88598A759F3B
E3DBC0443A40B25DEFC7DC0114E5465FEBC3543E82494CA44FF09613103941F4
6BA67CE6FFA9BE0FE7A71A1BC60ED190BED3C0B3E7A7702520631D0A730231E5
F3B53095017F80525DC287F0A8400E1630A3D92F076A13E5E3D947F9F0277FCB
890123AF04932938C6938D7533D2429E580566681049AFD0AC057B59708BADF0
8FC7E5DF40CBD80F49503331A81A5C56375F5BFB4C4BCA6FC94B7C6FAFAEF6DA
93C704F907BF8558173DAAA78588CD8C7D1B13F838AE94C4E5152C29CBC171C5
B8B3146FB0CE369F0B0CEAE5EC657E60E74321BAA347D2307CC55DCFE06E47BF
FFDB7A813FC6D30C0FCE5BD3E77393CFC51B38EF275C84C866E69CA9C74C9AB4
A6A6DC7D12DB626552D87856DDD69AD28AECDC9756A00A0D32257A43D6E9CDAB
C8127E06C4FB513129926FF0395F0CC1C2D808C97635D33BA2F8C833F2F84F66
3B05BDE41F950EEDEE73DF90F644ECD7A72CB2CFEC1FCF17A867E0B0C0F5A7AA
59AF4501570A50EB302F85E542BD29ABA6D74332400F4C8365C3C9E988752F99
B839B7A0F630C740BE32D1486981D8000FF636C90F694FE379FC0709EE7CC746
F883810903E238C932073A90AC78E8F7DF9583C1152C559A6CCD3E5C7C0BCAB9
73AF3DFA8615A7F299FCF7CE7206D5F4B9040D387CD3C52DBD08E0E9A80C9616
5EA0EB493768C53E93FCE41BCCE064A047BE8C050266583ABAFED74E2B968BF8
6CE1507105B9503D6FC29CE61BF07ED568B0F1497796B6CF781E7262762C1675
F25E86F56CBD7E68B03350481DEFD02438DCFBB7EE50FF276387740E79E5CFB2
CD7A6FA367377707DF63029ECDEC47A4EAD2C87CF75E4A9112444FB2B5BE55B6
C25515FF648509AD54D739CDF040FCC34B6A88788E0372528E9B112FDB8C7843
5D557151B6FCEE99F53BD5FFF13026B95ECBAC75A0EF4F856D2F150817B0CC7E
20AB39ACEDC30E1B777C6F06D3B893DAC73FAEEDD93EFE3346C6255DEE89E26D
E279834A7C2FF9FC63E5BB9AF74295CC5F8C6CEE33046B00DAB455A40FD74A3F
B7D9B4251448507F2463443E9141E68D6C244EE00D1E009E7F739AA650C7A651
4901CBF31A83D7A188F7980E74F75BE0EBBDAF01F106293F5E56FE9A440E5CF5
89C2C6FD9026198136C5F0B51DC53C878577C932E2B2B549B3FEA7B8D12CAC8F
B975965E6805C79A02A08779D78D582548412620F69F70908E351852CBE389B8
A2084B98B072902E74E59ABE2E32531475866B3C5E515DD140B3BD06F77FE41F
8D7ABAD142B5DD71CE0FB171D93C72C1C113397D5C6BCA124297997581284FDF
3655C15DEF9EBEFB6EBA58153BAB51631CF70FF79180B28411419303B349E7B5
CFB24E53E6383A11041562E4F938100EA504B10FE0B58D0036273D44AEA380C8
D14901EACF5B826685E27B15D9C81F0C6E4581DFA876650C6F708A65937DBC9E
D53DA2057F6796D4CF06F7ACDAA3858386DB21B6E14CE1A4351C9B190BE38A5D
2A59CABDAA767FCE533243C6129DBC22634E979EDADD3B8E9B6C9407ADED11CB
E7DE1E57DA279A804612FF97E38F78A88B9A65186D33DE5043F2681518036CB6
05F77954E61B7231819803D8DB4FF8DB67F56A47893D2A65549AA44BB38739F9
C34A17A00ED72D004C627212B84D5B521CE8160C0F4D6836F02F7FBDA4F7B159
94A7A9719AFF6F28060D6798C25325F9B383F7BEFB70397BF0720C9D4DEE43CE
5A278D83310ACE58573A5C3A8B5CBBF50727556FED673F0E6D3D362B9A406127
A35F11282B39178A7157A0AD5E3F6B324D8C83805C6F12659EC333C89B849631
4CBAECBD29AAB3075239D0D3840D49EE57C23AE53DEEFA123810371BA2F44EBF
C8DC4BD214933E60B17971AFA46F64389621AE2037946772D7357164850C7EEF
9454DC7000DBA7F66EBF61BC00C46ACFE18C346C984477181FD298E5A2EA60C8
BDCAED5006C6DAE30796D7FE32FFB67EA010C68701A0310C07F97F04B928AA48
7964C458ECC4EC69A47DE4035AA97F97DD83E0BB9013833154D013E84204D9B7
FCFD0804760635839FB6CAD93935654EE8C9B7AC136DEE00EDD88D693A50FE11
2FE74E9B91DF1B2B4CD1E0E4AB2533A56CC0AD18305753A244620CD879ECB18D
473DABE960D6ACDFC3FC0ACB06A42DCCA04D73E18CD6E53123869411140CC9BB
06F7B54717E6437979E88248F7364602F4117968131676F4B8B05AE44FB24B2A
517FD4A7E3FAC0848F01788425C9497445B09F50FAA7DD10718F74DD7EAE0435
83AA8BB6BB68247DF6862EA85923F1FB13EB660D9F361989AE7D2F6E4C720D80
7B3D28C17D150ED27A89B5DD2C53DB1C1FCFC9DDE0AAF18FEF819FCF7EB75616
610CA0101EBDFE9FBF4A9A2A0687071331B07DB41E666F7186E5AA42BBA3D76D
9E2C0A1172F00DA496C9145ECB1CC5C900593C5BBFDB66C73B65A69B8E9887CB
7E8E4D4137123E9E22D1F08CB3B7CBDBE40A36D4C51FDEAB241B7C00BD0D2B7B
D493700B99FD83DAEBBA8E35A1B01105FEED52E133271E1F9FF215DA20CEAF59
FFB2D74563ED4317B3C56E3F58F367FA2D285916CA08CE517EDD722E8B06CDA5
F59F90BB13E2579B133C2D645F5DF5EEAE8A18D6115DB17DBADE038B8DEC5D71
B71F9203ADBDAC8CDE2A75ED88219E4D32847F1D5B1C0B74D6E03B74CF27DBC2
B4A0A1828F238B498664555F6DCB51A05ACB5F4669BFFF59D90ED267113C3CE4
BB7AA57C660229728175C2E11D451C4F132572CA8895D3963528AB7F4B65E4B7
F359DFC14A05E2211538FB21B4D0DC4AAB98F06AED736CCA3662CCBA0D937B3E
DEC8B155790F5A37CEC51BF0A85A309871028A67C2C3C451FED7FA0D45FE2437
B1C1550DBE4A512AFEA4679A30FA62B0BD33925AB97798CCC88AF9F5066ED9A0
818B1FD2A2954709907475074CAAC88363706F7C4AF74800974BFA1F0A080B34
8438DCD198325C68E88D3579FD298ED4F6C747E0335D2A4218BF03D95E6ECBC2
80A094FB09A5FB86923D79197F001EB06D4640CEEC20FD2340926619393DE5CA
EEDB2FEBE0818CE00B01ECB5834DB9395671C985FADC459805E29A7E640049C7
E70F06036015E4C4D1F6EF105AA6D1414F6DDF186D2B751F3DAB51F03819A8BC
1BF747716A4B3150E2FD10C1FF5009739F7FDF01980167219D33534D77945B09
1A12A93E748613E9998276569D1D97134980ABADCE4511795EA176B1F5358235
909E52F8512E6BDFB95AE41ABE56D672FA606B69D8361438805548ADFBB35F1E
CCF286DD2C100E646AB14FD73A283903D0DDD8CD8DC214A665B117C9D263C716
DA3460FC43621B9176D2E7E4920C4A068D6C13DBD4BCC1D4E7F790A8F9FFD349
EB48FFDB1B70376756E41C75EB4956CC901C6901BDC7F3F4AE48660E59B7B3F9
818F4D87D4D9DAAF84B4D947F0DA57CCDF44D2C03FC9BDC48B2D2311B140DA11
3485996DEC121F96567B91F2FD7AA9B39DE9504C23A6BD69A07E00C52A5A8B80
A42C8D10E764C3F9ACF723D221D29CF701E8CB168B50699BC434EB3793C19457
78EBBD462218F249BC2CB3B97315EDF9A1209C817EE4BFAFEDFDA894B8808B26
CA587CB7739FB7A91B9FFF302E727AD2EFE0BA46EF95A1F21A9C32B2B4F4FAA2
1F7036CCAA6ACAF7440FCD1E571DA4AED838F9EF1007EF7B8248981B8B15165F
733A0B6FB8D697B5758FF0E632246938A19BA25F3D5594C7EEE79D45A48972A6
8F66701041F42F42563CF2C57E9E9C173C365EBB414895045085951648719AC4
CFD520A335DE30DE06E7D13107EDEA3C4BEA82335E6063F2C47953AB23288ACA
F9A9010EBB8BC97EF4B1A21FC6670A8DCBF67943B672F7782D3EF1BC773C95E1
3523B5197F0E8920EDA0A2A4A857DF028AC0399DF5BB1E95642D39F8FF740370
3C8E4E80F6E4A00CC55A13A6C722A77268F33FA16B94230CDF2109F52AC97282
65ABE9C3BD2AA33CAFB4A4D61E38C422B2D40594991D943CE33A001A3144CAA1
C4F19CBB5816A386B974E6EE262FAF03D89E764E46770A5E0555FA377DFA6880
F5561CF5C10F8B6903DE178403A99C3B384FAA94F2C41CF57CC08E9DE58EB1EE
977C88AE260A1A8FFFC3C6838AC1204F34A6A16569177D6B1C7CE73513EB6E72
F1C7FCFA2AC432ED575511FDBE6AFB2CD1B7B1450CF9149C462D21871C2B71EA
BAC5FA16E2FC2C82A5A8D5FE0BB2929C94EC4E0AB0128AB0E039B398A8725A85
6FD9955EFF184CDF0D4AC4BA0BCCF6A7BB8F8071D07B6046864713C78078022A
18FE28F830562887FDAFAB6244BE43DCB6A70DA5CDB798809B5F2254D8267FC3
64DCE291E8AD7A28332355320AB4F3E3A84E4B60EC6CF57A1A00F90F21981533
1E5E45AF34161186E06076068BA5EA2291547FF5A8AB15B690C97A09376EFAC0
8A9B5DFA2D0047C6D55908AE35CB8763834BA239F9CFEAD9099FDDD7991BCDDA
A06C54247BD18B7A124F020F8BC59461A32E6A0095DB1534BB3387633A818689
F98B9BECE43D2285423720BDF6F68A15DDE313F2EE5EBF1E17205BDE90A3BAD3
9220C23E750973FEAD03F5E3CE5E45A818DEF5C8B6027B14CFCE9544FAEDEC35
963FA2738FF572E41D17A03672F9645E43E951A1128B55BFC856C349AB9E445C
610A3ED0D24D67DED3C5ADF5AECB5AF7ACB296E5E70B6A2C91C7F14421C7E20B
E7E0A773B4A5535C7C08EDEE76E2F596E7B9D50BE03391CD822FB6529D16D47E
B0753D57DE20F3D1B21442BA9AEBF33426DFD9E1120FBD6641B44FFFB38FA4B1
03CA54DBFB29B2740CF3343F6FB903E580157B4B907E8809C27CC60E310D57D3
FAFDE7EABCEF5BA06506C6F898E3D385DC3ED23C3F455BA143C7FE28D78507E3
AD73A37DC55C87774518959799DBB9A1D9170D9157386CB93389EE74AD0A4740
1F747E57B6AD41BF9C7CFDC26800AF024427B60C361B12C374372BB6A078BD2E
DF480060F7AD7DFA0A1C9D54D27CBEF31C3E1DAFF94805D7D1CB1AD29B7BB253
68E3DED647558629B052961B6F1BF1C3FCC8036E36DB31AAD0234F70E2831582
16E71B092DFFAB72560117932D88B65191616F9E5B704AD915DE23A1ED4C333B
063CE7FB04B0D356787E74ECA261830A3F14602C8256B42CEA88AF1819D601C7
F5CA4552EFA05D65B9C2B4F825D8D5F2A530A1BA6FCC0C142C7BD73929FC63B1
6C27E410817E15D3E56403C24C1A2BA0CF2A81B615BBF7F62A8752507922C8AC
68E15518BE0337053029
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF1BE5F191BAEAEC7FE400C9980E103D8776EC196E741AFE11D249E0C277263
80FBD329524C55943E25631F113FB14E12837C3F11F69999849371BA715B5366
B9DBADB6AA3F0CC8F1584F0ED734539F8C88DED9130BC317BF40D8DB4DA9C71A
FA23BBE9231FC7753B9305EDF5003AC733BD61B8B22B42791DDA958FAD80A55C
EA4462B98D0513DC33C12EB4893E3540D12A77C09EB1B90D28ED3D781DDDD450
76A7767BB4EBECB9A652F2E746B8E29CB915A585B57AF8D2A795576E2F2E2739
09ADDE65F8D65BB1ED4C75FA0AFD8F645B727F5308520D5889017FC0781C8B70
DE60DD4346C6536B98E798AC2EACAF2C67E9992402DACC5108713DF47EBC8F45
51ADC533422B6548E07C51B61F7CD97B7481281FAD76DDBA0F442CD6E05BDEE0
89628764437BC98F6C992CF2A2CABCCB16CB20302B4B933178FACACB41D36312
886BD7C7F69905C03F845CD84BA193D7B6C57B7E9CB720DE1B313EFE60C9B24E
B5DB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
dup 97 /a put
dup 98 /b put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DA7F2F631C34FD0E7EE6B3735317429D111049B6639DA160DDA2555235
3E6ED578ECFA6389BB0B585FCA9CC4C7F811F82BA0FB3B6888D2697B5AD4FF8B
3CC0F3AE801B507C46EE1C7AB310491CD561C4B085DAA68657212CD32A9D8F7D
CA9E3BDF89AFD7CAE84782D630D3AD98401E3A063B53A17B74A16DF6B4A8B5A8
6D3ADC6E9D487E772C82CD76AD2E5796CB7A4E5B5FD2745F445B7BE7CF2FE75D
07540A5654803954346A6477640C50B87E6583358BD1C6A8D583DA95E5DA4F65
B2BF8DDBD12AB9DB603CF7F96C3AF8817578C3FC4B8D421131839AD98D272E6B
D275884876855BC5A475A11168689F1786B51E29DBB94EFD999CC4BB1A1E649A
CA335D8680EDBC2BBB83872B6D88F0B5AE92FCA86214F93C68C7B702AD050950
3B7ACBE9C9BD7EB278E6A04E83CDEB95DDA95489AE144DEA843624282041B224
B5CE8024E477C72824B281B47C7A8D72E18EB1B12939D74BB455CB988226EB32
D525C8F0F4317AB4E28F774AA3A7B5994B2850E15B22DEFB28146F737E4631C3
562C91963E59F7ADB6B98E7E0C0F5878CA8AAA48EA768CD9AF6A6190E013B498
43449790CFB15C3D2837C2B362007A28C7FD51A6B922C896C474651962263C91
6F30A97DB5BE11DB5B3846B735F0B661AB50F49EC582E04D6BBB9789395DD2BA
4341E27FF202E43CA26FA42D516D375EB229EC1F0F82D389CAFA7C485D7A03DB
F93BAE275C5232257325A010FC44DCCAC9715C97CED1518D6CC7F75E12FDA39B
C84F983FD504DC018ACB7C2549AB317EA53EEAE7758BA0F6BCE285BD4894012A
1370178250605A37501B12B352D6A57DABAD863006B71642F98349B623745D7C
7BEE33AEECEB08E7EA441C1CC73B40F7C288663A9C480E5C4C78CA20B9ECED24
FD25CFE66798CF56D3C4FB47089F7F5984C0072E0825257587A7E7ECBF980467
ADEC7D725C402520DC32C5E370C0C206F63E7E6A6DA0AA29EA8B96B92BDEE90E
8A6556AA44D7374EC79B77D93584735760E192843692F14DB1E56EE93FD6508E
0077D29F6BFCAEBC63E8A1E78DC65E88C911BB42E84EA2B9AF4C073012CBBB33
BFF6B86AE5C2C60FC180F7DF172D0239696E54FA76074667EA41279831FE7061
3141C3D47A03ACB0C0A067CA2B07A273C5758C4EFB76935A0C8D0C7671D85D1F
29757F2ADB6B9AB4F616E906F0B4E7B42AA21A53DF5D541AC9D30C6EB09EBF65
28AEC564B8F226167F5DE3FFF6ADF16C86A5EA3946A76F4FC3B5C13CE5977C55
5255B81D80D24A6DF35CED12D1E20DD90E264A948CEAC9EC4EC15E2CAD73AE5C
5551
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 15 /ffl put
dup 34 /quotedblright put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD2E141C0A7B647030FFD1FEAB8CE703C40802E0D32EF0DF87BBD5131CD110D
BF5A11D66FC2087779FCA72E245C6BFA23F60759FECFDF932C3026D4CC21D843
9789FD52FD7A85BEDF58DAB6334F4880C2C99F49C0F64025C76E0550BC4B8AC8
5C7E817DBABA0E78F36954E9922286067E92E69D23E9FD278CD5F26788A7E5D8
476DE8E21397716DBA03B23D85CC8B701EAA654C5EE74F40D6C3AA3F46E30A2E
E663C2CC64E2DA3631AB809AE1B70D89F53B1D72088642CD07D1DC4C7263A7EC
9785A2EBF8CA24D40E2C60CAF478FAFBEA8A27A55CE0320FE47E2512D88D1244
95CBCA87983B8795DBE8C15ECA68CDDBDEB167512E91930A7FB226994EE4487A
D1E69C7E7908AAA5D45BE3B0D1072BF1F36C6368AF31FC583EC20E6634FA5777
5ACA6512C5114593C89A9FA5772BD7C4C2FA9F39517D4C7214E2BEDF91EFD2FE
E16D8F0CD21C4180FEC5E973472E3C8B21852480F767AF2CFFAAA7F2FEA89F09
AB688458346234C0AD2CC48545D83EEB8F41A3D0030AAE2FE329B642A71BD969
3A284FD65AE53B65CC207DF511ABCF1C0D51EA94431B2596B72FC1215051A3A1
F5BD9581F43FFE00C6209CEC2CBDBDC9CD4956D2544218F8231FEE1DE50B9D2F
635184511D8ADCAC870A12097A544A146ADEA4A23232D2726AAA59C5CF7954D4
897B9CA6B45458BF3380F7D1DBD5C97A8200DAA1B7CA9262F24A7EA3B946E985
A43ECBCAF2415DB67DE9A00AB006A3A0CD4B1556317C14CE28BABE46707343CD
741E046225CEEEED76D61912E07AB0CAA1B42ABF5428CEF4F56EE1E62B16B769
E83CB6E7B9116C4B0D4192206175284B2A330A61E80090E4F877A56F6858D240
79ED933F04BC0DDDFE31E137960C15E8C00AADDC3DE89334F9618CA219210BE6
4E1825D38C9E765895F895AAF9E902A41E2071131FFF47E45393E1845DE9D35C
A6B608399480E2107B346FCE46B2C64F40856CA0A4E54514DE321A05C3C87F47
541FA5BC4C91B0B2CFF7B8E2DC1F8E1ECD81C51C22DAE69193BEFCB4FC1040B9
C2D6AF670DFA437A86A7C71A1002820A848458E10B1B1FA3C0DBB7450E206C0F
D33F49F8B96A05D286BB01003183C20A8AA628DF18E42289446390E50B955AC8
0BE31A59871B9BC6BF752F72CBCF52E6C9F81EE4598FD2BF3A597F4DD367701D
4F56B02894F8FAE17931B930038672BAC3E9DCBD540D2FE46C23590A3E7ECF42
9A01D947351BA42BED241BD840144F3C00D1DA374F4BF370F2F7F8A915E3CDE3
3AD817558DB13CF7F5315329D539B8F0B4D092F4408EE31C6B70F04C85631B3C
CE2FE58FDB474E586F80CD0B67CC9154F23F883F73A4E647EDCD1563316230D5
F2776ABE58654513CC97843B25BCA04CAA5262127B6BA44808B99E7960F64081
83B68363262CFEC0655EC2A2F34A15CC8016D1865E305EFB5FE101BDC3E8AABB
EB17BDBA6C69269F960CE8F13B792BCF9DDDF114FB974E3202FFBC13D1AE82CA
0BEBA7E6559FD6195BB496749F733E3CA5B809337E3DEC4B19D75C70387FF909
B5609DB0B25F29B2D2F2C5E04AAF44DCDFB26D2815307136BEED162B73E103CA
5EDDF6E4D834360C4CDBACB858A9B52BFD8F20F63CF06C472EF6B763FB20F65B
89D601E7B65F6C66DD57950C247051AED18BBD4553B44E6C5CB10FBFC7734B13
F6A766B5367B5302B2E7F3961352BBE7FE92F71B6B8D5EEDD68878BD17D62F5F
A63C265EAD556A952543EDB8432A3F3E2D15403BE4E4C1A7BAE9811E9A6D5E86
782AE6710AB39686EDA59F6C88FE50C82D1D368107F5842B9BF97840AA069D62
CA33CBC4B41BB5C78B404AEF16DC15525C0B4717276773F6553E816F1A5D67A5
6643877B6267DBDD314679A87DCCB1349BFF37072E42F6C8AB7D803628231B7F
2E41F91540D35D9F765F59CFF9D2E2A0E9E4C979BE40DD064823C5F85DD7F1F8
A5F271DF643D86D98C9B6002B0B879F8989AB1F39AF93BFFF8535E478811B023
46D1B152677F2B57D18DA91FC3A6FC34E0D91B72BD94D109ED3AD7DF88DA73C9
21C3C32A03B41CF97F310F800D2A9C4BFC8B0412266AF19965D7506B6E48D54F
B10DFD409DCF32577D7F1EF72C7C1109259BD1AC256ADFF84D2BABA740533DDD
84BDE5AB9A5791C59B692F8922797F5253EBE231C3A7C99E5FBE24D412F47F2A
39E68811AEB88190FB66572A6A4C3AE071CAE8CE0D6C956C744557BC13545B2A
5F6E411D5780755D7F174F410DDD99E580A5361D5A1C31632DF0689F1A97B97D
91A2AA614FA5EF1C387D7F250656A9659731D9BD1FA986694F23D731E9F5F7EB
E2CCF1D3F8A0A46B9FF53220B43EB51CFD675F4CCD3AC0356AD1D31C728F691E
F456CC51ABC069CD8BF4A1CA05C8DA69EB3F66EB284D2B6F5182CA097509EE65
DA087F08E544C5BD4F3F6F5CC5F7C4769B09B87AC3D67C845E692AC9344CC54C
EE98F534E0AAC1AFF87326EB3D1022A1DCCBF49CCEAE376C8B3E08F48DE4B6F6
7644DCE43D67749C8C567C7A7FF7619A22BD1E994C70285AF6B099044B1E6ED3
0C2B020F2CC22B877938EEBB001C2F16541D8B4EB0E43B0E1178D8D10E4ACF40
C0D9E54FE0AABB214E0144D9A4715FF41CDD11DD404ECF9E1699060279D46AB1
83D1AA9A09B7324130EACA0BC4C91E8D11B56BCA05E9C8ADE42F02F59AA5FCE5
F6EDE5BC7EDC51DAB6EE753B89B49C2C03AD8134C42D4FCA57BEB4A7C30945A7
02C8AE7ACB193933520994F5D6156CE51D77B0D41A7955540EB2115E9CD45842
AC3AECF8B2F373C20312FA149F06B22D45BA26CE1DE37293621CD557D51C92C0
DFCC7356BD6CC7E6EA85D008F686E09EB19E706CC2433AA3A8A94D746754C12D
5CFDA417927FBF3959B5E3352678A359F2CF3A729B9F8778B4E07497DA38DBA1
BC2A97F744DA85B6E2455BDE356090F1A46D0103407C10F38EBCC7CD66E57831
9BD173A03B2A46AF3AB2BC898EADCFAC1A8B725696B5DEABE861111A1C9E49DE
60DA9F7620BFBBD5E969B3DE20449181B35DEBA5A323B39D121567EE72FCEC16
9990A739C009DE80FE0594230CC20EDACACD54A1C924DBA4EAA4F493A07124A3
09C8E6940991B36227DFC25E9C3B8F779EF822B25FCFC7C7A8314F8ACACFE235
7852DEBC5B020571C64AA9C69090D9255E7920ED0AEEB5E59226BF4112BF9152
14D7ACE06D7CD7EAD944EBDB3D26329C3AEB150A34E5BE27361EE767C4CC7151
4B13BB0CE275BE5ECD7A7F2121A430878AC9B48E420605C93B20E6659AA8034A
F404EA960FBC34AD8BF4D809BD59133F2A82092FC1193F33831A7BFE3FEE5DAD
5EAB492291BF4EFA7E2C0D7472D0AE120337CCA1B52ECB0CA5C71034237B47EB
3E68986D3AF6F3BAE71B06FC15CFEF7C1EFBDFAE89A7C41B7919E867F09DB700
339A1F99A546326C4AC8863D35A5D42F43A5A4B947011E68F6FABDDB6C50DF24
85626FC77B55BF8068165D039B6F3B0DA655976AD62DF751DAE93CDE0FE316DE
9AB0C742EBF9ECFA2C596EEA833858C6F2161C232564F0FB949C352D7BBF544B
7AFA77C63B47F6C9F882DE48CCB0B2105A3512B837A7AB7A9433FB99704F9D01
BB04B6FD7FAC77920053C2FBD2EAC1C6A9BF1105A77651F11848ED6AF43C5050
D50CC76E68E83B66D3EF07ACE3AD622066849537D5518B1ECF8A8792C0DDDC4E
EF97F16EA74E72369D3A82AB445CBDBB4E1AE00FDA1FEF8A2D24CD1C624F69C0
4931E16BACA67D58AAF4868A94AF9E0D56285091854FDD3D8B8C8581BA74CE27
B2C4557DA23985C5F6DD85F71BE041D9A21B6C7A643FB4C54ECFD561FE860BED
F2C1B962CF73B8B51271321907450C675DFFC860BC15D09F6B404D6F114E50BA
38E9B6BECEE369CF42FDCDF750A8682A26B18853679B48283FCDDB7E88D6BFCB
FE0E32780B9B5BA996141DD4C4227BD84DCFD4F00C63B76332691B38866333B4
33FA3D0D5366CB8F65CEC66D805485D619D58F2CB23F46005B8CE6D3CC2C0A9B
68BE02CEA8F30C8C56D54B72F86E2BC73F84FD75CB36F23CC1CD900B99AEB345
51C18C39BC97468BBCFB1D3749C4CAFDA85B6CF808B068A551227B0D309E761E
71A0D3AC47DCFEC0F40A08847FB1EB4D67D8277D1DEA683C89C793C70F941D9D
26EA1B9B275B527DDDEA8FB03F750AED34174C8347EC5AFB0408EA63C378A11B
B857480FC9A7B5CF469447A7CD19477153D1C846F69A1AD7035B319F19212F72
7D798F00F10C90BAC481268BE4676980E49EC0CA685C033FB6B901A59DF21DAC
00C328BCE7A641F20F8DEC961C559F97D6414A67404A86A694D0A1613345453D
A4A2BF1B2F8F20BD09FFC397D2192C026D4BF5D91465E6EB2736632502311990
EA1AC32DA2FCA16EF390826950186EF35D59BB97496DC105F0DF0BC6D41BDEC3
798E6C7AFE92C65D8F60B54D900BBA7C3AD1AB208ECA13AE0B9606D2B3678642
31166CA86B82C4FFCA57E1CA47B8C2816ECD543DDE1D6D8ED1C1B0620B87B560
25031A9CCFB56728AC54010106AF8F32B0844CD119944891C373DF475C5C6B2A
320C7AE01A6A408CB8B090DA2FC69E446427B3C606DFAD347B4552FD924EB089
4CB06E7EB5C1DB262CAD814F004131456D21C4C2EB455EA125E89081DE0A37FF
22C019032F38A87D24EACD252BE0CD6F223C5F0ABE7B83F72C5F1804893949B9
B7DFB767C4AEAF6B284D396A92516996547B9C0D7A69C151913E4A40D1CC6A0C
79A666C418DE6DD69C7CD17033DAC5C2AE3C5AD48E9973497CED7AD5785E5CDD
BFBB35F6864E9C2E36051D710DAFB98C0AD46BC72F272E456F7F13FF7426DC4A
3097C6C4A2351F6FC916EC535BEC1F39D71BD39E12EA666CE37C32E497B9B970
139FAC44FCA2D570AA0025F8FCCBD0125E804916930FAD27EB22C430E207DB7F
4673B13610722EDE694F6091B282CE00858283367028F026A2FB26F66BBFA135
58F57F595B0E57416D14FBC03755D5903D0912DE85017B3CF1942DECEEE71415
A3610CADDC7336F79262494067D19634706C078E3AB6590D67C381CF46BBFA21
A38B7D671C8EFD42A1792CE5A21B459C953871D33817FF41CCF0CFAFDEA78B18
F3B4548A38D4EA19BE1960636145E78A471C544836DECCBEF3CD8DC8AD882D76
F94C64CA38C07ED05DD235974DE49DC15D1B42EDFD063C80EFBD2A8C52EFD563
C75310207B83FEB7E23C7275FFAD2D9D91281C22B01373745565EFFC947D2274
4BDED784F3415D3CC6D1E802DAD35A8A76CB9A4625194B4969B2134895150AE0
62E40D2CF1BAF2921B3847315D63B4522F509AAA0C5D1B684F8A608CBFB075AD
C9F433C7A1DB6F1CB23FACAE3B5C559F7851C127655991BE94A104D005B612EA
4C3F57A88411728E74DF5BD05F52A0ACFA0F912C01AEDE221E360250A1D18680
263B79CC41FAFEDC4C98F6B7A512CC517F4AF4731C6185086157890C7D33EEDA
1C3ABFF2AB3445402830331BF6A1409BC3CB21B1FC153B4476CF2CFAA36623E0
E9381A7DF101A67F608A8C544A3EA2F58E60EFF046573ED90E3520D8B93E67E1
E88F2A060A1FC2B8ABF30F15493277075E3D4FCCF54A0886B3D49B398ED21E62
0D87BC7568E328546F5E72D33E0EAE3A7F33848840E4D93A5C20297F53F1E758
4323AEBF7908E3022102ADDEE4E7FDB95C7E058924D91A57FD7F17B81E89DB11
8C36AF0F3A1D5AAA567C51CAD4B74D9116D0CFC01A7F6C1B25E04EC65D96B753
478D83C90C57F881A030C43A8A3E3890C73F054937153073C7A3671CB98DE29F
2D812C32BB49F6DF69B9261E75F5E9F396B235AC27453A290C3E28843FB08867
B4851291164B14DA11FBDCCEB9A8A0DE69FA0A26B36F00B5F807296A1AF8F5D5
786BEAF5357FE6C0EE332653D56194E43FD84B3EE290DA9D44238E2DA4D161C3
C61D321F628BA7D88A5236CE8877A3C619D6BEC56573D0527236DE5602CE00DB
F3EC323104ADECDDCE6823FFBE5DFB9B506779EBC4078661A6E9D837166627BC
FFAD2DBF9742F10A00AC49CFB8793B311C3ABE1F8BE1EF89D5CAEB33D7C5429B
D9B5AB04DC4662AEA97CDF5BFDA4C16E88DA7B2697C582BB5F07E86EEC0E70A5
CFF4D47C996517773A6057265FF5CCB1E9F5847593D08A79162D83775276DC73
1DA64CA5F0F11D8F0D0AFC7C7AFA3817C7908EC30CC8EE018CD877395B30A369
94FD2BE8B33493BC12DCAD4412908B1AE27EAE240D4211315C9070AA6A41E6C4
AEF2CE7215466D818B1812F492FE392D1344E2AC723849C208181FCA5FD4D186
6B50AD3FE71997CA202C1AAB36978B83B204324B42FBADDD57D9A410C57FFA13
9C9AE9B8A97B2E267893EDF9AAA96F387F2484A47D05ABEA9116D523A534A001
A2C9B46BC1F35ED1EDB627A18F2FBC17B8C6E648031EBC26B66D331E63A7FDF0
EA4D41A9B1DB538892BE5ECB01E7D4BE2762BBF9C5A215ADF90DD71D78C4EBAD
C71C9B0B1D9584F468DB7BFCE8844FC76A7070F1256E6D345EE76E7FB44D5DCB
AEF5626A2E41094BBC79DF79498D2DA1F6072BFC65B40D3E8CBCBA7C1064978B
887A6B40D3A97177B97CEDF7CCEC95DB9CCCEE428685D1AC42FA12A9B2D8C4B2
6C98DC24A0DC6AB8F8BCD5241E13C823B569F3EFEB50F7ADD38E311E1ABECCB8
2A28E91547B2239A0F1AF65995CB45B775950503C753B0CE072741A4B911AD7D
8559AD5BC93058B9C903959861DF15CC214D8BBFD74DE371379C70957594F828
7093F50DBC4F76605F7841453D8DE7A7ACA9EA5219F49EE8C789A9BC7FC26661
851EFBF6F62CA8D8BCF5863D580BB575E889D0FCD91E0DF914553C2AA2C1AAA0
1041906F0DE19BC5C2061EE40A01C34C5E5F5826950529B8273A9AB9272AACBD
641BDDC2C6C86B2FAA8DFFEA8E1474610891B50687FFDF249B278E729A9AE376
2C69742767A2C30D5B5A7A09893C2C6294DABC83F908219559BD2AF58C914829
1BECCA0866F4EE607D43AB95496431BB95118CAB436EFF0DB7F4CEDB16DB2406
858ABDAFAA6D61D246CC1F2C9D1816A40030CA1C45CA675F3F848AB2C294F460
F38A5690BBB2C2CD537D32D8058D375364591E6A436932673579D757F139F4FF
D7FFCD770349168872F8C19687C2DEAA862F81674949D761A7F0DA194AAE5A11
66545986B13488A9F07FE76F184A0102981DACFB1E48145EAAC92B45ED40D073
244CA0E3E7EB251C283BF2697D700E8A999A1A9C0BED1255F89565C542765A1F
BCEFA330A7E60FF48D7E4F4DE4C70967A38249404FBD6823BA961C9635CF986F
5C553E430B2E60667E25B40CE5F805F05D14DFD2F0E0821C18297CC229D18EA4
803A74C4D65B16F1FB61F6C68B9575AF5DCDA808C70D4B2100053F9457D2ABC5
48AFCF2F08DA301A3CB6FE0F081780A72EE8B964D50FFAED56A9CE4F4A3AF3EE
AA7780A037DDDA6AD4B6444282F374B36783AC27A0662B578D1D27ED86D02C03
DE2AD7BD1C93BBC0D2DF88F76B58623A1927D27B065D44530B33095755FDD710
E5DAE8B30F743DC1505E6217F8D94892081261BC9F0096F0D46EE66E225D5FB1
1786DE15512A959EDB3DB2A033D070116B359B5D261798F68C23C789C44F8FAA
42D94E6A5EF095574BE427082DAC1C15BB59CF0EF368BFECE03DA3C01EAD45CD
C3BB48C38CE5E813B8C78134C3514D6FFBDA7D5081B244055814E72E35E5721E
CC6A2469C9606F8B003E94F9ACCA8FD26436CCFE1B15F187A33C13A2A1C33C4B
61679BE36575457BFD3A8E5542BB1CB7420A75181371D150FA46FFCD182C9927
1F0B0E972C67DAA99A313FB563BE3F611295BC56F970809C94E839A15BBCB463
7FF748820E331A245A04952FECB6EC0280458FA9B4735AB706C954AF7A14DD0C
F8994B080BFE0110FC60733DE9DB8F7D59778D5C5B6FF9D278F47492B015F2E1
350AA8BA725C61EDB5634835E335357DC4F6EA278111297B722E2E1CB6FFDB8B
714CCF44185DFE7D5C5102847437D21B9CEE92CE110EEE1DE7B5F4017D878E7F
FE09B14513D375ED4C4B58DD73DB9F1EAAC4147E6FF345960110A38AE0873B0A
7F251CD727E822398A7F2245681D32AB462EDA96C291B201CFBCEE5937373EC7
D41C3C03BDF9A20C2CFC53549606DF2F392565EB948C26408408F05714B585CA
F8C8C25561CC559699780FE1BD63B954AA9F9AE3AFD6F0FEC358957C67D4666D
37EB9B4B3E03573DFF2ED3CD16D2B0E6C6DE78B2CE9FD9A26B71AF3B8BE3288B
0EEC9A8115F808C699E18B67B18619EF782F72E383A237300E75A8A0FC9D6E69
9A4B3F2C78AAA3BCC1201556E1457590288378A1FCEC8701E7281258FFCB5A48
228D7794AA463396FF7380ECA8AF7116CBE592DBB60C1CDCF65C7355675C4EF9
CC56D2F49789326E2828935E2F9A1BFB91D276D290CF2FBCE023EBA47B6FBE78
5894DD9BC8E771F0688CB8F15F9144E36EFAD0590DF5FA3D6585508F77A96B5C
FF46AAFDC588EEC2F48DF2D8CE2CBACA873D58BA84C473E23E1DE9ECEFDC56E0
43988FC1E7C2AC1AA50E708512E787CCD06D227EEBA68D6331721EF197CD7B1D
91205F8396F0F363BB61338F2F3BA6838C762CB57A716B829B97E6501DBDE0B5
8E3C78AB24D0D2D9A80A0B33C2879316A1B86899BFB87C53DBB3D4A1D8F6F9C8
6C6760BE7FED6E0E3DB9D569A7A990207504A0E69E68944262E8A935E0F46A60
FB39BB332CDBB706C5E2CE1DA9008EF785016E18B6EAD7F106521A87B81E12F2
A9E981D0E9105DA28059C6A8A3C784A7C8CBD3918597DD6D9D06721A80CB2B6A
7359ABC99F2C0592C479221AB688D1DF4FD463FF484DFF96E4951B3AE881967A
4565AA3D633CD2593D59DD905F70A904E783C8CB6473B31A1041EE1C66111FAF
9BAF3ACA0577174189D61D6EF0FDF64A9DA0E9DC2FCADA2A6EFE94CCA9F12F89
D5786A101D0E0CEC52883A65BFDF38FE054B4EEF8E768D147C70C091285A4EF9
A5312B4F866620337ED860857ED4566924DAF6B348926E45CEDF95656DE38AB9
D91321234B8671A7E8A1695CC6D809BC2D70F8EA18C0AA55ECA6F95C47C71A47
BD2E91BCDAEB847A918A2AD7B1CC9D591E91A565085FCCA4F61D696AF781BC97
7A9FF9A4F04E6C2FECE9A273B8DC277FCD462536D090A4E2F7579A3B00741F4A
ABEE9C4F55CAADE8FE8A4E573F8392548D9E28E949444FFC84324217284456FF
60868C387F1ED35AF7E6C61623B2B2F57A02DAC2304817E4E51AE31A0704AE34
C8412C8563DF16502D1627CFCB147D07E4199D0D4309E997A9D86560EEA52859
FA4F7A856D9C41AA5DBC356A8FCDD8AB6FA18C5D06DB6DEEFBAD21CA50296B06
FEE421E8218B00CBB5E92735B8A7D7C396ECF387BBAF239217DE3E12C04D1898
C8FA3D5EFC90427B774A659FE67CC150A458F8AD2A8FF725945BE6DB7635F6E1
8F5ECC7CC1410E582D3620BC956D133FFA927342995A08B600C6B689793A65A7
5456A991DB215CDAB24C383B61869023F64A0CC6DBC401127B15C2308BB0ECCA
CA01979F4326CFE106E3F6605630A20D4080C1111D5B5AEF9EA50E63B09A6D01
BA266C204B768694CC0E032F32BF4E9718A43686A6F18FD675A11D10AAAC67C0
F2C125334AC215DA9D3198867D742FEF364C77EB5B5B46C365373FB9D9CD2DEA
509297CBD05D74201F2B6036FB7CD3BCE4DF805B3D36976228EC2BF2EA29A666
5B3189E7FA205E3D5305EFC05B66035D090859E0F350DA6D8F7EFC6C64EA3AA0
8D40491950EA346C5D4EAD4989E1F75588ADDB3F679FF99A32EA8A03C3B7A843
BE1C70FF8A2272A3D05E7B6E5666ED455D36CF7CD1BD87F6DBB5CF39C93EC484
7F72888B5DF74266AB8CC949821967FB34769E22E70C758E4621741434F909F2
FB6E5A81C046449172D816A00EC62F4C58879DBBE27D209784673A7763DA6DBA
EF0E36D8B36D30F940376A922E8931D9C325CFEB0B53B003892249CFEA88E1CB
FFEDF82882592727931A11BD1162C067021089529680602EAA6EE90CF6533AFF
624A3ED426EA8205CABE7EA0D7E0564AEA84F36CAFB39C62F24CB12159D554B9
D2A37FE418294A6958D308E80BB3EBD817757060D10BF7F108148EDC62571C3E
B439287071EEE71C8EEA8E532EF9CA99695B2F820DCA8367D34AD0ADFE3300C4
2759CF456BB3D9CA4A374565A887327FBDF75530C89AC9426D005E1DB20E9357
A83088818AEFCC95446F5253456219191822CC5FDF0260DFDD803633FED50095
351E50A6CFF702BEE5B43348021D9FB8D32A7D1D1E75F19D0C93916BE52C22EA
0012F0C3DE4D1B93BE7618579753DDEFBEFA70C75740815312E4E173C7EE1397
96993F8574735F5F0C176209C5870981CF2B8330EEED0A901DF0CC73E8636048
F360D0F7CCBC735019937DDFBC46885C3F16452D2B67C35FA105E8AF9A151FB6
B9028C5489E800548BCF7C61CEDAF2BFAA25A86F1106C3A877C1460BEB372F58
A7860643DF5FF91AA70B6BC9C695BDF3859D6F8575E97BB7C8F13AA6F6E03DA2
7B77DD9CEE26FFF412F736BD7B2A4378812405AAF6D04A9792055FBF7DD79DEC
D95D9E9E5033A9647782FDD34DCA2A7C38E9812B1F55A0DCA4E4EFDA3B8B7241
B187C3E33E6CD7650E5CE0794EF23C65074C9CF2C4754B890A1099723ABC5504
D197BEBEBAF353189C1A232099FD8A37EFDA8AF6ACF4FFFAF9E388396B83AF39
139AB0E1E8FC39251EE6C74A962C5CE8ADE2EEAC36C6773FFE08D4A4440222E6
938088BE6E6B5D1F76493753D925D250DC65FF73344DA405CDBC979A265C946F
A3B6C12EB2B64FFC9E882FAEB89D2C8F818C148DB2813D64FA9B71A8B5A7DF03
7142AAC2AF01759251699A5A5D3C57B0838A82B02AF6284838FBCAAC03684B1B
E20FE5D49B8542EA2E0A7E6A2E237BB854D37BAE626C2A6C1AE166DF92796274
EB4828DCFE32A3B41EB77E5E6CC6E949E7F51AD6FACDF0F59CF079C1956EB67C
5BA3AB7528D4D119739BC487E78B41074E99458548E272465AAEED19BA975D97
278568C3033D0A0FB4B61251885F7A01146D99CA3D00039873764AAC8BE07720
10D7A678779EBCC8335E7AEB177044C31250888C653A9FC0AD12C148EA060922
63BF12D0B3777E3D754F0911C64C30D66C3D3D8FABF4F579E1143105B9170B09
FAAF15EF0D8D24D5316A701188C67C52D481EA673B616BA718249258AE651721
482EE607AA6761E9D27EF85E661DD3D8A38425FFD73C85A8DB07F3CE955AD1FF
5CC257F1E51941DE2457CCE1ED67D8F27988B1A34B2521BAFB80AE0C33A84767
21EA75854D16AF9DEEC14A5D539130B65B2F2ADBE756F27894A6F62F13CA0B2C
30952A4DD9221D5EC1F822620CDE693F7723BB12CA49FD604E58B4AD2680028E
AD698DE60D9B13455EAC86D31BB4866A1148CBB00D9BEBDA8DD56C69223F0530
7D8CBA2BCCE967021D6DF8AFBAF0AE1D6B060F350766E88D92AE2C1C79CDC5C5
6359D22581C2F036A0AEBD538616BBBD6F95534A13D6A57019EB2D86A1D76135
0B9357E400A0B343C4B815199E0A1409D57C3BF0DCCC26DDE8DD4EE83CF673E7
E22C6F8AC22EF7D8BE27966FDDE350AFDC65443E1DC6F7B5D143D1FFCD3BDB2D
F8448B76611C45DED0CC7ADAC4461A1841F049F14CD19DD1C4D1FFD36D6851AD
06DB47B49C04B66F3C74CB72343E8016D853D1C223D1E44BA00C91C6170E80E3
74EFE86B4A799A8D10C289E1907300DED6A5D946A217F45FEE6A6BC14844B0BB
9EB837B3B7984249F8235F7DF8DF4EDB108C4FC43C45CF58FF0455324AEB34D4
974E801920906184F3929AC69E9C1E511C259643301919CBB33B992FD53F83C9
8E8570E2F7656ABEE0B38AD3129F7ECE0319EE11A2DF2DCD04A9D05FF7CEA43D
B44BCFB2532DBFFA31D3CAC4903D235C62172BBF05E4E50785C2E1E1295923A6
3785FB925F31AE86E4B28C55550310688041232D89558F1FF66E6B4713471462
80207594D9D17F8062705363C9553DCDE0E81DC97C1B8BD8ED2CA9255B931CE2
ED736C93D505A649104701903C02F1B42BAE63662CF0C7AE04782F55BC6A3952
F509DFAE9EEB2BC025FC88A16EA016C615A85936410CE00C4163397F5FE82942
8C9885738D5D8C44DF7650A7726951F542D851D25FD853EEB07C1542247AD6AF
D0200FC5E4C09875E2AD78251EA498CC6501E41D58D7DBF4F07E2C01B4BD3099
A434400534817B1742B63B653F338C642CA6BEBE50E2B035692D33AC1A111CE8
123B41A29D76686AA34611DE70346BA128363101C23027063959D462C9DDBC8B
DD889BC9A2EF2BD5B5EB078AF511DFAA400140F7F075B315F1EAF915D69F4114
120F8CDA061DBE7D8B03286B0F58115CBDCA7E6BA89BADD9B4AF58D4AD42BFDE
7EB77E1D99890AFBCACA8187100C067979C1E91B54535E25F5E7F37768456201
D6BB400D47DEFBDF2422D529BC5A6A1A519E307A87DB29088287CD6989086963
AD067601CFAA475E52C73452C7F61F9978BEFB746C2AB61650B784A0328FB403
4A759A2972D593ADDB38541B002C067616D751ED2C2E95398C0BE92A7A28961C
A556E3FF5FF34F62D2043416EF5F4ABFB646EAF949B72EBD0908A72619749BC1
7E2524C93C88133137460DF2506D245A8BA4F01ADA68AD91019AD1A02E7B9AD0
BC7FF0D41FF767D433C83FA56EBBC05286690F0FD4725EBBF522069634B814DE
82CEC035DC0441EFA9D34AFCCA4DE752B14B6C5D02966C2C2609EFD3BBE6BE30
E3398BA5140D04BB5A70A89D8CCE47FE1221FC2F080F53FEA95A1A572FF49772
8A5E3D666226E104DB7FD2B7AFEF161C41BDFD74459E087A413650DBB11E0B07
F8B449C92FE90B706FA4CBA117B9AE5F70551721B9EF91D4EAB59903C765DF1F
D3FAD817020E45C45FC15906A40954E488A1F862E1C258431083B1FEEEC63B06
A2904789FD1016B9AC7D7BCD04441337E943770A1DF8721719F9A46AE33633FE
175854C95278D22538DA8BEFF489737FE86FAE37CD3BEFF1F21723433A302905
4B0D042BD9B6B972665E30BEFE1765B4191C9558434AF5504E9ED45C9060ED15
38EC97188019FA6915EE97B90B280C68AD22320A7559C73166C06DBEB286BE9A
0BE96263F8C43F1713294BF8F78D2903AB60ACFCF1935C1F7E3870EC29C3C2C2
C5702B2203D8F912CB43D0FF20C1947FD8C2DAECAD4DE57358F568F61A6E7663
C04FE85ED06B6F810A649C9E48DB133C749DF3632793DB3A89C6069F5FF9A81A
DE3665EF7ECBB8BE9FC8BDE48705E941C48284C403BC8CF3A9F9BCE3D81E2CC4
7772B03AFCB7922D8827A136078AF9818024437B96F96D534EDF7E78A83A09D1
8813BDD03DC953A57A2C885985F311B74D61EE696DDEF94B1CC0C9306E27CD75
C81E006A754D6581C818223F64E6C979BE3D780B0846418E267D3310F028D7BF
D072238F7E4446466701B0FAC59649FDCC36FAE2ECA7C7249340557D0362809E
7392643900ADFDE006DD24B2AC7DB3FC3A77C5D0EE7BFC277B2CEA1214DB0083
A2175632E3ECD5D1A251EE213BD60035CE1E8BD0306906800B9C672B4B04317E
F08F1A2FBEE0A922A9D719646EB4582582715AFD6ACD807C132BFD47A83BD395
7DBCA501233FB97309AC6230CE3B26DF76748BB46F0AB5D3E6389EB0061D93D6
5B9853C8BD2B888DDAF3BFB693384DF36F376D33FB78243F0B0C4D61456A0A35
EDBFD85A13A052DD77037BA9EC11AE4FFEF0C2B561CBC3C665E062E1C779D0A9
09A66C013A081EB2BE6861EDA01A47D51A0865486B0C072A9CF3DEE42A954640
43B3833522386BD91D5DCFEDD6A8A19ADB5B88368F4CA8096EFD78695DFA57E4
F4BB86E2C9ED67A43DC09094F4E97A2F960DF2DBAC62A4F6CD94E33DB941568B
B7088D8553C6953F52FB62B421E14CAB69FAFD186F17CC3203D8E53F1CE83B79
0FFC643F07B361BE73D09587085B6934D8F3AA09AE3AE599522A4DA4AEB2DBE0
9339DF3FAB7006966254E522D3D131CCA182A1FF9ED731D0B26169CEC464DF57
8344854AA0D41F86D9DF83056E84283DDBEB933E1DCD84DA8FF4AD36AE4F771E
89905FF096ABAE60A1FC4657378F49E08068C88A74ED789B0402ACE217AB17A9
6D206AD1BD095CDC94436425D7849BA11D99E9A46CA7003C18312FE2FFD0CF3E
5B9F3D44967F1ED17862F33F24ED39BBB0ABA5A76F30DBA49F3EEEEB737326DA
1C942098E1A827787DA1EC6ED7A0E2D6531D35E5B973FDF41227A92996C0E822
32E12890B738ED4ECD37E3EE8F8C315357D85563537EE2A853D4472024E6D772
77B4D451DA3E6CAB8B59957A46918DADC450DF3466F95E2B6D8BB77875822E4D
9E444B67B89D747A2512EFE565ED2B7FB439134A74514CD13C4E2A0EF967621C
7DFF9A656EF0038F56F27DAFE202EBB4F43D271F5B168570895A3F95136498EE
E8F1615F47F844620AE9FE7E22DF1B79C2C88B6EF514B018833702810CC68772
56205C70C80E5D050B8DD38A52F34923E7C695A9C9F1129DF999AE897DA5536D
DDAA36CFDC2BD2AD12DF753ABAFB86D6DE8A345FA18CFAEAE6045DD10F23D16A
27C736ACD2308168F1841DB0C9522B11D3D328C731BF5F4B942454A9D279E1A3
B769CF515743C6C73B6E60845A8EAC843C4052FED1091D27FB05FF5E3F4BF810
546D4DC0AAA5DC5F3A1BA12E9AD2C7ED6EDD5844316D30BA1CF07A224C823A11
05A0C5258328223A334C0A43A04EF89D658BCAC9C28F5213C58219CC614C8BDD
2CF1C8859BDA7762AE0C5B45B73BF265E7E647AFEC847EC228A5CF0347E5EE33
A4DA3623B8B6699A9DC92A4A6AB00A0F2DCD0ACEEA511B20D47979D54C1EB04E
A0FCF069F9EE6097F7F2302B39C509074A91CB6D3DA603D1E074E2EADFFB410E
DF44A941B6556955CF1CCD3944922D2BEA05F613B4D9CAAB30BF20D85CF08CBD
103B6686C919088C686E16694049E0A09762DFC062C91BDC218833E5FFB86BA5
EF1E7DDFA36A477523AC2DC27DD37A432453ED8CC98AFA3DFBAA86E891B61C6A
6E305DC1E8E45E5AC3132C7BF0E66D0C02DBBDBB5E12247B8B8621583E4906BC
5814F595528716D2D680A3EB12481DB8B44343F5965074421CAF6A38E559592C
10D1C6F20FB219EA4575BE649EF4B05619D128B7D3B271E5378A35748C71557D
7379203F4E64F63A97E606BEA7786119B3467E661494ADD304ABA62AE2888082
B2736D86B11D49C48DAB045F59C423EF20DE9F8BEEE6B64AD42F76937715C898
D26ED86A428B057AD7A8DE216A2BA5A6EF3780C0BB3644059A7088F7B359AFE7
C198830E090D3744731B2B0A6E97E22025F023EBE1BA821D42E9BDD1C60A2542
8030FB93E74727F8E9AB5680E296BACE4899146DB73D695420BC23DD696A4503
67C8B901AB1A28B351012D29241DF7554904DD60DED129A046F9C8E751395D8E
CDB5C599FEB9014CC4DF737031AD66694A8D80DCE6493B2A265D9CA5B7407FB7
753C76CC828B377930C63105C07821D6E94DC5FBB8720E60E5DCA8A14EB31DFA
F0A1F6943C46B083E22C614C5D0B70D6799C0B1040AB5614D46B3C9501982BB5
27BA566D34EC8FBAD7566D08F205BB02DAACDE4ADE6EF3CE8B5E3C92306754C4
0290FC6BD7E67571E52C9E6F10734648572C5E9C970810227FDA5E188FCA1ECF
A4F0EB11A34B61F89EA2BCB43116641A861E35F7C16AB474C15C97106B574C56
24322AB1C90A8DF6D18634D8231C9384B1A922167F60AC41C6C563E97550658A
8589044499BC5E37F9DF2D256387A4E88B7DCFE469262C577BCAF3DCD5EF34E7
DDFF9D142EFCB6279B11573E6DD1EB2C9C8204EBD591479C8954A7650E1C28E0
94897A9A0523F23E0C1158410D72A24892B01A0B6C1EFE03EEA59978C1232596
FBC365EB70896321D77E358F2EB803D280481D227CFD33A90BCC27F90C6FAC84
D4327546E2EA43D00D245A634CC34666357213747CFC0E47A88967444CC67E42
29D5F6CD61F6EF236C9268FF3F1F861D4ADAFC5E08CAB84498B0224A511088DD
38DA76E210B86C43B53386D7D288C9C92526EF553E6E6544B7BA3EF633D441B9
8E628B62BDB953E8A655A878F46FBBA01B033AABC514D42102C43E227283912D
77DC7F0A50D0AEE21B4735C871A284E1613454E0FF0AA510D14FE0E3304A4D76
BB262AFA39ADF57387F2D4183CF199A11795FE248279059F1FA51F60DA252D6E
5F3663E53FD830C8F105950EFEC8F2653F5FF6A12A0AB3814934E53C2B308761
D186CC6A21B858DA66791AF9102BB94B4CA39145755BDDB7B23A1BF43E969830
543DEAA453E42BB887483D05FF4CE0D2DB0943BF5A1A2EC7504D73EA8A12A961
4C18D0D1D664C66B79F1EA81CFE4A23C8C37332A7DB39DF32A4D1EC7568CF718
327DC95D842B038BDC19111F5D3966AA2B166882239135709BD33A1C9FFD2A28
0B9016C49D581F6DB0C2DF34DBA3B76A927DA8F7F657FB40C57DDACA4C350931
5C386886711C80C284DB56320F4A143F69CBB701B02A60554113DAFF7A0C4CF5
B099E6617BCF10031D5713B2EFBDBF3A40CE30BFA0512A7D664AA05EE2419BCB
743524D51B75B88D456D375D1597C867EB16DB9C8D721379BABBD6C83464E8B6
D9645410C22B8E8E2785AB6E6D5720F8DFF12751804440C27A63C9C541769810
0FEE82282FF911724E272402AD03EF865158F4827579717DB2EB7BE733D08FD3
3C80CDDBA687F59A6E9369E9329AA12A72C4A8D6F2EC6681E2FD2AEDE59CD055
BBF8A91858EEF3CEA7CE7763657F14E9F7D1DD0BD8A223452D521250E78AC8FD
D2D7B363F1CDC0F0D712A7155C4D85868204F897599C13F22EBB245CA3F9C51A
F36FFD4FFAECAF8F8837B7F805ECC976F7730A56EFCF3BD14F7F76C9C80D6FFE
1F35857766E53365585C2A9DED0618867ECEF6C415C30A993E766DF7D2896489
8A547BDAF0F39D50A6F41D0EBCB97A9FD1B12BFE74D9F732FD53E641A112D01E
CE1439936688366DEC752225C8A80AEC688114438D4322252E660208C50C5F4B
54996E0001943611B12CD89CFC1BA267D198556554EC89E4C91033B6DCEF6619
010B6FF693DF241F948C90F04D971787F528C314BF5DC19C7163CE176CA3405C
8C705A891BA7DFA2770F4CAF58A3EAAF9E2A91D544C21418A3D707AFE628B86F
EA9D13D9ECF67DFE321501FA415B80987F72D3B06F67A2DCEFD22306351818C9
29D8F89F3BDEAAA4D5B773B4CE3576F071DB4BB6C3846F638D3504073247007E
F5E3D621DDD18B86D2620010D7B7E0C2306811043888210836DC096347A6C3C7
E49AB09F92825FE87E3D574ED7CE8FBAAAEFF92459FDC4785DF0F6BC4B65C564
C722DC42298A3C302713020FDA44E86A1BAD84FAE29EAFE9FDAB131F638340C2
30DDAE91F70FD4CAB86247D77CEC697DE4EA6D3BB32EA832A62773ED36DDCD5A
6DA4DC88F663A0950ED6B76A37E4207BF9C8CDC79A88AB8561603F8825518160
C414D5237B8E1C625173AB5E6DCF820924D292D6E3F683CA2208964B327D19A7
DCDE1CFFC7F3364576105ED4BFD45642B91C767E34D0F1C8F5EDEC9AEE5CC212
AF1500126168ED3F650E562BE1F7BBC6C0B9D188B852DFDEE11489A3CE287EE1
2E1F25E37FEBFDBD9502F8F2DFFD91643B2E4F6F63B3A72BFD48BFFB171AB7A2
9632DB8110606E38909C3BCCD026499CB203A90F0DC11A2ED0E7A1FAAC11F34E
AF236757F153250DF2F31C117E461DC822DCB81CB30702B910CDAA3BE4E2AF0F
9F08FB7FEE3EE07E101A76E1AC57FC77ED6CD01EC286D7B4BFC92C64C0939A26
08C2140305B9FF0A3E00A1FEAEDDAFB3B3B7427AA65F4690B7EB58DBE01897F0
7D2DA289D78E92215915D3609B7A95E2CB18A44404A4BB57DC5C1FD280CB5E2C
564993108E3A09AD3ECBB205E6559BB8E9664C5AE272CE5148BCCE594F4E3F22
5F036C173AA9D60AB448DE19FE56D238B18999BFC2941B8779694A20E2549C6D
4557664D7999BDDDD7528AFFD5B12B95846C8E82175A25DD34C00B4E3B8764A6
53F4230B0F320ECF990F041842C7A58C026895F0F317D67E7590F43391C101BD
477EAECCC14E1295DC13924946E1FBD72CDCC9588EE813953DDB91AF84E47A2E
B1E51C0B2FF6C4A8223555E37242D107A367FF1462CDD8FB5FDA1262AB9D04A9
4914100276AA43B5998478173F582F43C5C72483BD270859046F696A084E6686
B06F70F9FAD6765476339EEC0828BA33658C0F8ECFBE23BC1D071B6B7F8D2866
E7DAFC69EC339B06D9127E1667654A9E5DE15D31608485B47C4120B420DFBE4A
B02C96B7164EC1C13C92F2702C1BF98EF859F426139287090B490B79B3BFD571
1C1B1A998E2F932FEC971A8F0D6ADBBE49DE493D9851D64462AFD61EB450A2C9
78D6D5942D661A6A21CD197B4C7B7594217B2775B476BF0F18B343822CADFA40
754F2AD86663F77E66CA1BC1D5C0A0F8B57964897658FB807744E16534488974
2FFDD1386EBC3F8280DC82E59F9648846B4AADCBB9F2410D39F7CDEBB74142FC
D19FE582201DA092B77E8FBEE398EBF935612996AFD55467EEAA6BBCBB4BB06E
FB9238C5B2B6B1F8D1FF1134DD8D967D66947BF5263144CFA93E944B55EA9572
80F9BD4FBBBCD337A40D49387C83F436F4C9FE13BB71AB9194C8A16AEF29D1A1
162BC249C6D35AFE73C53BC841C2774AF399F6E995F0F44721177FB34EF7CE51
6D1AE03278001576AF06709639563D0B5DB6E9E812F9BA7DDBC82DEE0A733F4E
95B93BD1D8458BE801A015C1FAB4BB5589618FEC658D2BD2C6A8187C4397D6FD
D68649BD4DFFAE7F2426E9E6080243C36715D891C4D2329042CEF629EC017D94
BEFAC4FF47D1A46227AFD8CCE956693C0412DF124466E2952252AE4E42444D96
27B787B737F8C1DC7C6C27DAB6EB5B058177B658003DEAA01625EDE33FA07612
4A59410EF5182CFE4F099CC5817C432515565257FE94DF6536B3ECB3F8A59555
F5DB74CDDDB50348DF9435B579C5AE8CE3E7CBCE41753E5BDF8E36E27D92E860
129710CDC0482E0FA68AF9943734ED7DC56A620050EB95DD0A3E11FC2E578D8D
05856948F66E120EFD87C8C37AC7823DAD893212C7BB8C573CE752DFCBB44EE2
66187980B7CAB318257DD08A0DBE6E3E14434092833E685B3F92C0540A3D4912
DFCA0AC8FB5A2E119D0DB4CEA6ED18394B06B7867C56F11A66248B72C2A49CE6
E93BA36E95745A5393B6B4CBF2FF73FFE0DB2F451DDEEA1E698DBCD1334A0ADA
1FAC96463A1EFC1901C82A79F148793D6327016189C31D4FC3EC62CC21C91558
F52B2BDD8426CCE26B5C963ADC375B143B010950E539647B3577559202D73F0B
2837EE8CAFA0F5A302D142EF77F7F5B076C6EBF05CFBE813A85E3E7800DA2636
8F4A44F0D4FCF1BB433787C6B2F128BEE720ABC9C49041CCFE3695B0FB9D8FAA
8D247403DA0B44559BECCCA84D3566998F74B32F2DC260D5F8021B02CC6AEB62
4BA6D95C83A561B8F96EEF89B7AE71F117350463FBA01261A4C77D9888C94287
3C0540DD7E6C3D968F6C54D8573FFD9685E43035AE60F7C5E740821A696373DE
97AF1193B814FA82D924A638EFC23463D3AA74CFDAF295574EBED60625F307E3
EA5682767426193D83C427A96B7E93F1675B70FB3D7C577E60E920049CE0FD19
A68CC1B830EC098E5D2D20421E2159337B6956F1A682905A67A55FB9D647E691
8286D203BDD1AD044BC8D9C9AC70AD266983B06CFA9F193002EB0335878D1FAE
7BB8DFB00FB73374C934B19C5805FA94392F103306F731AEF888B795EACC3683
B67DDE2B46124FBF68F4F30E85718BC32FC42FC9EC38D183B74A9CD3906F4F7A
EAA67CD8D074880627E3B6B5D222F41F1823C64DA15169EEA2A32F3859344BDF
690508B164D53FF9AA22776BD94EB3BAB69F56F00C4DFD059A395FC80D779E6F
FCB89FA72AA3889161BEEB6BF698E0EF6F0CF95459401AC7185C82AFBE3F0D52
691BA5B9EA169F1FCC0F25CA15AB86A0930CD34264DA19D03EE40D63803A83D7
E03B721F0FFB44662F64271A7F1BA352FA99F580B6DFE8E7CB17308245A0E017
C3352B0A0455BE927303827335E6848BB7EBEAE7113CA6EEAE549CF25B1506F9
92008D596D9CC00E539335E9181A447B562B35943653631CF81D686EC9D233B4
12A754DB13372BAF0B045F5F9E929AA9B05A5424D1E32DB7339358E6482DFEEF
D4DCCBDCB9B8E5C733C760A0DDFF18E003F13808503A7B6DA7C578A65AD20ED2
9A3F89CA83410F4D82A875E50E6619EBC234C81D0A94707BC47AD2268E6DE626
D86AE931D8151C8A819B8DC1AB418C64994E5FA4205898D060C8A28048AF7EA8
6CE4D4AE01694CDE5A05EAFBC4846449E5D02AD81A8A8FB670EB121AEE4987A1
F808B23636FD2DF78E4320DABE26981ACD4DC1E9ECE96D7213E535C8F5B37272
39B84C717E04C105EC53D28B3D04AC5010A5CAE10B11232EAEFB8A05724999AE
B2CF81775253533837C5911E50299607C439FAA1E1F5AB6694CC145803F76D2B
3D50E420AA4DC4FAD30DB6BB492F5C580C6836EBE6471F94F9EE33CA23F7204D
CB4BFC8D13B4308280055AAFE1B392D635D15EBFEF919FEB96A9FFC97527E133
5F8CDCA0988A3AA30E5B0C5C457397A8DB81B9EB55AE1D8826E566AF955C02BB
76CDE5C7EF088E20039B6CD0BD57948713BCA591AE3DA7F872D39EA908DDBF7E
C0223648FE637FDCE6A7D907461D1DEDD71EA229F6BB4037C92177CFE34806F5
551CA4BB995618E9389DFBB66C62C49E45A9D9053726A548DCC042E35D097B43
CF02664F4A446FDA9353886C1BDC976EAC90256BE9126248BADA7F3C75C874F4
7EC312346AAE19CEF11C2120D7452D331615EAA66B99345363DABDCFDF407BCE
E1810791E491C1A654AD2DFF7E800557DB89DDDE048670655FB6655E07139FD8
145747CD5045D60395BA7033DD7CCC0A7FB49CB24FFA6D26A5891C7FB2DEE642
C92290D09B53859A20CF68E5CB9EC1CEC3F7DB1333A4EB3C93CAD69E4032D3EB
655D5EA226A0F0F0A8CADF8941FA7B33063C11789A754CD3D3973EC59DA2C820
0C220E1D9BF1FCA3C757B73E0510A55C028D69A6BFD60F1EC8D2D655C3D9F42D
74658F76DF0192AA45C9CB14C89CC26048599D6D4AF1EE43229C7D0BD52B1D24
BC64C0002379DD9905AB2F3EA94D76E68AD43CEEB0F70734F4C4C7A56AC0976B
CC348C45C4CF73D5ED46332E870974D08D44C97EDBEDD81AA24F2C2A6635D155
2079E43F5666C1824BC695D07885009C427A8126D592AAB927A1C3A7415700E0
9FD33EDAC928AE3307DD4F4B1BA11EC5476660EC660BDD64D37BB7B648E87429
16BEAE0D21F2E7142D5246127CF7501AA8A3EEB5846F449B2DACCD730419C863
92B19F2AE90F4DC72299F483003181A13975FDDE92ACA9C71BB3E1C40FEB7366
CF41F33278B02F1B61C3AE96DFA8B0BF3DF416BD05137423D45DB82BBC53FCBD
92FE1CCD2F1E72E248B26FD7837618BCE1EA73E47FEF91828AEAABE34F2675D1
BD6A5D145E63E9941D273E3F4FBDA821EE743FF16E6B55DAF5E139BA03B56B4F
2285BD91FB59E68DF906B03576B2E555F296EC64BB905ED12F33A3A255D211A8
1C9A241B18551B6D93F562FB56218C23C57805983BB38C68C4FFC457E3DFAC85
47487CCCA8359FA7777C75450613778D95549F4F9C6B600E049ADF5CA954C78E
1652A2AD4DADB48A930F515C9F3E0F8C8C360C94936F9F01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57252D7D87CFB7BE009E0E1AF68C57E2041CB837A1F9DA290FC07240D616876
CBA29ED23952F977F27ED97503F6C6CB48DA6611E0ED9D90FA865D099740C6CE
8A5DDBB1D6550B208321C365A5104F9ABD66A9238B8A2106AA74CAC58D1163F1
DC4A62013C0F6DD8A3E8E1A6CC6E553746D570A744863FD8EA705890890AC5BC
2F0A068C740572F045B32289A2AE66CC44A1C13FB8BBD4E1834995731D19B47E
7C2FE360AE79DACB95856B01EE39EB3C7C9EAEB3D47348C47D928BC883B8E760
6724D80DABC4D736411942BBA8CF08157F21D63C18924282193C5C8E44E09048
FDCB8DB2E01C8A496FEE2CFC19A3A0EACA508237C8BD988ED6D33D01EB548B14
61A546886AACDAFB7C8CA69056B1F428D72541D8F9EFB08A10C9D2B8F6235487
D36FA9C6BFB903968A96AD217A0CDCB79BF86028FA500E81B8825226EF1B9B3F
BDA18E75B1D2AD8D5160C7E9F6FFE733C472F3D1AC282096D21C51B046DD1B53
4824C8A07B243F7EC7F8A33B867C97CA86DC1404F26CDEB006F2D4532A7889F3
F638F81EE997DF8D43B6CBDACBF2963800308CE5F5B1C185BD5EF3CF32645F0D
06CCBDFB9B38DBA553B5FE57F57452D459D79F4F4FF99079968DD2FC3FBC17D3
93C5649CFFC7EC238C45BF4F53D206CB265C7A288B090E25A785E92EA869D1CC
16E9E6123A892F91410E981FE06C60D19E5CBD14DFB595FA38F5570DA3815EA7
971DF9B3FDD3CCD00A7A63BD93A1E53183BE1A2C727C84978DB52943D6D5F4A2
A5F88F1110541724F53BD0E77960067ADBFACDA45E6E72451B27E342480A7D40
9D36FFC12E8A079468340013A72C0903E6EC11F149EF088E4659D3037CBF5B8D
FF1473AEC4F53CF4DD733614225E647F8132D5E6BFEA76E317CFFC9BCD9CB717
290317EFE5CACEC51D3037CDE43098CD5D16F2086B67F4F46FC20C6CFB072930
D0FB6D5951748BC8D788F0D2A21DD609F82EB926D41CCF5BB96480AB3C9E2EC6
37F1A5C74F3511402A3B1AB252566CD3764EF3720A40B5645332A3033D84E6FE
B8B081041845BF4BFB6C5E3847E57F156DA110678FCA2AA5DB98AA6E5AF8A1C2
C59F86FED177C07D84D3D898F2E2D4DA91D0AB7EE88B67EAC370806D81AC64E8
68E7352701027548CD2B55730FB64D8C278F5BEF7B516933BF2A4B6FC2855C62
AA5706D772C855A2B37FA10A28FB5A3F3437879EC0361B4446E1E03FF0844703
1FE068540419367E3932EC452B3DE758EAD87AE3B02BFE017CF24EFF7CA3E177
F3E5E11A35A44EB1B1C27C3B7A207CF6073B1414A5CC41BE5D04C9CEF056E829
7FCD3168EA252975316A6E491309AFB090354B410214590D8F9FB5635052B6B9
CF3A2E098EE8B2B74F69A52D9CEA93F977FE5E2A80376168187ED20CCD17F00B
504098B9076D19F4BE495B5A1B982C14B5F570C19C7EC9C26873B57618C74472
2CE256A81A6CEFB2DDBE3AD418AC568AB6BB61D281397BC85BA02C0C02CBA8D7
6A7B1693E5A2142871DF92F3A1BE9102A6B3F803A3365611A319800773F859CC
210670D509DAEF113DD5004B77867454E9F41AA71B7052BAD6398C22B2ECD96D
0120F7EB51BC97EFCD0CCDA09A6DB565E7070F842CEE75E080A74078B7DDCB2F
DA239B9A077F6B20E020147085669F361156C06C4B87DF071AA284EDA9E37341
B16FA545DAB8AC624063F47C1323E6D1D533E5D3C1028D0F35B01F08103071C5
7D9E3D423EC715F1A8381105594AE6ABBC202B0CA1370194561D11363C168D44
4FAB976AC9BF1E3416118730978EEA1C7221C4E898FB40DEA2CCC554D16B1BB2
69ECB533B72C14843139827B21A9C5B8781716CE4654EA6958186316E4DF6094
32B9B67C518FA8386AFAF3A4E07B7F645F9AA6F4DAD29AD43E4A83318578B01E
97214CFC9561F02892E0044D52C3568A055F94F4A333A6A4AFF083771FF20A9C
55C444F01F4326114C02B013AD027A3B75B5DC1AC395DC5FB6DF9EF79BBF7F1D
3C011B8EC8EF0D868174BF57C147B83AF363B6162B324263C6074240F95D415C
DE3195C81408A63532C85DE6C22DF586273933FDE0AD24374589D07D049B2126
A01D6FE4FE7FE4905D9D72A4A25D55825AE78DD02B0FE224A256EAC2873AFFA6
7B99AA381B8C005212892EF26227718AF4FAB416632FF2CE387573FB768794A1
5E0B5CF0FDAB77C96CFC6F1BA82505F9196F250F861C0700320729A3625760AF
A73B57F61C8C2D638329BEA00FA3FA33CA1A674C7EAB14A46938660C21A2C291
AA5239CB69F52EC882D9B7569548D1C31E3C30CC36F3BDAA9E7886CDCB7DDAC9
7F8D0A4FCC412CF85D6D968ABB0C2EB5DD437F38968434088262BDC0A5C170A4
26AE35FB7C30EF52DCC6E5A6842A13E5F2C144EAB890EE79CF2AFE7014BF5E94
9FB9E31F6DD1C3B0347D785F5F2FC13AEE017EE783A27EF32185922A3D167340
87CAFF662F6D7DC29752F26C166A17BB94E5DC75048A2B3E3933BAFB7C639BAE
EF6681CC90F6594EE41D48F6B9F6A4D8D791E5BF46950FBB4B60D99AE3B41299
58331577EC66F3D7765EB725B58E1A0DE79E3532F81D77EDF6A84D6490623454
7B7F7329AD9C6103C3B4E3FCDB7F79B459CBE36AFC25D8ADBD5501EBBD4576B0
51EA6DAE395402E0C98ED6366C2CBC7E81F3F4C8DD57907C01BFE496365E419E
7C921956C01BCB337ED65C5486E47A6C459B41C39DF9FDE97B91F2F0288A4B36
997DACAAA44E27B0C9B7CF3A32A712343AA5778FE19483E6FAF64D25E97C93C1
67A05C011C1121A74DC9A749567C88497AE97BF0E23863833E66140BC21F6E65
D25698E11A37695426BA179102C237124E395F52706E309D47CDCD2950DFCFA8
0952BEDA10F9F1DB663C0FA3566625E013BAEC7ECB877296C8F33525127B6FE6
1DB7F1C7BB6B3EEC6ED280D4FBE06D2DE34D2116D4003C5A38A48924F05A3C85
F4400A79C0F4456AEE74CE0BBCA1BDD66687A3B56ACB116EF5A26CECC87DD932
F13D17C6A31936A98D21820E3ED31BFA6E39E72C8512E44FD435B5DB3611E85B
C56F47BC984AC5DB148145821B48CDB2BF5F657C8BDDBEA698413B2142337CFA
8836D145C6011869FD888413805EE0A9CC965EC5746DF06787D282F483C68B25
9D60B1008F585F4447E5C3B05FE220CBB46EC37F3F438522ED6BDC3B0D689888
61EBE0F7633B29F685FD212A383410F79B19AA2346695D9BF7B748EE14616615
DEF3E09C6F833BA56C50B402EDBE6F0660B3BEE9104605DADEC2FBB52419A839
8DDA4A7E348EBB8207CAD3786B8D0D81B8BC1CF973580D74204554F866B594D2
C379B43FC9B16EF3DD840605405CC67FBC36F0F32CEB01623933112595EBF4DC
A00B0B5A68B045F71077080BCB4AB6FBF254463C88928B0E9EE81BE9F937A356
8894EA910B5959FC31ABEECD806579FA2526743C1B2F76D9ACE7F452D1F69E65
8F4E045D7F4050827EED4E16BB624A1FD29BC3820A6CDB333DAB5D93CCAEFF60
574942F681FBFC0F2486C3B71F47CB98E4A5C70CB7485A212A8AEE9B43EDAD5D
EBC9D8573CB8D3B2265E0046AC957D998A89C2BABA2DE3CBECA8DEC28335443E
B1E0E253E14DB540FC8FEB141F83540CFB7EBB04DAA348BBAD8F76F54F8EEF45
9FDF6F98AEA5D4BAB25E840404DA657307148915463312EB8CCA6D104C076CB4
CB65574CF29E1A3486203C3DD01CD746A00A8DC3593E0FD006B8EA7326698714
F3FF323B6E210D3EFB2D52380E538A61F8698F9C9BFECB88310BD11622A5E0E7
62714D959341C24D20E4B9746AA4610A9809921BAE45687135708C6BE0711350
1FEE915AE129EC46C4002D1C1B71C83B5A4D74B2BB7FA66F9BC3DBB83D16ACDB
4E608904E1AFE356773E0409CE6AEC9ECDABC5D8679E86746830BE9A36CBB554
30A4924BBAB8C13BC107CC0D5A35F81767740244B352BEF1B6F6D4F6A3D6472F
D11845145D87324AC2B48F56AED0695B4815384EFE206658195744A9A31021B1
37692E4A4B765C7E6DB93423A477CF25F4FDD04CC0DEFB0082A1B9D9430EAFD2
3B4EBE318C0B337D13EDDB2746B8D0B3653B1139AB16C8F4F179F6AAB2C8792F
12AE7FB96316E639B27F93E6BCD665F1CC26EF69BEE06CF3A14A234E7065F2C2
818A50C5022F12A9C1CDE90177B24AEB7C2F0F979210FB56C093251EAA207D54
456592EBC64B68601257B62612746722CAB6A26A3612BB5C24A6E5CD80E29BEA
54FB546182B222C7FD782FDA790CFA2EA7A31DC6C3BFE92EC4CE4157F24D4810
C36CC12F425F1147B6350980FC23D627967425ED78A8F92C6C9ACBE19474583F
4EA705F451A18ADD5626450A29B2CE414E40A13E0FFA849BC27FE6B459182B6D
00EC45EA8AF5094E32AAF1479D79460CBB4500EE55DA086A01736CA062D8C615
13009543255F54C924BD42A81059C058561FF12D9DD18AEBA3BF500D5172BB9F
3C9F2643902FB1B5867098AFDC8F24DC0CE4C48D64411A41FB44D0CFFACA6252
B21E27FB9AEEA457936A30330E3EDD2EF78C5CDF547391CF225495E276CDD22E
416B7F72C301C65508D31DA3C5C9F2B1B74D170D7A84AB3C8F338FF552880835
5909014EC0186A3F07338B155FC8FFDDB908DCEE69F848EEF1137F74B8302054
E1AF16C2258EB82083FA1933052488D5217458E36B5D4A8DE83766ACC0AE901F
E1711B7AE4B7EB34457234DF49D7854696F6209AFDF2193DB2E71093FE071273
EA6DDB8F32301B5262DE8FFD5DBCBA5C688785BBE98DCD3129EDD9A572EB3EB4
9509E0A59423D905BF4496922F91606B6528553A777884EAC8BDC8E5F40BB1C5
2F79A7B148C02AE28510D9FC759B7B433BD404560D287E6A1BB020898A6C7515
75FFC27048B0C81F07FDADCC7EC822420DAB6056451DBFF79BD802ACC6151DAC
B3570877E4AA302315CB5CFC4E4503B266EDB23AEBE5890E84B9AAF7CF15879F
C216F64382FEDB2DD54C486EB7C6D57C8BB1D7766BB0802B104541B5776E9FBC
970F88F2D5D44D6E54301FD61DBD80A7BE4A9A131A41042FC3F492393B514FBD
78F50F3184A763361A02B4ECCEAC81A545F5A35886AD764D5E2925EEB35A59E9
CFB23EB1CCB4BAE178FE94B22F08D3524C6D06794E835926AC0AC4AA4D66707E
F764FEAA33AFE8709CD91D985887E876D722DC992524F6C505997CCA61419EBB
5483C6FF8F2E2C6A64A0577ABD2065C3F67DFEDFA8A3D0D534104708FC82A2BF
A4464613CC7C5A915A18538ECE78376D2A67678CB4688DF08AF7249B33F8B6AB
6C8499365517AE475E3AB1B127245FE9DCE01CEC0AC252AD6C2B8A3063A9E6F4
BDABA44992D964DF84EE544A916102FBE627EC772467FA135C49AD7F4391089A
26A846601B6890621031BF9BE7A5AB01D4273EFF081BD5B1EF20324FD551D0FC
47908310BF71D71CE0BFF7417565584FC06279D9656C2CBA8B549575961A64C5
4F6A9E20CB1649256164163922649285504C24ADC47E971BC63585CADEB5D241
D56751A2BC1568BC956D36A3E37896D7D7A2B876ECB20EC0AC574799A8483842
32F48EE850E1BF2B6421ABD4D557EDA777AB2C8FFCA1B2B74C88E11BE15399B3
DC2A5B903F3EB2FA20D803E084B7671F35035818CD0F8AB66D0D8B2018FEE0EA
5B0BF66F4A73EB9301D6818BB7FBC97F1F26859BC5C67B392806E66BCE30EBCE
3900FEE6E7A02F8A709572D46D14782BF66003D05FE6AC1B7D69D35119B46DC8
2F6887E23D3F749CD66B6C64A54223242DB49700E2F236A8AFA8E49BA61BFF89
35102FB35046319AD1110C53E657414A422F257E296B104E7660BFD4A84C2655
6654B9E438F9A0328BEAFB866CB5E80DAE5ACDF60598ED19FE143FD2790C86B9
D026CAF489F7C901B793FFDBE6FBF4246C793CEBF5C78E1A416E269F066031D4
383B22027AAA82209D13248CADC03B3E01F618B2DBF670F7956BB3E5F9EFEE1A
1F493A564FEF0A5F7ADFB5AFCBD881625BA68EB380E6760011B0EBEF28888875
5C5737DB7974C3CB333A2A6EC64B23B06292D1950AE8E54D494497489D5582E0
D200DFCDC401290BB8D8A551609DF65BC5DBFC76DB00C13025070A9775F47D1A
9B34BB8C6A3031671144DFCA1A27771D98BF2B42AD6FFB4E4752A799C9520C13
DFDAE1C541FB06F819573B6DFEFF9FC66910C3CD5AD1495B696CD19D7295EE8E
104C62ED3D4F6FF815259DF329D203848E42A1BA967E05CB1353C1C4CC76A505
F1EF061155F3761B6554CC398A9CFD499DF95D6C201A189882F765A9EF8122F0
3F9A2AE053A74401BCE34447324DACCAC63F8FB8DE11E875F89EB68A8A4430AD
0B45CC6B3D6DE1C552E3AEE51777FB267EFE2D1B18200D8475DEE1119685339A
7578EE959053ECBD71E41FEE239B171D1FB77453C274ACA1E4BF69953E68F8B9
879A99BCAF708E32F07EB2C9C91E2AAC3453CFCE9A250186D33CF08B9773A278
997DF069458232B3655F1137C70CAD70FD2D14F2E77527C667532760FA9DB52F
85C878EADD732D3F3773F0FEDBAD4056E726DC417110B6F0BD9C251C149AA3FF
B1A533C0816C28FE2514C19A900B67DA13B8C9C613379F910FFD78294F57C8FD
C66C1490D4CD2DBE2788045E2C45B0A70E189D6FA845660C517F47B40DA87790
4D9AF1364DFEEE7B4B6015675BA2B30DBFBC8D43F5A767214ACBFD774DB6CECC
59BD380574E3ED768DE420DA5A451AFA8DA0CCC825D58E06C14A342AE8EB40C8
A71E60B4CEB938A0A070048BE01D99D9F0869726E924D0849AA624F588E84B19
3EBA7D5720BFCC475F14FA3A32AE3AB13A32FEC11BEA2F7E06091E74BF2D54CC
9CC577FED6EB0C8908EB55AA2A8E89108CAE9A9B0ACB0D9B908F763623646BC6
AA06353C9AECDD15E3D7FAF6D925A8A3E9333E30897F1D80814FDF677CF4E550
74EB10FCFBF8DD555D486EA62072FE70523061E2A28EFF2085EDC4A6FDE7ED0E
B72F202DCC017EFF2D28EA5A0BF3ADE958C34CE5426D6BAC893578EBDB52A472
CC24F32B10347F62C3BB531CF9C71FDCCF7AAF1B7C23C803D0730A6B204E3E00
DE7FE1BA5FF7EB15B468F6ADD34D7B50F4BB7D35F4D75BDE3C758176BC0CF3E6
E1CAD4137B35A09B257A05CC02F88F21CF2AF18FBF2ED3112E797622C843F60F
0B3A7FD18A74FCBE9387A7C1BB8209A24908E5017E041B4E74EF40CF90AFF9CD
CAF49E342594663C5A079B0F96670394707F7CB44E695E859357B2208B5BCD10
8A5F6BF0B9F6D1BC8AB6881A453765B58AADE382EE68CA47CECED9E9B5AD3056
C0B9CD7AE6A19B6C43807FB54CAC350C266EE04E5C14C4BF5C257EE9626B0BF4
A20A85E5118072261047C0884CE2C6033257691932A17F6886995E60DB7B1FA3
845228EA77A177EAE770855C77084912D7D41FE49C61C8E0336D5F933E9C205B
F1C043A9A29F840D9A9FF8CF5A518BDF1229DE403EB136C16DC7921D52CD7181
B85D5C352899662C496E077D60BB55EEF1BF21AC47B70F765389E3BF268E1C5C
5CEC5C39A7A7AC738C07DDC76E773597C97D344576EA6678C6C85B33C7E0D666
724F6EF3AE54DF056664A961F85B9D9E35BFC8B88DFD35D2F654A36300D1E68A
BFC64D88E5B96B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39139632 55387786 1000 8000 8000
(C:/Documents and Settings/Administrator/My Documents/GitHub/WaridJournal2/waridjournal1.dvi)
@start /Fa 133[684 684 2[684 1[684 684 1[684 684 2[684
684 2[684 684 5[684 8[684 684 684 1[684 1[684 684 684
1[684 1[684 8[684 1[684 7[684 1[684 2[684 3[684 1[684
684 46[{}29 1328.35 /CMTT12 rf /Fb 253[861 2[{}1 1106.96
/CMSY10 rf /Fc 206[441 49[{}1 774.872 /CMR7 rf /Fd 167[1919
52[775 775 34[{}3 1328.35 /CMEX10 rf /Fe 135[530 9[571
832 2[381 320 7[500 37[261 59[{}7 885.568 /CMMI8 rf /Ff
154[590 590 43[738 5[886 29[1033 4[664 12[1033 1[1033{}8
1328.35 /CMSY10 rf /Fg 130[581 1[581 581 2[581 1[581
581 581 581 581 581 581 581 581 581 581 1[581 581 2[581
581 581 581 581 32[581 15[581 1[581 1[581 44[{}26 1106.96
/CMTT10 rf /Fh 133[492 584 1[799 584 615 430 437 434
584 615 553 615 922 307 584 1[307 615 553 338 492 615
492 615 553 8[830 3[799 615 815 1[753 1[830 1[692 5[723
753 846 799 784 4[861 2[307 1[553 1[553 553 553 553 553
553 2[307 369 307 2[430 430 307 24[922 14[{}52 1106.96
/CMR10 rf /Fi 252[454 3[{}1 774.872 /CMSY7 rf /Fj 134[634
739 930 2[470 5[776 1138 387 676 538 444 749 2[603 676
560 1[683 9[1228 6[838 994 1[1258 9[931 988 4[650 1[361
361 43[576 675 13[{}26 1328.35 /CMMI12 rf /Fk 133[531
631 598 863 598 697 432 531 548 598 664 664 731 1063
332 2[399 664 598 399 598 664 598 598 664 8[966 3[930
731 948 4[1165 815 999 2[966 4[930 914 7[399 5[664 664
664 664 2[399 465 3[531 531 27[731 797 11[{}45 1328.35
/CMTI12 rf /Fl 135[789 2[830 581 589 610 1[830 747 830
1245 415 789 1[415 2[457 682 830 664 830 726 9[1544 3[830
1115 1[1021 6[557 2[939 981 1[1079 1[1128 1[706 8[747
747 747 747 747 747 2[415 46[{}35 1328.35 /CMBX12 rf
/Fm 136[736 1[594 368 453 467 1[566 566 622 905 283 509
1[339 566 509 339 509 566 509 509 566 9[1106 1[823 792
622 2[751 849 823 993 694 4[856 723 751 1[792 8[339 6[566
566 566 566 3[339 44[{}39 1106.96 /CMTI10 rf /Fn 157[422
467 97[{}2 774.872 /CMTI7 rf /Fo 252[470 3[{}1 885.568
/CMSY8 rf /Fp 157[523 470 35[732 10[470 470 4[261 44[{}6
885.568 /CMR8 rf /Fq 131[1301 650 578 686 686 939 686
723 506 513 506 686 723 650 723 1084 361 686 397 361
723 650 397 578 723 578 723 650 3[361 650 361 795 975
975 1336 975 975 939 723 957 1012 885 1012 975 1192 813
1011 668 469 975 1021 849 885 993 939 921 975 3[1012
1[361 361 650 650 650 650 650 650 650 650 650 650 650
361 434 361 1012 1[506 506 361 1[1084 2[650 18[1084 1084
1[723 759 11[{}84 1328.35 /CMR12 rf /Fr 134[927 1[1277
1[977 677 687 677 927 977 877 977 1477 478 927 1[478
977 877 1[777 977 777 1[877 12[1277 1[1302 1[1202 1[1326
8[1202 1[1277 1[1326 65[{}27 1912.83 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 4579 7306 a Fr(A)578 b(Practical)g(T)-150
b(ec)-50 b(hnique)579 b(T)-150 b(o)578 b(Reduce)g(Energy)h(Consumption)
18025 9741 y(in)e(Cellular)g(Net)-50 b(w)g(orks)5885
13339 y Fq(Muhammad)432 b(Saqib)i(Ily)-36 b(as)19366
12857 y Fp(a,)p Fo(\003)20514 13339 y Fq(,)434 b(Gh)-36
b(ufran)433 b(Baig)29031 12857 y Fp(a)29557 13339 y Fq(,)h(Zartash)g
(Afzal)g(Uzmi)41522 12857 y Fp(a)42048 13339 y Fq(,)g(Ihsan)18172
14944 y(Ayub)g(Qazi)24314 14462 y Fp(a)24840 14944 y
Fq(,)g(Bilal)h(Rasso)36 b(ol)33054 14462 y Fp(b)10757
16978 y Fn(a)11675 17379 y Fm(Scho)-57 b(ol)397 b(of)f(Scienc)-57
b(e)398 b(and)e(Engine)-57 b(ering,)400 b(LUMS,)c(L)-57
b(ahor)g(e,)397 b(Pakistan)17359 18306 y Fn(b)18232 18708
y Fm(Warid)f(T)-85 b(ele)-57 b(c)g(om,)398 b(L)-57 b(ahor)g(e,)397
b(Pakistan)p 4317 22952 43172 45 v 4317 25203 a Fl(Abstract)4317
27472 y Fq(Cellular)549 b(net)-36 b(w)g(orks)547 b(accoun)-36
b(t)547 b(for)h(a)g(signi\014can)-36 b(t)547 b(fraction)h(of)g(the)f
(cellular)h(net)-36 b(w)g(ork)4317 29077 y(op)36 b(erations)415
b(costs.)573 b(W)-108 b(e)414 b(presen)-36 b(t)414 b(Lo)-36
b(w-Carb,)418 b(a)d(practical)h(sc)-36 b(heme)414 b(to)h(decrease)g
(elec-)4317 30682 y(trical)421 b(energy)f(consumption)e(in)i(op)36
b(erational)421 b(cellular)f(net)-36 b(w)g(orks)420 b(b)-36
b(y)420 b(coupling)g Fk(Base)4317 32288 y(T)-100 b(r)-66
b(ansc)g(eiver)554 b(Station)h(\(BTS\))i(p)-66 b(ower)556
b(savings)642 b Fq(with)533 b(call)h Fk(hand-o\013)281
b Fq(|t)-36 b(w)g(o)532 b(features)4317 33893 y(commonly)345
b(used)e(b)-36 b(y)344 b(cellular)h(op)36 b(erators.)548
b(Motiv)-72 b(ated)344 b(b)-36 b(y)344 b(the)g(practical)g(observ)-72
b(ation)4317 35498 y(that)344 b(most)h(callers)g(are)g(in)f(the)g
(vicinit)-36 b(y)346 b(of)f(m)-36 b(ultiple)345 b(BTSs,)362
b(Lo)-36 b(w-Carb)345 b(presen)-36 b(ts)343 b(and)4317
37103 y(solv)-36 b(es)442 b(an)f(optimization)h(problem,)h(allo)-36
b(wing)443 b(calls)f(to)g Fk(hand-o\013)721 b Fq(from)442
b(one)f(BTS)g(to)4317 38708 y(another)j(so)i(that)e Fk(BTS)475
b(p)-66 b(ower)475 b(savings)554 b Fq(can)445 b(b)36
b(e)445 b(applied)f(to)h(a)g(maximal)i(n)-36 b(um)g(b)36
b(er)443 b(of)4317 40313 y(BTSs)434 b(throughout)e(the)h(cellular)h
(net)-36 b(w)g(ork.)6268 41918 y(W)-108 b(e)590 b(use)f(BTS)g(lo)36
b(cations)591 b(and)e(tra\016c)g(v)-36 b(olume)590 b(data)g(from)g(a)g
(large)g(liv)-36 b(e)591 b(GSM)4317 43523 y(net)-36 b(w)g(ork)404
b(to)g(ev)-72 b(aluate)404 b(the)f(p)36 b(o)-36 b(w)g(er)404
b(sa)-36 b(vings)404 b(p)36 b(ossible)404 b(using)g(our)f(prop)36
b(osed)403 b(approac)-36 b(h)4317 45128 y(in)536 b(Lo)-36
b(w-Carb.)885 b(Our)535 b(results)g(indicate)h(that)f(for)i(a)f(GSM)e
(1800)j(net)-36 b(w)g(ork)536 b(op)36 b(erator)4317 46733
y(with)577 b(7000)h(sites)e(in)h(an)f(urban)f(setting,)613
b(a)577 b(total)g(of)g(up)f(to)g(35)p Fj(:)p Fq(36)j(MWh)d(ma)-36
b(y)577 b(b)36 b(e)4317 48338 y(sa)-36 b(v)g(ed)363 b(ann)-36
b(ually)-108 b(.)555 b(This)362 b(is)h(at)g(least)g(9.8\045)g(b)36
b(etter)362 b(than)g(the)g(energy)h(sa)-36 b(vings)363
b(obtained)4317 49944 y(b)-36 b(y)406 b(just)f(using)g(BTS)h(p)36
b(o)-36 b(w)g(er)406 b(sa)-36 b(vings)406 b(alone.)570
b(Other)404 b(cellular)j(op)36 b(erators)405 b(can)h(use)f(the)4317
51549 y(Lo)-36 b(w-Carb)315 b(form)-36 b(ulation)316
b(with)f(their)g(o)-36 b(wn)315 b(net)-36 b(w)g(ork)315
b(data)g(to)h(estimate)f(the)g(electricit)-36 b(y)4317
53154 y(sa)g(vings)435 b(they)e(ma)-36 b(y)434 b(ac)-36
b(hiev)g(e)434 b(on)g(their)f(net)-36 b(w)g(orks.)4317
55441 y Fk(Keywor)-66 b(ds:)4317 57047 y Fq(Green)433
b(comm)-36 b(unication,)434 b(BTS)f(p)36 b(o)-36 b(w)g(er-sa)g(ving,)
435 b(energy)e(conserv)-72 b(ation)p 4317 58456 V 4317
60825 17269 45 v 5801 61641 a Fi(\003)6310 62043 y Fh(Corresp)31
b(onding)369 b(author)6310 63371 y Fm(Email)396 b(addr)-57
b(esses:)573 b Fg({saqibm,)582 b(000000,)g(zartash,)h
(ihsan.qazi}@lums.edu.pk)372 b Fh(\(Bilal)4317 64699
y(Rasso)31 b(ol\),)371 b Fg(bilal.rassool@waridtel.com)i
Fh(\(Bilal)e(Rasso)31 b(ol\))4317 70015 y Fm(Pr)-57 b(eprint)397
b(submitte)-57 b(d)396 b(to)g(F)-85 b(utur)-57 b(e)396
b(Gener)-57 b(ation)397 b(Computer)f(Networks)5349 b(Octob)-57
b(er)396 b(31,)g(2012)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 4317 7306 a Fl(1.)748 b(In)-42
b(tro)42 b(duction)6268 9907 y Fq(Cellular)333 b(net)-36
b(w)g(orks)333 b(consume)e(sev)-36 b(eral)333 b(tens)f(of)h(TWhs)f(of)h
(electrical)g(energy)g(ev)-36 b(ery)4317 11512 y(y)g(ear)453
b(w)-36 b(orldwide)452 b([1)q(].)634 b(This)452 b(not)g(only)g(results)
g(in)g(signi\014can)-36 b(t)451 b(op)36 b(erational)453
b(exp)36 b(endi-)4317 13117 y(ture,)472 b(whic)-36 b(h)465
b(is)g(increasing)h(with)f(rising)g(electricit)-36 b(y)466
b(and)e(fuel)h(prices,)473 b(but)464 b(is)h(also)h(a)4317
14723 y(source)340 b(of)h(concern)f(for)g(ecological)j(reasons.)547
b(The)341 b(ma)72 b(jor)341 b(sink)f(of)h(p)36 b(o)-36
b(w)g(er)340 b(in)g(a)h(cellular)4317 16328 y(net)-36
b(w)g(ork)508 b(are)h(Base)f(T)-108 b(ransceiv)-36 b(er)508
b(Stations)g(\(BTSs\),)527 b(accoun)-36 b(ting)508 b(for)g(50\045)h(to)
f(90\045)4317 17933 y(of)434 b(the)f(total)i(p)36 b(o)-36
b(w)g(er)433 b(consumption)g([2)q(,)g(1)q(].)6268 19538
y(Global)674 b(System)f(for)g(Mobile)h(Comm)-36 b(unication)673
b(\(GSM\))f(net)-36 b(w)g(orks)673 b(are)g(quite)4317
21143 y(widely)452 b(deplo)-36 b(y)g(ed,)454 b(esp)36
b(ecially)453 b(in)d(the)g(dev)-36 b(elopign)451 b(w)-36
b(orld.)629 b(In)450 b(this)h(pap)36 b(er,)454 b(w)-36
b(e)451 b(fo)36 b(cus)4317 22748 y(sp)g(eci\014cally)365
b(on)e(GSM)f(net)-36 b(w)g(orks,)378 b(although)363 b(the)g(tec)-36
b(hniques)362 b(prop)36 b(osed)363 b(are)h(applica-)4317
24353 y(ble)447 b(to)g(other)g(cellular)g(net)-36 b(w)g(ork)448
b(tec)-36 b(hnologies)447 b(as)h(w)-36 b(ell.)619 b(In)447
b(a)g(GSM)f(net)-36 b(w)g(ork,)451 b(ev)-36 b(ery)4317
25958 y(BTS)363 b(is)f(equipp)36 b(ed)362 b(with)h(sev)-36
b(eral)363 b(transceiv)-36 b(ers)363 b(\(TRXs\),)377
b(eac)-36 b(h)362 b(of)h(whic)-36 b(h)363 b(is)f(allo)36
b(cated)4317 27563 y(a)368 b(single)h(frequency)f(band)f(for)i
(transmission)f(and)f(reception)h(of)g(radio)g(signals.)558
b(Eac)-36 b(h)4317 29168 y(TRX)539 b(further)f(uses)g(time)g(m)-36
b(ultiplexing)539 b(to)g(handle)f(up)f(to)i(8)f(full-rate)h(v)-36
b(oice)540 b(calls)4317 30773 y(o)-36 b(v)g(er)400 b(its)g(assigned)g
(frequency)g(band)f(in)g(GSM)g(systems.)567 b(A)400 b(t)-36
b(ypical)400 b(con\014guration)f(is)4317 32379 y(\\6+6+6")446
b(depicting)e(a)g(BTS)h(serving)g(three)f Fk(se)-66 b(ctors)554
b Fq(eac)-36 b(h)444 b(with)h(six)g(TRXs.)612 b(Th)-36
b(us,)4317 33984 y(a)504 b(BTS)g(o\013ers)f(a)h Fk(\014xe)-66
b(d)640 b Fq(capacit)-36 b(y)-108 b(,)522 b(as)504 b(determined)e(b)-36
b(y)504 b(the)f(total)h(n)-36 b(um)g(b)36 b(er)502 b(of)i(TRXs)4317
35589 y(installed.)544 b(Sites)331 b(are)f(deplo)-36
b(y)g(ed)330 b(suc)-36 b(h)330 b(that)g(this)g(\014xed)g(BTS)g(capacit)
-36 b(y)331 b(can)f(handle)g(the)4317 37194 y(p)36 b(eak)466
b(tra\016c)f(load.)673 b(Ho)-36 b(w)g(ev)g(er,)474 b(tra\016c)464
b(p)36 b(eaks)466 b(only)g(for)f(a)h(short)e(duration)g(dropping)4317
38799 y(o\013)494 b(to)h(a)g(m)-36 b(uc)g(h)493 b(lo)-36
b(w)g(er)495 b(trough)e(eac)-36 b(h)495 b(da)-36 b(y)-108
b(,)509 b(whic)-36 b(h)494 b(means)h(that)e(the)h(GSM)f(net)-36
b(w)g(orks)4317 40404 y(are)434 b(o)-36 b(v)g(er-pro)g(visioned)434
b(during)f(lo)-36 b(w-tra\016c)433 b(regimes.)6268 42009
y(Ov)-36 b(er-pro)g(visioned)397 b(BTSs)f(w)-36 b(ould)397
b(b)36 b(e)396 b(\014ne)g(if)i(they)e(w)-36 b(ere)397
b(also)h(load-prop)36 b(ortional,)4317 43614 y(i.e.,)705
b(consumed)649 b(little)h(p)36 b(o)-36 b(w)g(er)650 b(at)f(no)h
(tra\016c)f(load.)1227 b(Ho)-36 b(w)g(ev)g(er,)705 b(according)650
b(to)g([3])4317 45219 y(the)496 b(no-load)g(p)36 b(o)-36
b(w)g(er)497 b(consumption)e(can)h(b)36 b(e)496 b(as)h(high)f(as)h
(95\045)g(of)g(that)e(at)i(full)g(load.)4317 46824 y(With)329
b(\014xed)f(BTS)h(capacit)-36 b(y)329 b(that)f(is)h(o)-36
b(v)g(er-pro)g(visioned)329 b(for)g(lo)-36 b(w)330 b(tra\016c)e(loads,)
351 b(to)36 b(da)-36 b(y's)4317 48430 y(cellular)434
b(net)-36 b(w)g(orks)434 b(are)g(highly)g(energy)g(ine\016cien)-36
b(t.)6268 50035 y(There)532 b(are)g(generally)h(t)-36
b(w)g(o)533 b(approac)-36 b(hes)531 b(to)h(increase)g(cellular)h(net)
-36 b(w)g(ork)532 b(energy)4317 51640 y(e\016ciency)-108
b(.)559 b(First,)385 b(a)373 b(clean-slate)h(redesign)f(whic)-36
b(h)373 b(includes)g(inno)-36 b(v)-72 b(ations)373 b(in)g(comm)-36
b(u-)4317 53245 y(nication)484 b(systems,)496 b(circuits)484
b(and)e(comp)36 b(onen)-36 b(ts.)728 b(This)483 b(approac)-36
b(h)483 b(is)h(not)f(attractiv)-36 b(e)4317 54850 y(for)451
b(existing)f(GSM)f(op)36 b(erators,)455 b(whic)-36 b(h)449
b(are)h(the)g(most)g(prev)-72 b(alen)-36 b(t)449 b(in)h(the)f(dev)-36
b(eloping)4317 56455 y(w)g(orld)472 b(and)f(are)h(exp)36
b(ected)471 b(to)h(sta)-36 b(y)472 b(as)f(suc)-36 b(h)471
b(for)h(sev)-36 b(eral)472 b(y)-36 b(ears)473 b(to)e(come,)482
b(primarily)4317 58060 y(due)477 b(to)h(the)f(required)h(exp)36
b(ensiv)-36 b(e)478 b(upgrades.)710 b(A)478 b(second)g(approac)-36
b(h)477 b(is)h(to)g(mak)-36 b(e)478 b(op-)4317 59665
y(timizations)448 b(to)f(the)g(existing)h(system)f(and)g(equipmen)-36
b(t)446 b(to)h(get)g(an)g(impro)-36 b(v)g(emen)g(t)447
b(in)4317 61270 y(o)-36 b(v)g(erall)425 b(energy)f(e\016ciency)-108
b(.)575 b(Our)422 b(presen)-36 b(t)423 b(w)-36 b(ork)424
b(is)g(aligned)g(with)f(this)g(latter)h(philos-)4317
62875 y(oph)-36 b(y)-108 b(.)6268 64480 y(One)459 b(can)g(impro)-36
b(v)g(e)460 b(the)f(energy)h(e\016ciency)g(of)g(a)g(cellular)h(net)-36
b(w)g(ork)459 b(b)-36 b(y)460 b(adapting)4317 66086 y(its)524
b(\\online")i(capacit)-36 b(y)525 b(to)f(c)-36 b(hanges)524
b(in)g(tra\016c)g(load.)851 b(Recen)-36 b(t)524 b(w)-36
b(ork)525 b(has)f(prop)36 b(osed)25578 70015 y(2)p eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 4317 7306 a Fq(turning)472 b(o\013)h(base)f
(stations)h(to)g(reduce)f(energy)h(consumption)f(during)g(times)g(of)i
(lo)-36 b(w)4317 8911 y(tra\016c)544 b(load)h([2,)g(1,)f(3)q(,)g(4].)
910 b(Ho)-36 b(w)g(ev)g(er,)573 b(our)544 b(con)-36 b(v)g(ersations)545
b(with)f(m)-36 b(ultiple)543 b(net)-36 b(w)g(ork)4317
10516 y(op)36 b(erators)486 b(indicate)f(that)g(they)g(are)g(reluctan)
-36 b(t)485 b(to)g(emplo)-36 b(y)486 b(suc)-36 b(h)484
b(tec)-36 b(hniques)485 b(citing)4317 12121 y(three)433
b(reasons:)6254 14833 y Ff(\017)651 b Fq(P)-36 b(o)g(w)g(er)475
b(cycling)i(of)f(en)-36 b(tire)475 b(base)h(stations)g(is)g(exp)36
b(ected)475 b(to)h(reduce)e(equipmen)-36 b(t)7569 16438
y(life)434 b(time.)6254 19150 y Ff(\017)651 b Fq(T)-108
b(urning)493 b(o\013)i(some)f(BTSs)h(ma)-36 b(y)495 b(require)f(an)g
(increased)g(uplink)g(p)36 b(o)-36 b(w)g(er)495 b(whic)-36
b(h)7569 20756 y(ma)g(y)657 b(not)f(b)36 b(e)656 b(handled)f(b)-36
b(y)656 b(man)-36 b(y)656 b(lo)-36 b(w-cost/p)36 b(o)-36
b(w)g(er-limited)658 b(obile)e(stations)7569 22361 y(\(MSs\).)1199
b(This)641 b(raises)g(a)g(risk)g(of)g(customer)g(c)-36
b(h)g(urn)639 b(and)h(is)h(not)f(acceptable)7569 23966
y(to)367 b(the)g(op)36 b(erators)368 b(in)f(cut-throat)f(comp)36
b(etition)368 b(prev)-72 b(alen)-36 b(t)367 b(in)g(to)36
b(da)-36 b(y's)368 b(mark)-36 b(et.)6254 26678 y Ff(\017)651
b Fq(These)467 b(tec)-36 b(hniques)467 b(of)h(turning)f(o\013)g(BTSs)g
(ma)-36 b(y)468 b(underestimate)e(the)h(increase)7569
28283 y(in)433 b(p)36 b(o)-36 b(w)g(er)434 b(needed)e(for)j(indo)36
b(or)433 b(MSs.)6268 30995 y(Our)521 b(con)-36 b(v)g(ersations)522
b(with)f(wireless)i(pro)-36 b(viders)521 b(rev)-36 b(eal)523
b(that)e(during)f(lo)-36 b(w)523 b(tra\016c)4317 32600
y(p)36 b(erio)g(ds,)479 b(they)469 b(often)g(use)g(a)h(feature)f(a)-36
b(v)-72 b(ailable)471 b(in)e(most)g(v)-36 b(endor's)470
b(equipmen)-36 b(t)468 b(that)4317 34205 y(p)36 b(o)-36
b(w)g(er-gates)338 b(TRX)g(circuits)g(at)g(lo)36 b(cations)339
b(that)e(serv)-36 b(e)338 b(v)-36 b(ery)338 b(few)h(customers.)546
b(Hua)-36 b(w)g(ei)4317 35810 y(calls)515 b(this)f(feature)g
Fk(TRX)537 b(shutdown)614 b Fq(while)515 b(Ericsson)f(calls)h(it)f
Fk(BTS)538 b(p)-66 b(ower)539 b(saving)p Fq(.)4317 37415
y(W)-108 b(e)434 b(use)f(the)g(latter)h(term)f(generically)i(in)e(this)
h(pap)36 b(er.)6268 39020 y(Since)533 b(BTS)g(p)36 b(o)-36
b(w)g(er)533 b(consumption)f(has)h(a)g(tra\016c-indep)36
b(enden)-36 b(t)530 b(comp)36 b(onen)-36 b(t)533 b([3])4317
40625 y(that)571 b(dep)36 b(ends,)605 b(among)572 b(other)f(factors,)
607 b(on)571 b(the)g(n)-36 b(um)g(b)36 b(er)570 b(of)i(activ)-36
b(e)572 b(TRXs,)607 b(deac-)4317 42231 y(tiv)-72 b(ating)616
b(TRXs)g(reduces)f(the)g(BTS)g(p)36 b(o)-36 b(w)g(er)616
b(consumption.)1123 b(F)-108 b(or)615 b(instance,)661
b(turn-)4317 43836 y(ing)547 b(o\013)g(one)h(TRX)f(cuts)g(do)-36
b(wn)546 b(BTS)h(p)36 b(o)-36 b(w)g(er)547 b(consumption)g(an)-36
b(ywhere)547 b(from)g(20)p Fj(W)4317 45441 y Fq(to)524
b(100)p Fj(W)181 b Fq(,)546 b(dep)36 b(ending)522 b(up)36
b(on)523 b(the)f(frequency)i(band)e(\(900)i(or)g(1800\))g(and)f(deplo)
-36 b(y)g(ed)4317 47046 y(equipmen)g(t)458 b([5)q(,)h(6)q(].)655
b(Th)-36 b(us,)465 b(scaling)460 b(a)f(\\6+6+6")h(to)f(a)g(\\2+2+2")h
(con\014guration,)466 b(b)-36 b(y)4317 48651 y(deactiv)-72
b(ating)462 b(12)g(TRXs)f(will)i(result)d(in)h(a)h(sa)-36
b(ving)462 b(of)f(240W)i(to)e(1200W)i(on)e(a)g(single)4317
50256 y(site.)644 b(The)455 b(decision)h(to)f(use)g Fk(BTS)485
b(p)-66 b(ower)485 b(saving)571 b Fq(feature)455 b(is)h(generally)g(lo)
36 b(cal)457 b(to)e(the)4317 51861 y(BTS)434 b(without)f(an)-36
b(y)434 b(co)36 b(ordinated)433 b(e\013ort)h(at)f(the)g(net)-36
b(w)g(ork)434 b(lev)-36 b(el.)6268 53466 y(This)621 b(pap)36
b(er)619 b(presen)-36 b(ts)619 b(Lo)-36 b(w-Carb)620
b(whic)-36 b(h)620 b(com)-36 b(bines)620 b(the)g Fk(BTS)636
b(p)-66 b(ower)636 b(saving)4317 55071 y Fq(with)490
b Fk(hand-o\013)p Fq(,)503 b(another)489 b(commonly)h(used)f(feature)h
(in)f(cellular)h(net)-36 b(w)g(orks)489 b(that)g(fa-)4317
56676 y(cilitates)539 b(user)d(mo)-36 b(v)g(emen)g(t)538
b(from)f(one)h(lo)36 b(cation)538 b(to)g(another.)889
b(Lo)-36 b(w-Carb)538 b(prop)36 b(oses)4317 58281 y(to)505
b(hand-o\013)f(calls)i(from)f(one)g(BTS)g(to)g(another,)523
b(without)505 b(making)h(a)f(negativ)-36 b(e)506 b(im-)4317
59887 y(pact)600 b(on)h(the)f(net)-36 b(w)g(ork)600 b(qualit)-36
b(y)602 b(of)f(service,)643 b(suc)-36 b(h)600 b(that)g(the)g
Fk(BTS)618 b(p)-66 b(ower)618 b(savings)4317 61492 y
Fq(can)471 b(b)36 b(e)470 b(applied)h(to)f(a)h(maximal)h(n)-36
b(um)g(b)36 b(er)469 b(of)j(base)e(stations)h(throughout)f(the)g
(cellu-)4317 63097 y(lar)482 b(net)-36 b(w)g(ork.)720
b(As)481 b(compared)g(to)g(the)f(use)h(of)h(unco)36 b(ordinated)480
b Fk(BTS)508 b(p)-66 b(ower)509 b(savings)p Fq(,)4317
64702 y(Lo)-36 b(w-Carb)402 b(o\013ers)h(additional)f(p)36
b(o)-36 b(w)g(er)403 b(sa)-36 b(vings)403 b(as)g(it)f(ma)-36
b(y)403 b(allo)-36 b(w)404 b(a)e(larger)h(n)-36 b(um)g(b)36
b(er)401 b(of)4317 66307 y(TRXs)483 b(to)f(b)36 b(e)482
b(deactiv)-72 b(ated.)725 b(In)482 b(presen)-36 b(t)481
b(da)-36 b(y)482 b(deplo)-36 b(ymen)g(ts,)494 b(this)482
b(is)h(p)36 b(ossible)483 b(since)25578 70015 y(3)p eop
end
%%Page: 4 4
TeXDict begin 4 3 bop 15540 13058 a @beginspecial 0 @llx
0 @lly 610 @urx 435 @ury 893 @rwi @setspecial
%%BeginDocument: figures/coveragecdf.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: coveragecdf.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Zartash Afzal Uzmi
%%CreationDate: 9/17/2012
%%BoundingBox: 0 0 610 435
%%HiResBoundingBox: 0 0 609.9561 434.8213
%%CropBox: 0 0 609.9561 434.8213
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.1
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.1 x420 R agm 4.4379 ct 5.1039
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 92 8
%%BeginData: 6382 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD05FF52FFFF527DFD7BFF7DFFA87D7DA8FFA8FD0FFFA8FD5FFFA8
%FD08FF52FFA87D7DFFFD10A87DFD0FA87DFD30A87D7DFD07A87DA87EA87D
%A87EA87DFD0FA87DFD06FFA87DA8A87DA8A8A8FFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FFA8A8FFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFA8A8A8FFA8FFA8FF7E7DFD04A87EA87EA9FD04FFA8FF
%FFFFA8FFFFFFA8FFFF7DA8FD0CFFA8FD50FFA87EFFA8A9A8FFA8A8A8FD17
%FF7DFD0CFFA8A8FD4AFFA8FFA8FFA8FF7DFD20FF7DA8FD0CFFA8FD48FFA8
%7DA87DA87EA87DA8FD20FF7DFD0CFFA8A8FD40FFA8FFA8FFA8FFA8FF7DFD
%28FF7DA8FD0CFFA8FD40FFA8A8A9A8CBA8A9A8A8FD28FF7DFD0CFFA8A8FD
%40FFA2FD30FF7DA8FD0CFF7DFD39FFA8FFA8A9A8FFA8A2FD30FF52FD0CFF
%A8FD39FF7DA87EA8A2A87EA8A8FD30FFA8A8FD0CFFA8FD37FFA9A8FD38FF
%7DFD0CFFA8A8FD38FF7DFD38FF7DA8FD0CFFA8FD30FFA9A8A8A8A9A8A97E
%A8FD38FF7DFD0AFFA8FFA8A8FD2FFFA97DFFA8FFA8FFA8FFA8FD38FF7DA8
%FD06FF52A8FF7D52FFA8FD71FF7DFD06FF7DA87DFF527DA8A8A8FD2FFFA2
%FD3FFFA87DA8FD05FFA8527DA85252A8A8FD27FFA9A87DA87EA87DA87DA8
%FD40FF7DFD07FF7D7DA87D7DA8FD28FFA87EFFA8FFA8FFA8FD42FF7DA8FD
%0CFFA8FD27FFA8FD49FF7DFD0CFFA8A8FD27FFA8A8FD48FF7DA8FD0CFFA8
%FD1FFFFD08A87DFD49FF7DFD0CFFA8A8FD1FFFA87DA9FD07A8FD48FF7DA8
%FD0CFFA8FD1FFFA8FD51FF7DFD0CFFA87DA8FD1EFFA8A8FD4FFFA87DA8FD
%0CFFA8FD1FFFA8FD51FF7DFD0CFFA8A8FD1FFFA8A8FD50FF7DA8FD0CFFA8
%FD1FFFA8FD51FF7DFD0CFFA8A8FD1FFFA8A8FD50FF7DA8FD0CFFA8FD1FFF
%A8FD51FF7DFD06FFA87DA8FFFD04A8FD1FFFA8A8FD50FFA8A8FD05FFA852
%A8FF5252FFA8FD17FFA8A8A2A87EA8A2A87DFD51FF7DFD06FF52A87DFF52
%7DA87DA8FD16FF7EA8FFA8FFA8FFA8FD51FFA87DA8FD05FFA852A8A87D7D
%FFA8FD17FFA2FD59FF7DFD08FFA8FFA8FFA8A8FD17FFA8A8FD58FF7DA8FF
%FFA8FD09FFA8FD17FFA2FD59FF7DFFFF7D7D52A8A8FD05FFA8A8FD17FFA8
%A9FD58FF7DA8FFA8525252A8FD06FFA8FD17FF7EFD59FF7DFFFFA87D5252
%A8FD05FFA8A8FD17FFA8A8FD58FFA8A8FFA8A8FFA8A8FD06FFA8FD17FF7E
%FD59FF7DFFFFFD057DFD05FFA87DA8FD16FFA8A8FD57FFA87DA8FFFF7DA8
%7DFD07FFA8FD17FF7EFD59FF7DFFFFA87DFFA8A8FD05FFA8A8FD17FFA8A8
%FD58FF7DA8FFA8A8FF7DA8FD06FFA8FD17FF7EFD59FF7DFFFFFF7D277DA8
%FD05FFA8A8FD0FFFA87DA87DA87DA87DA8FD59FF7DA8FD0CFFA8FD0FFFA8
%FD61FF7DFD06FFA8527DFFA87DA8A8FD0EFFA8A8FD61FFA8A8FD05FFA87D
%7DA87D52FFA8FD0FFFA8FD61FF7DFD06FF7D7D7DA85252A87DA8FD0DFFA8
%A8FD60FFA87DA8FD06FF7DA8A8FFA8FFA8FD0FFFA8FD61FF7DFD0CFFA8A8
%FD0EFFA8A8FD61FF7DA8FD0CFFA8FD0FFFA8FD61FF7DFD0CFFA8A8FD0EFF
%A8A8FD61FF7DA8FD0CFFA8FD0FFFA8FD61FF7DFD0CFFA8A8FD0EFFA8A8FD
%61FFA8A8FD0CFF7DFD0FFFA8FD61FF7DFD0CFFA8A8FD08FFA8FFA8FFA8FF
%A8A8FD61FF7DA8FD0CFFA8FD07FF7DA87DA87EA87EA8A8FD61FF7DFD0CFF
%A8A8FD06FFA8A8FD69FF7DA8FD0CFFA8FD07FFA2FD69FF7DFD0CFFA8A8FD
%06FFA8A8FD69FF7DA8FD06FF7DA8FFA87DFFA8FD07FF7EFD69FF7DFD06FF
%A87D52FFA8527DFD07FFA8A8FD69FFA8A8FD06FF7D7DA8FFA8A87DFD07FF
%7DFD69FF7DFD07FF7D52A852527DA8FD06FFA8A8FD69FF7DA8FD0AFFA8FF
%A8FD07FFA2FD69FF7DFD0CFFA8A8FD06FFA8A8FD69FF7DA8FD0CFFA8FD07
%FFA2FD69FF7DFD0CFFA8A8FD06FFA8A8FD69FF7DA8FD0CFFA8FD07FF7DFD
%69FF7DFD0CFFA8A8FD06FFA8A8FD69FF7DA8FD0CFF7DFD07FF7EFD69FF7D
%FD0CFFA8A8FD06FFA8A8FD69FFA8A8FD0CFFA8FD07FF7EFD69FF7DFD0CFF
%A8A8FD06FFA8A8FD69FF7DA8FD0CFFA8FD07FFA2FD69FF7DFD0CFFA8A8FD
%06FFA8A8FD69FF7DA8FD08FF527DFFFFA8FD07FF7EFD69FF7DFD08FF7D7D
%7DFFA8A8A8FFA8FFA8FFA87DA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFFF7DA8FD
%08FF527DFFFF7DFD07A8A2FD07A87DFD41A87DFD20A8FD09FF7D7DFF7D52
%A8FD0DFFA8527DFD0EFFA87DFD0EFF7D52FD0EFF7D52FD0DFFA87DA852A8
%FD0DFF52FF527DFD0CFF52FF7D7DFD0AFF7D7D7DFD0EFFA87DFD0EFF527D
%FD0EFF5252FD0EFF7D52A8FD0DFFFD047DFD0DFF7DA8FF7DFD0CFF7D7D7D
%52FD0AFF52527DFD0DFFA87D7DFD0DFFA85227FD0DFFA87D52A8FD0DFF7D
%27A8FD0CFFA87D7D527DFD0DFF52A87D7DFD0CFF527D5252FD0BFF7DFD0F
%FF52A8FD0FFFA8FD0EFF7DA8FD0EFFA87DFD0EFF7DFF7DFD0EFF7DA87D7D
%FD0CFF7DA8FFA8FD18FFA8A8FFFFA8A8FFFFA8FD0DFFA8FFA8FFA8FD0BFF
%A8FD0BFFA8FFFFFFA8FFA8FFFFFFA8A8A8FD3EFFA87D7D52527D7D52527D
%52A8FD04FFA8FFA8FFFFFFA8FFA8A8FF7D7DA8FD04FFA8FFFFFFA8A8FF7D
%A8FD06FFA8A8FFFFFF52FF527DA852A8FF5252527D7DFD05FFA8FFA8FFFF
%FFA8FD07FFA8FFFF52A8FD25FF7DF8FD0452FF52A8A8527D7D7DFFFD0852
%7D52527D27FD04527D2752FFA8275227FF7D7D277D5252527D27A8FFA8A8
%FD057D52A87DFD04527D275252A8A85252527DFFFD04527DFF525227527D
%7D27A87D5252527D7D275252FD1CFF7D527D527D52FF7DA8FF7D527D52FF
%A8525252A8527D7D7DA852527D52527D527D52A8FF7D27527DFF7D27527D
%52527D527DA8FF7DFF52A8527DA8A8527D5252527D527D52527DFF7D5252
%7DFF7D277D527DFFFD07527DFF527D7D52275252A8FD1DFFA8FF527D7DFF
%52A8A87D7DA87DFF5252A87DA87D7DFF7DA87DA8527D527D527D527DFFA8
%7DA87DFF7D7D7DA87D7D7DA87DA8FFFFA87DA8A87DA87DFF7D7D527D7DA8
%527D527DFFA87D7DA8FFFD057DFFA8A87D7D7DA852A8FF7D7DA87DA87D7D
%7DFD2BFF7DA8FD0FFFA87DA8FD6EFFA8FD58FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2012-09-17T01:54:59+05:00</xap:CreateDate>
         <xap:ModifyDate>2012-09-17T01:56:21+05:00</xap:ModifyDate>
         <xap:MetadataDate>2012-09-17T01:56:21+05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>184</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwfR3is/OHnE29lc2&#xA;rXclgI7oWFyIZriSH0fUEixcJQrFfUcEhRuxAGKpB+VaX+haXcN+iLu0S4XTLaSzuka2eXVhAV1C&#xA;4/fAc+b8eUwqJGBYFuuKvQv0jrv/AFaP+niP+mKu/SOu/wDVo/6eI/6Yq79I67/1aP8Ap4j/AKYq&#xA;pz6trsSBv0K8lXROKTxsfjcJypTovKreAxVU/SOu/wDVo/6eI/6Yq79I67/1aP8Ap4j/AKYq79I6&#xA;7/1aP+niP+mKqd1rGuW9tLOdFeQQo0hjjnjZ24itFWm5PYYqqfpHXf8Aq0f9PEf9MVd+kdd/6tH/&#xA;AE8R/wBMVd+kdd/6tH/TxH/TFXfpHXf+rR/08R/0xVTt9W12a3im/Qrxeqiv6ck8auvIV4sKbEd8&#xA;VVP0jrv/AFaP+niP+mKu/SOu/wDVo/6eI/6Yq79I67/1aP8Ap4j/AKYqp2+ra7NEsn6FePlX4JJ4&#xA;1YUNNxTFVT9I67/1aP8Ap4j/AKYq79I67/1aP+niP+mKu/SOu/8AVo/6eI/6Yqo2us67cRNJ+g5I&#xA;eMkkfCWeNWPpSNHyA3+F+PJT3Ug4qrfpHXf+rR/08R/0xVLD50uvXngTSLiWS2k9Gf0llkVXChiv&#xA;NImU7MOhw0rf+Mb7/qx3n/Iq4/6o40qJsdf1u8SR00OWJEfghmkERccVbkEkVWpVuO47YkKif0jr&#xA;v/Vo/wCniP8ApgV36R13/q0f9PEf9MVd+kdd/wCrR/08R/0xV2ma3NdareaZc2bWtzaQW9ySXWRW&#xA;S5eZFoV7g2zV+jFU1xV2KpVr/wD0rv8AmOh/42xVNcVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirHbPW/NN+s81npVibaO6uraNpr+ZHYWtxJb8mRbOQLyMVacj88kQFV/rfnX/q1ab/3E&#xA;Z/8Ashx2VQ0PynYxWUj6vp1jLqVzc3V1cSKizj/SLh5UX1ZI43fhGypUqOnhiZdyph/hny5/1arP&#xA;/pHi/wCacHEVRdnYWNjEYrK2itYmYu0cKLGpY9WIUAVNMBKq+KuxV2KuxV2KpBZf8p7rP/bK0v8A&#xA;6iNQxVP8VdiqTeaGuVgsDbRpLOL6DhHI5jQmp6uqyEf8CcVTeIymJDMqpKVBkRGLqGpuFYhCRXvQ&#xA;fLFV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpBbec7C6t4rm2stQmt50WSGVLOYq6OOSsDToQa5L&#xA;hVU/xXB/1btS/wCkOb+mPCqE8seV9F/QdrJd6LbRXky+rcpLbx+pzc1PMsCxbxqa4ykbVNP8M+XP&#xA;+rVZ/wDSPF/zTg4iqNtLO0s4Ft7SCO3t1LFYYlVEBZizEKoA3Ykn3wKq4q7FXYq7FXYq7FXYq7FX&#xA;YqxnSXvW8+679aijippumCL0pGk5J9Y1CjNySPifYV+eKsmxV2KpVr//AErf+Y6H/jbFU1xV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxVqR+CM5BbiCaKKk08AMVSq2164uraK5g0i8eCdFkiflaCqOOSmhuAehw&#xA;0qp+lb//AKs15/wdn/2UY0qzypZ3Vj5W0ayu4/SurWxtobiIlW4yRwqrrVSymjDsaYyO6prgV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxVILL/lPdZ/7ZWl/wDURqGKp/iry7TbO+svzQu9Qm0+9WY3F0L7&#xA;VFt55IZrG4S0isIVlRGWQRy1+Ef3XGR24qxZlUi/LLS9V0+31JRpc+nzy6tZyRS30M1sJmPqc/WV&#xA;0T1rhP8AdtzGWSWq8T8JxV7anPgvqU50HLj0r3pXFW8VdirsVdirsVdirsVdiqje3cVnZz3ctfSt&#xA;43lk47niiljT6BiFSiLzJqcsaSp5a1Io6hlPqacKgio63mSrzVqbzBrfoyej5a1ES8T6ZMmm05U2&#xA;r/pnjjQ71THQ7aa10TT7adeE8FtDHKlQaOkYVhUVHUYDzVG4FdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVYzpP13/Huu/WvT/45umel6XL7H1jUKcuXf5YqybFXYqlWv8A/Su/5jof+NsVTXFXYq7F&#xA;XYq7FXYq7FUPqV/Bp+nXV/ccjBZwyTyhBybhEpduK9zQdMIFqln+JZ/+rHqX/IuH/qrh4fNUHrWt&#xA;3t3o9/aw6HqJmuLeWKMGOEDk6FRU+r4nCBvzVkFhG8djbxuOLpEisPAhQDkCqvirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdiqQWX/ACnus/8AbK0v/qI1DFU/xV2KpN5oW5aCwFtIkU5voOEk&#xA;iGRAanqitGT/AMEMVThA4RQ5Beg5ECgJ70FTT78VbxV2KuxV2KuxV2KpV5rEp8rayIiFlNjciNj0&#xA;Dei1Cfpwx5qmuBXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxjRkv08962L2aK&#xA;ZzpmllDDE0IC/WNQ2IaSap96j5YqyfFUJbaxpN1f3Wn217bz39jw+vWkcqPNB6g5R+rGpLJzG68h&#xA;viqV6pqul3lzBbWl5Bc3NjqNvHewRSI7wuwYhZVUkoSN6Niqf4q7FXYq7FXYq7FXYqlvmb/lHNV/&#xA;5g7j/k02GPNUywK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUgsv8AlPdZ/wC2&#xA;Vpf/AFEahiqf4q828ueXPMumeb7m8l0xxbQPq0aX8cluxuxrWqQ3kMvAyK4WxiRkfmA1PsBsVSny&#xA;B5Q8z+X9FWxvUuNN9S+sSqXVwl+WvVRvr95E3qS8YrqWjqjcSDU8FrTFXryBgihjyYAAtSlT40xV&#xA;vFXYq7FXYqk/nGaaHyxqUkMjwyrC3GWNijrXaqspDKfcZKPNVn+D9J/3/qX/AHFdS/7KMeJVsvkv&#xA;RZY3ikl1F45FKujanqLKykUIINwQQffHiKp7kVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirGdJiuY/Puu+vP6/LTdMaP4AnFTcahRdutPHFXnOv8A5geYvLXm+6tuEb29rfT3F6Zb&#xA;29eFoblALdbpotPvoLJUTiyhpl+HcgVxV7FpU17NplnNfRrDfSQRvdQxkMiSsgLqrAsCA1QDXFUJ&#xA;r/8A0rv+Y6H/AI2xVNcVdirsVdirsVSTzt/yimp/8YT+sZKPNU7yKuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVILL/lPdZ/7ZWl/9RGoYqxQHznBc+Zl0zUNKTTLa7nnvFu9&#xA;Jv7l6Sr6jKZVuLZLgrFSojRqCi7nFWceWbY2vlvSbVpY5zBZ28RnhbnG5SJV5o23JWpUHwxVQ80R&#xA;STQWEccz27tfQUmjCF13PQSK6/euKpwilUVSxcgAFjSp9zQAYq3irsVdirsVSTzt/wAopqf/ABhP&#xA;6xko81TvIq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWM6Tbyw+fdd9S5&#xA;kueem6Yy+qIxwBuNQ+BfTSPYf5VT74qhdY8leY57y5GjeZpNI0jUGZ7+xFpDcSB5BSVradyDCZOp&#xA;5K4DbimKpnpGveV4dRHlLT7il5pkCxra8JeKxwpHVFmZfTd40ljLqrFlDKWA5DFVG/1zStRu1tLK&#xA;4WefS9Ut7e+VQaRysnqcCxHEni4rQmnQ74qyPFXYq7FUBrs9zDpxNrJ6M8k1vAs3EMUE86RFgrbE&#xA;gPtXCFQf6G8wf9TBN/0jW3/NGGx3KoXvlnVr61ktLvXZ5LaYcZUEFspZa1IqEqMRIdysiyKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVILL/AJT3Wf8AtlaX/wBRGoYqn+Ks&#xA;Cg8meZLXzfNqULWj6ZHc3V5ZkyvHcmTUFgimVx6MkYECxyum7eoSqngAWKqA0j8vtS8tT3qtrt3d&#xA;22palYNZTyi0NwghtxG7ycLWFGkdlIJIaoox+MsSq9KiRkiRGkaVlUK0r8QzECnJuIVan2AGKrsV&#xA;diqW+YP94Iv+Yyx/6jIsIVMsCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxVjOk28sPn3XfUuZLnnpumMvqiMcAbjUPgX00j2H+VU++KsmxV2KpVr/wD0rv8AmOh/42xV&#xA;NcVdirsVSzzDX6hFTr9dsfbb65DXCFTPArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVSCy/5T3Wf+2Vpf/URqGKp/irsVSbzRbx3EFhDIXVHvoATG7xP1J2eMqw+g4qn&#xA;CKERVFSFAAqSx28Sak4ql/mDVLjTNN+tW1ul1cNPbW0UMkhhQtdXEduC0ipKQF9Xl9g9MIFqhfrf&#xA;nX/q1ab/ANxGf/shw7KpXK+br0QwT6fp8EAuLeWWWO+mlcJDOkrcUNnGGJCUFWGOysgyKuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjOk2cVt591302kb1dN0x29WWS&#xA;WhNxqH2fUZuI/wAlaDFWTYqx7/G+lf4s/wANejcevy9D69xT6r9b+r/W/qnLn6nrfVv332OPH9qu&#xA;2Kpc3m621bVhpX1G80+8068s5il7GkfrW9w0yRXEXB5DwdoHFHCuKfEoxVmWKpJ5w/45MH/bS0r/&#xA;ALqVvkoqneRV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpB&#xA;Zf8AKe6z/wBsrS/+ojUMVT/FWHXXkK9bza+vWmqRxQm5/ScdhLbGUDUfqH6M9ZpFmiLR/VPh9Og+&#xA;L4uXbFUHP5V1uLVZL7WtVivhqN9bpGLK3msJY4kZjHG0wup2YRivDhw3Zyal8VZ4ihEVRUhQAKks&#xA;dvEmpOKpJ5yVW0i3BFR+k9KP0jUrcjJR5qnmRV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KsY0axhtPPetrE0rB9M0tj600s5r9Y1DoZWcgew2xVk+KuxVKtf8A&#xA;+ld/zHQ/8bYqmuKpJ5w/45MH/bS0r/upW+Siqd5FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYqkFl/ynus/9srS/wDqI1DFU/xV2KpN5otra6gsILmJJ4HvoA8U&#xA;ih0YAk7q1QcVThEREVEUKigBVAoAB0AGKpL5w/45MH/bS0r/ALqVvkoqneRV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsZ0mxsrXz7rv1W3jg9bTdMkl9JFTm5&#xA;uNQqzcQKk+JxVk2KpR5q16TRNJ+twWwvLya4t7OytWk9FZJ7uZIIw8nGTggaTk7cWIUGgJ2xVLbb&#xA;XV13QtE1QQm2ea+RJ7YsH9OaGR4pkDgDkFkRgGoKjegxVlOKpJ5w/wCOTB/20tK/7qVvkoqneRVT&#xA;nuIYEDzOEQukYJ/mkcIg+lmAxVUxV2KuxVTuLiG2t5bidxHDCjSSyHoqqKsT8gMVVMVdirsVdiqn&#xA;b3ENzbxXEDiSGZFkikHRlYVUj5g4qqYq7FXYqo2V5b3trHdWzF4ZRVGKsh603VgrD6RiqtirsVdi&#xA;qja3ltdxNLbSCWNZJIWZegkhkaKRfmroyn5YqrYq7FXYqowXltPLcRQyB5LSQQ3KjqkhjSUKffhK&#xA;rfTiqtirsVdiqQWX/Ke6z/2ytL/6iNQxVP8AFUt8xaDba7pbafPNLbfvIZ4Lq3KCaGe2lWaGWMyL&#xA;InJJIwaMpU9CCCRirCfO9gNC8saH5a066FpaTzzrNqV3Fb3T8rezub8sy3Ebwl5poeTnh05ceJoQ&#xA;qyTy9onl3UtA0zUbjQrCG4vbSC4mhFtEAjyxq7KKqTsWpiqPPlLyqRQ6NYkVB3toeo3H7OKt/wCF&#xA;PK3/AFZ7H/pGh/5pxVIvOvlPQx5dupLSO10eWIcxeQ2FpcTch/dxxRzxSozvLwUDgxb7K0YghVGe&#xA;XfL2iXegabdaho2nLqE1rC96sVvCYxOYwZQh4n4Q9aYqmP8AhTyt/wBWex/6Rof+acVd/hTyt/1Z&#xA;7H/pGh/5pxVJvNumeW9I0Sa6i8vQXMrMkKLb6Y16yGVuPqNBbRSyukYPJgq70pUVriqD/LWx0HX/&#xA;AMvfLes3ulWkl7f6bazXksljHAXnaFfWcRmOOitJUqVXiRQr8JBxVkv+FPK3/Vnsf+kaH/mnFXf4&#xA;U8rf9Wex/wCkaH/mnFWPefrHR9D8p32oaZomlvqQMNvZfWYIlgWe7nS2jkmYLURo8oZ/8kHFVL8u&#xA;dG0fUfJ9ncanpNpJqUcl1a3ryW9o1Z7S6ltpODQQW8bR84j6ZEYqlK71OKsm/wAKeVv+rPY/9I0P&#xA;/NOKu/wp5W/6s9j/ANI0P/NOKpF550bQ9M8m61qFjp+mWl7a2c0lrcz2sTRpKEPAleDV+LoKGp7H&#xA;FUF+WmlaLqnlVJ9Q061uLyK6u7eX6zY2sN1GIbmREiukhjjh9dECiQxKEJ3WooSqyr/Cnlb/AKs9&#xA;j/0jQ/8ANOKu/wAKeVv+rPY/9I0P/NOKsa/MHQ9I0/y6L3TrG0tLiK9sFLpaWr845ryKGSNhLFIO&#xA;LJId1o3gRiqQ+To7K9863VndWNhNY3R1krpwsrVBYnSdSjsoSGSNZG+uRymZvUZtx8NBir0P/Cnl&#xA;b/qz2P8A0jQ/804q7/Cnlb/qz2P/AEjQ/wDNOKtHyn5Wp/xx7Ee/1aH/AJpxV5dFpkv+D9J1WKWz&#xA;OoQ6hPBcxSadYf6fFBqLQyNcskCiNYrKF2ZoVSlK/wCSVXqX+FPK3/Vnsf8ApGh/5pxV3+FPK3/V&#xA;nsf+kaH/AJpxV3+FPK3/AFZ7H/pGh/5pxV5QfN955Z8v2BtIJfrc/mKWw1HV7bSTL61jaeZG05be&#xA;Q2FsIFme2ZgtVBJBCDm4xV7XirsVQmq6PpGr2hs9WsbfULQsrm2uoknj5Iaq3CQMtVO4OKosAAUG&#xA;wHQYq7FWH+b/AMyLLy7q1rpP1C7vLy7VWUxWt68IMlxFboDNBbzx7mYk77Up1ZQVWF2n5kx+eJm8&#xA;uah5T0TXLyl7ImjfpKPUPQuNNuBbFr6Kezj+qpIXrHJxYkH7NTTFUwtfzN8w6b5be8fypp+n6TYX&#xA;kujQPBqT/UrY2N09lI1ywsYzbWyegSjrGwpTkE7Ksz0Pzppmp3EFg/7vVJoRcGCDndW6xOWMTfXI&#xA;k+r1kROarzrTtiqVz/nL+XlvLcRT6hcRSWskkUwfT9QH7yCVYZUSsHxmN5F5hK8QQx+HfFV15+cP&#xA;5fWXr/W7+4g+rRtLOH0+/BX04lnlQj0P72KGQSSxfbjWrOoANFWl/MXyZpdxHpEP+4+wsLOSRo5L&#xA;O9tEhgtY4GWO2RrZYZAsdwg4I4ZaqAprQKpTpP546BOs0msQtpUNub31i0V/I4jtLyGzWTgbOPjV&#xA;7geqkhV4jxqpDFlVTqX82/IcYsib24Zr+QwwRx2F/I6yC6Nl6cyJAzQP9ZBiCyhSW2xVEeavOnkj&#xA;T7l/L+vv60l3bNJLYG0nuopIWjmfhJwikirKlrNwjc1fg3EGmKoCPz3oeneXvKd9pWnLZ+WtZkFt&#xA;GJkbTzZQLazXKuLZoqcAtsR1VaUZSy4qiE/NryCy2rDUZFN5P9VijezvEdZOUCj1kaEPAhN7BR5Q&#xA;qH1EofiGKr0/M/ynLqGmWNs15cSatcyWdpJHYXhiMkSlmYyGIL6dB/eCq0+KvCrBVGefdXOkeVb2&#xA;+bToNVtkCpeWNzJ6cbwSsI5B/dThtm+wy0bxGKset/PGmaBq7+X9N8vpa+WrG7fSY57ABSNQFidT&#xA;MMNhFEKo0Xwh1apk+Hj+1iqFvPzptbDyBP5nvLW3OohbprTRbWa8ndjZR+pNHcMbGOW1kjFRJ6kP&#xA;BDx5PRq4qoaf+dks3mz9A3Wm2SMb82At7XUmutU4fVPri3X6O+qxuYfTNHKyHi1QOVN1U0f8wvyl&#xA;83x22k3TRavbX8lv6FrfadcPA73AZrZmFxB6ahyjKjNQcwVryBGKqtz57/LnQvMusxS2slnrKvBH&#xA;qN3Bpdy8l3I8LSxoslvC73LRwoXIFeKgnoGoqm+q/mH5O0rStO1a81D/AHHasFewuYYprhZI3UOJ&#xA;D6CSFIwrAl2ooqKkYq3oPn7ypr2qXGlaZdyS6haiYzwS21zAR9Wm9CYAzxxqxjlorBTUVB6EVVSy&#xA;5/OP8vLeZ4ZNSlMiyGFQllfSCR19UfuSkDCVSbaVQ0dVLKVBrtirG73Uvykj1zynoOleWNI1KK/u&#xA;ENtJHYqkViLq1e+hmib6q0HOVYAxT1EkoVahGKsvufzP8lW13dWlxezRT2U1zb3KvZ3gCzWkUc8q&#xA;BvR4sfSmR04k+oD8HLFVO8/NXyNZSCO6vZopDCZyhsr2qqEkkCSAQ/BKyW8jLE1HYKSFOKsg0XWb&#xA;DWtNh1KwMrWdwCYXmgmtmZQaBhHOkb8W6q3GjDcVGKqVl5Z8t2NkbCy0mztbEzrdm1ht4o4jcI6y&#xA;pNwVQvqLJGrB6VBAPUYqmWKuxV2KuxV2KsW178s/Juva9Druq6dBdajAsSxSywW8pAhE3DeWN2+1&#xA;Py69UXsCCqgPL35Uafo+paZfSa1qWqHR5LyfToLz6iscU2olzcvW1tbaRuZlY8WcqOw2FFUZpP5f&#xA;tpejS6bbeYtV9SS+uNTGoE2SzrPdtJJMOKWqQPG0szycJImAb2CgKofQPyp0HQ9V0vUrS6uml0mC&#xA;W3hVxar6gnZ3kaaSKCOZwXlZxH6npKxqqCgoqx2y/Jm81GTWpvMepz2z3mpXd5pcOmzwyxW8V1PH&#xA;OzD6xZKfVcwqrhuagfZpyOKskH5V+Xm1241We4u7mK4knuW0uVojaC6u7X6lcXChY1lDywclK+pw&#xA;+IkKDiqAuvyW0K60/S7CbV9UaDSrSezhb1Lb1ZDcPHKZ5ZfQ5mVJIImUqQPgHwkVBVQUn5D6bJLN&#xA;K/mnXGkuDcNKxOmVLXlxDd3B/wB4f25rSNvAUotASMVQNx+Tuv2nmHT7rS9U+u21rPNerqGpmwa6&#xA;t7q8unubt4of0VNGQ7vyHpSwP1Xnx4cFWV+Zfyv0bzF5ltNfvr69S4slVLe2jaH0FosqOV9SKSRP&#xA;VS4ZZODjlRa7qCFWtR/K/SdR8t6H5evNRvpdP0LisdTbc7mNbd7T07g+hQqYJnQ+mEO9a13xVI4/&#xA;+cf/AClFY2VlFf3sMFhP9ZhWCHTLcNKrQvHI6QWUaNJGbYcZSvqUZlZyrUxVOdM/KnRdN1iLV7a/&#xA;vFu4r+TUuKrZxQtJNA1vKjQw28UfGRXJdgvqM25fFUf5g/Lvy3q9lqkEMK6Rd6z6f6S1XTobWO8m&#xA;EbhwJJZYZue6/tA+2KqE/wCW+mya6+tLqN9DdM5ukiQ25hTUDaGx/SCxvA4+sC3PHesffhXFUv1z&#xA;8nNF1mzeK51bU47y5S9i1DU4ZLZbi6i1KKKC5jmBt2h4mO2hUcI148BTvVVSt/ybsY51ebzHq91E&#xA;moxawLaUaaE+vW8aRQzcorKOQcFiQcQ/E0+IGpqqh9O/IzS7CSyaLzJrLLYfo8Qxv+jSpTSpJZbR&#xA;GpZBqI1w9aGrV3OwxVONb/LDTdU12TXU1TUNO1NpYbi3ntGth6E0MElqXiE0E395BMyOr8lPUAHf&#xA;FVHzD+UPlvWvK+k+WDdXtjo+jQiC1gtnhIZVjEcbSC4inVpI+IZHoGDb13OKqvl38sbPQ/Mr6/Fr&#xA;WpXcz/Xa2dz9S9AfpG4F1cU9K1il3mRWH7zalOm2KpMn5BeVraV5dM1C80uQ3jX0UlpBpayo7rMr&#xA;IZ3sZJpUpdPQTO5G1CKYqidL/JTRtNvtKurbW9W46TPaXUdsz2ZhlmsrP9HxvKv1YGptKRNwK1AB&#xA;+18WKozVPyn0e/1671g6lfQteyyzz2KizltDJPZJYSkxXNtPyDwwpVWJFV2FCwKqUp/zj/5OjlWa&#xA;K6uluRZtYvcvFp00xUrKqyRyT2crW7Is5Ci3MaABRxoKYq9C0jTl0zSrTTlnkuVs4UgWebh6jrGo&#xA;UF/TWNK0H7KjFUXir//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:E76278C74000E211A721F2348CEAF032</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:E96278C74000E211A721F2348CEAF032</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>TIMES.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.821 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.821 li
609.956 434.821 li
609.956 0 li
cp
clp
[1 0 0 1 0 0 ]ct
51.9321 11.4189 mo
234.612 11.4932 417.296 11.4268 599.976 11.4502 cv
599.964 135.22 599.995 258.993 599.956 382.767 cv
430.604 382.774 261.253 382.767 91.8931 382.774 cv
91.9321 382.036 li
104.612 382.048 117.295 382.028 129.975 382.048 cv
129.975 380.595 129.963 379.146 129.963 377.7 cv
131.003 377.7 li
131.003 379.138 131.014 380.587 131.003 382.04 cv
207.983 382.04 li
207.983 380.587 207.983 379.134 207.975 377.685 cv
208.983 377.692 li
208.995 379.13 208.983 380.587 208.983 382.04 cv
285.956 382.04 li
285.956 380.587 285.956 379.138 285.963 377.7 cv
286.963 377.7 li
286.956 379.138 286.956 380.587 286.963 382.04 cv
312.636 382.036 338.304 382.056 363.976 382.028 cv
363.956 380.341 363.944 378.653 363.933 376.974 cv
364.964 376.931 li
364.956 378.626 364.944 380.325 364.944 382.028 cv
390.624 382.056 416.296 382.04 441.976 382.032 cv
441.976 380.587 441.964 379.138 441.964 377.7 cv
443.003 377.692 li
443.003 382.04 li
519.983 382.04 li
519.983 380.587 519.976 379.146 519.976 377.7 cv
520.983 377.669 li
520.983 382.04 li
546.976 382.021 572.964 382.087 598.944 382.013 cv
598.976 369.716 598.944 357.419 598.976 345.118 cv
596.964 345.114 594.964 345.114 592.976 345.118 cv
592.964 344.388 li
594.964 344.376 596.964 344.376 598.976 344.388 cv
598.944 332.337 598.983 320.294 598.944 308.243 cv
596.612 308.22 594.296 308.204 591.976 308.196 cv
591.964 307.481 li
594.296 307.489 596.624 307.497 598.964 307.509 cv
598.964 295.439 598.956 283.364 598.964 271.29 cv
596.956 271.29 594.944 271.298 592.944 271.306 cv
592.995 270.561 li
594.976 270.561 596.956 270.561 598.956 270.575 cv
598.964 258.509 598.964 246.45 598.956 234.384 cv
596.956 234.392 594.964 234.392 592.983 234.399 cv
592.956 233.653 li
594.956 233.653 596.956 233.661 598.964 233.665 cv
598.956 221.604 598.964 209.536 598.964 197.47 cv
596.956 197.462 594.944 197.462 592.956 197.462 cv
592.976 196.708 li
594.956 196.708 596.956 196.716 598.956 196.724 cv
598.976 184.427 598.944 172.13 598.976 159.825 cv
596.964 159.817 594.964 159.825 592.964 159.825 cv
592.976 159.091 li
594.964 159.079 596.964 159.079 598.976 159.091 cv
598.944 147.04 598.976 134.997 598.956 122.95 cv
596.604 122.931 594.265 122.915 591.933 122.903 cv
592.022 122.185 li
594.335 122.2 596.644 122.2 598.964 122.212 cv
598.964 110.142 598.956 98.0752 598.964 86.001 cv
596.964 85.9932 594.964 86.0088 592.964 86.0088 cv
592.976 85.271 li
594.956 85.2632 596.956 85.271 598.956 85.2783 cv
598.976 73.2119 598.964 61.1533 598.956 49.0869 cv
596.956 49.0952 594.964 49.103 592.983 49.103 cv
592.956 48.356 li
594.956 48.356 596.956 48.3682 598.964 48.3682 cv
598.956 36.3022 598.964 24.2393 598.964 12.1729 cv
572.964 12.1729 546.956 12.1729 520.956 12.1768 cv
519.976 12.1768 li
494.315 12.1729 468.655 12.1768 443.003 12.1768 cv
443.003 13.415 442.995 14.6533 443.003 15.8921 cv
441.925 15.7979 li
441.933 14.5952 441.956 13.3882 441.983 12.1851 cv
416.296 12.1729 390.604 12.1489 364.913 12.1919 cv
364.933 13.3882 364.983 14.5869 365.034 15.7822 cv
363.964 15.8062 li
363.944 14.5952 363.944 13.3882 363.956 12.1768 cv
338.296 12.165 312.636 12.1729 286.975 12.1729 cv
286.956 13.3721 286.956 14.5752 286.956 15.7739 cv
285.963 15.8213 li
285.956 14.6099 285.963 13.4033 285.963 12.1851 cv
260.335 12.1572 234.706 12.1729 209.065 12.1812 cv
208.975 13.8452 209.163 15.5669 208.253 17.1382 cv
207.963 15.4854 207.963 13.8291 207.932 12.1729 cv
131.045 12.1729 li
131.014 13.3799 130.983 14.5952 130.963 15.8062 cv
129.956 15.7822 li
129.983 14.583 130.022 13.3799 130.045 12.1812 cv
104.354 12.165 78.6738 12.1729 52.9829 12.1729 cv
52.9829 24.231 53.0029 36.2822 52.9751 48.3408 cv
54.9829 48.356 56.9829 48.356 58.9829 48.3643 cv
58.9751 49.0869 li
56.9751 49.0869 54.9751 49.0952 52.9751 49.0952 cv
53.0029 61.1221 53.0029 73.1533 52.9629 85.1851 cv
54.8848 85.2861 56.9238 85.1772 58.6821 85.856 cv
56.7837 86.0088 54.874 86.0283 52.9751 86.0601 cv
53.0142 98.1099 52.9829 110.153 52.9829 122.208 cv
54.6548 122.208 56.3228 122.2 57.9829 122.2 cv
57.9751 122.939 li
56.3149 122.931 54.6548 122.915 53.0029 122.907 cv
52.9629 134.966 53.0142 147.032 52.9751 159.091 cv
54.6431 159.091 56.3149 159.099 57.9829 159.099 cv
57.9751 159.825 li
56.3027 159.825 54.6431 159.825 52.9751 159.829 cv
53.0142 172.134 52.9629 184.435 52.9951 196.739 cv
54.6738 196.739 56.3418 196.731 58.0142 196.743 cv
57.9321 197.462 li
56.2837 197.47 54.6348 197.454 52.9829 197.462 cv
52.9829 209.521 53.0029 221.579 52.9751 233.638 cv
54.9829 233.646 56.9829 233.653 58.9951 233.665 cv
58.9751 234.384 li
56.9751 234.384 54.9751 234.384 52.9751 234.392 cv
53.0029 246.45 53.0029 258.509 52.9629 270.567 cv
54.624 270.567 56.2837 270.567 57.9438 270.583 cv
58.0029 271.274 li
56.335 271.298 54.6548 271.306 52.9751 271.325 cv
53.0142 283.384 52.9829 295.446 52.9951 307.505 cv
54.6548 307.497 56.3149 307.497 57.9751 307.497 cv
57.9829 308.235 li
56.3228 308.22 54.6631 308.212 53.0029 308.212 cv
52.9629 320.271 53.0142 332.329 52.9751 344.388 cv
54.6431 344.388 56.3149 344.388 57.9829 344.396 cv
57.9751 345.142 li
56.3027 345.134 54.6431 345.126 52.9751 345.126 cv
53.0142 357.431 52.9629 369.743 53.0029 382.056 cv
65.6348 382.036 78.2529 382.036 90.8848 382.056 cv
90.874 382.759 li
77.9048 382.782 64.9438 382.743 51.9751 382.782 cv
51.9321 258.993 52.0142 135.208 51.9321 11.4189 cv
51.9321 11.4189 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 .992157 cmyk
f
519.976 11.8062 mo
520.956 11.8062 li
520.995 13.0132 521.054 14.231 521.136 15.4419 cv
508.085 15.4619 495.046 15.4619 482.003 15.4351 cv
482.003 17.3682 482.003 19.3101 482.034 21.2471 cv
469.015 21.231 456.003 21.2822 442.995 21.2241 cv
443.015 24.1299 443.015 27.0361 442.995 29.939 cv
429.995 29.9351 417.003 29.9111 404.003 29.9463 cv
403.913 33.3213 403.983 36.7002 404.022 40.0752 cv
391.034 40.0752 378.034 40.1099 365.046 40.0669 cv
365.015 44.415 365.034 48.771 364.995 53.1182 cv
352.003 53.1421 339.022 53.0752 326.034 53.146 cv
325.964 59.1812 326.015 65.2119 325.995 71.2393 cv
313.003 71.2158 300.003 71.2158 287.014 71.231 cv
287.003 77.5132 287.073 83.7939 286.983 90.0791 cv
273.983 90.04 260.983 90.0791 247.983 90.064 cv
247.983 109.642 li
234.995 109.634 222.003 109.653 209.014 109.634 cv
209.053 125.571 208.924 141.505 209.073 157.446 cv
206.592 156.462 203.706 156.728 200.995 156.7 cv
190.663 156.743 180.342 156.72 170.014 156.712 cv
169.963 176.782 169.995 196.845 169.995 216.915 cv
157.003 216.829 144.003 216.888 131.003 216.888 cv
131.045 237.165 130.983 257.446 131.034 277.729 cv
118.014 277.735 105.003 277.743 91.9829 277.735 cv
91.9629 286.669 92.022 295.604 91.9438 304.536 cv
91.9131 305.614 92.1431 306.692 92.5449 307.735 cv
91.6118 310.481 92.0449 313.329 91.9829 316.126 cv
91.9321 338.095 92.0649 360.064 91.9321 382.032 cv
91.8931 382.771 li
90.874 382.755 li
90.8848 382.052 li
90.9751 347.021 90.9321 311.989 90.9048 276.958 cv
103.913 276.974 116.932 276.974 129.944 276.95 cv
129.944 256.665 129.975 236.376 129.932 216.091 cv
142.932 216.099 155.932 216.118 168.932 216.083 cv
168.924 196.021 168.932 175.966 168.924 155.903 cv
181.932 156.024 194.944 155.923 207.956 155.974 cv
207.995 146.071 207.893 136.173 208.014 126.267 cv
208.034 124.919 207.815 123.571 207.432 122.255 cv
208.635 117.856 207.655 113.329 207.956 108.872 cv
220.944 108.849 233.924 108.899 246.913 108.864 cv
246.893 102.345 247.014 95.8169 246.854 89.2939 cv
259.924 89.2822 272.995 89.29 286.073 89.2939 cv
285.995 87.9463 285.835 86.5991 285.405 85.2822 cv
286.635 80.4111 285.733 75.3838 285.913 70.4502 cv
298.924 70.4702 311.925 70.4351 324.933 70.4702 cv
324.925 64.4312 324.933 58.3921 324.944 52.356 cv
338.003 52.314 351.065 52.3882 364.124 52.3452 cv
363.983 50.9971 363.823 49.6572 363.386 48.353 cv
364.534 45.4033 363.765 42.3022 363.925 39.2861 cv
376.913 39.376 389.913 39.2939 402.913 39.3252 cv
402.933 35.9463 402.905 32.564 402.905 29.1812 cv
415.925 29.1812 428.933 29.1729 441.944 29.189 cv
441.944 26.0283 442.003 22.8682 441.854 19.708 cv
443.413 20.3491 445.175 20.5713 446.956 20.5132 cv
458.284 20.4419 469.624 20.4932 480.956 20.4702 cv
480.933 18.5283 480.925 16.5952 480.933 14.6533 cv
493.944 14.7202 506.956 14.6611 519.964 14.6812 cv
519.964 13.7241 519.964 12.7632 519.976 11.8062 cv
519.976 11.8062 li
cp
.933333 .917647 .447059 .54902 cmyk
f
49.1631 74.0601 mo
49.7061 74.521 49.7061 74.521 49.1631 74.0601 cv
49.1631 74.0601 li
cp
0 0 0 .180392 cmyk
f
130.163 253.892 mo
130.854 254.571 130.854 254.571 130.163 253.892 cv
130.163 253.892 li
cp
0 0 0 .960784 cmyk
f
130.155 258.931 mo
130.784 258.931 li
130.784 259.571 li
130.155 259.561 li
130.155 258.931 li
cp
0 0 0 1 cmyk
f
.74902 .678431 .670588 .901961 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 35 /numbersign put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
33 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
/numbersign <1C60D8A8C9B7A73DA2E75BCE17444281272794E20910689091D
37FE74EFD4A4152E8197F548605B7AD6FC6DD4FFB269E530B940FEFE386D570F
827BF933086252CDB98571E300FD31739A6A01E726B9F9263BD1E7DFA4113AEC
4577E5EE06FA37EA0650186F6F1BBB918B7FEA4> |-
/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-
/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED949
85BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375
C6ADD098717CA70F621> |-
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DB
F6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DF
DD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364
C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A
808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
/B <1C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F940
23374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AE
A69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC24
83A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B41
2F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF7
5F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16
E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E95597
8F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |-
/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA34
5031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9D
EB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC94209715
8DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC739
9ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283
409DD22AD16B7DD28B54D5FC454C> |-
/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EA
E566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA75
9A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407C
A730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D50
0379950803F077453028FB6169> |-
/F <1C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB
335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A
6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB
014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC774
5E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4
D7DDC1356637FA048F199EDF19A428> |-
/S <1C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49
387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D
7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD
7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6
B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518
CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE9049
07DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB4
44BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE
13D22435E5FCC1B5A000DE> |-
/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F
6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD9755
6EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58
110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D2030
65B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A
86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857
EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB
01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104
E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A
36815EA1CE5876FAC4F83CDFE1BD4A> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F608
47F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF
4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AE
A8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA7
07BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8
585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF
9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA4
5E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD7
0E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC819
1E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D30027
81921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0
BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46
F1C707> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D
244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527
D6441CE02F5A28D63A618F> |-
/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D
24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E
9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2
556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD
574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F24910
7C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18C
E6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE9556
17323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D98
7ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFE
C679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82
B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B5179
96> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40E
B48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048
D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC6
66023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F759
04A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B84
31B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E
94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF
1C7730E7CC0F462D79552DFA> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
/v <1C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D2940
3E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF33
B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0EDAE
DA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D98
258ABD433E9E> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ODODJO+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/ODODJO+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 2{/.notdef}rp /numbersign 9{/.notdef}rp /hyphen /period /.notdef 
/zero /one /two /.notdef /four /five /six /.notdef 
/eight 9{/.notdef}rp /B /C /D /.notdef /F 12{/.notdef}rp 
/S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v 137{/.notdef}rp]
ODODJO+TimesNewRomanPSMT nf
ODODJO+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
101.956 427.462 mo
(#BTSs providing at least -105dBm to an end user)
[12 16.0078 14.6602 13.3477 9.33984 6 12 7.99219 12 12 6.66797 12 
6.66797 12 12 6 10.6523 6.66797 6 6.66797 10.6523 10.6523 9.33984 6.66797 
6 7.99219 12 12 12 12 16.0078 18.668 6 6.66797 12 6 
10.6523 12 6 10.6523 12 12 6 12 9.33984 10.6523 0 ]xsh
ODODJO+TimesNewRomanPSMT*1 [2.15504e-9 -24 -24 -2.15504e-9 0 0 ]msf
19.9561 219.462 mo
(CDF)
[-16.0078 -17.332 0 ]ysh
ODODJO+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf
48.9561 402.462 mo
(0   2    4     6      8      10       12  14)
[10.5 25.5 36 5.25 10.5 20.25 36 5.25 5.25 10.5 15 36 
5.25 5.25 5.25 10.5 9.75 36 5.25 5.25 5.25 5.25 10.5 4.5 
36 5.25 5.25 5.25 5.25 10.5 10.5 30 5.25 5.25 5.25 5.25 
5.25 5.25 10.5 10.5 19.5 36 10.5 0 ]xsh
22.9561 313.462 mo
(0.2)
[10.5 5.25 0 ]xsh
31.9561 388.462 mo
(0)sh
21.9561 240.462 mo
(0.4)
[10.5 5.25 0 ]xsh
20.9561 167.462 mo
(0.6)
[10.5 5.25 0 ]xsh
21.9561 92.4619 mo
(0.8)
[10.5 5.25 0 ]xsh
20.9561 17.4619 mo
(1.0)
[10.5 5.25 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/ODODJO+TimesNewRomanPSMT*1 uf
/ODODJO+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.1
%%For: (Zartash Afzal Uzmi) ()
%%Title: (coveragecdf.eps)
%%CreationDate: 9/17/2012 1:56 AM
%AI9_DataStream
%Gb!Q;GC/U7p@.tR4:g<m"B%h,PYb74`<kc8UfWF&Tc9BTq0i*@`P!GLnst.%mLDgm/Eu@4*M'(8[DI/CC@t&e_YCnC.uBO9-F&_o
%KE%<Ti30PrZedi0dl*%<WFTlW2N4M39Nl8'M5J_k*.4S>DD$\ABRVIjS,@)'*"U'+Ck&;V:OTTj<UYGcop$>B0Gsh&V(ei,qs&C8
%nRrEdep9]4G0U'MIQX]mDQ?hrFdqZ*1)]`ZQ;(SlZM2?2#!=g[L@t@70$9h?j,'tVU,Qak089pBfO%2rnFt$X1s(LjQlVPBr*B67
%127:7/cHO0PAaHUi;!dEaaBdHWr.5Secj8A%VJnVHFZj>]t_EP1T;@X!'er#Cap;m^G(#f/GLO3`,k2<b3%GAhs&DJ6@I]0O$:"j
%O_al618rNE[,sq,*Sjp#Wt%@Zhkd1M;Uc*t!rRO$#N/=YA2<Y0fL3O^s*'P(ci2((&]7kSE1FFGX>$jOrXUO[6tdp6&APqd%!^`>
%e:VOr^WYS;YJr/CJ0>_9k6?(=((C%H>ko(<eETAUT*'BX%i,`-rKSoY4Td+CXT-0G1TA:If?Jsje]*Y`]"@KCDC(L$rT3$c&@Ril
%)@_eQX8l_J6cIGldY-QUn85/^$q/Jp^tOdplh![Dd_mnJVa@S`TFrqD(4W"!8$f5qEmfHs*!+"L3BrZR%1'%[V=_\[dAs9,7]d&S
%DH-)@'h`(=EhInAT)uh,W)TD@_6PGpM3Tmr^FP"fk(q4un1U2_TBS31biRbqYpb$i9Z!FD,^c%S_PbL$IYr(o]p;F2B'D/M/"MF>
%dV7>bS`Vo2dp*BkalQp"*;G:qcfJQ@>RiZE^VN^uXB:/#MFI;TYm?s9Mm*Z2_5A9>:8?E$%Q<6)r">SXShclL*YUblY=d-)8ane=
%!LlBbi$W=FiKBkQcQH'R'=NHW_+t3GZlJjP#T*DlImKac-gV0n(@E(B"[<Ucn/(jWKF<ftf+cO22M7[=:Y:E^i-,g"d,a^hj0cfu
%"[DOX(jZSjSj&_d*Zn*_6C$%'s+AQ=N:7L(Kb9.ba3R/l_-^S+#c!&e]JTCp#UB8#ImF&h*PbHjo'e1)$(F3ti?q)A-5X>)GQr+\
%M&+J!,ta=sLSos[*]Coo-`mi4*Wpp>O/I_&`dLKn_bHqVYRL_3U/;1=H6#A5+%$n(-Z"NO*Q!Wa"htI1@2fIpG[7%aM3IH"iA!$_
%9B7W9NC7u(nsErA;+OA)i>/U\Sf_9c4>L5*1jKB^&q"s#YaI=3mN-S&TAtF\j>!E=b/Us3$\Z.Mcp(4H$MWS)_!;X-.XWQpQGNlo
%dNor2-kX.q:m8in$FZe=<j2Vf,V:Bi?!.eS]$ch>O`AG:eTdTMs56[M<5un,M$/:'r5AV5.K$[G'E80<n*T);Pb7_X-A2>!Ic>k1
%/H.`#Pt0/Xs&^%$;L[VTK`_6Xq2,-&f1RFfQ1>Ug/!oe`b"qqrOoL8Y*o[`[@f56#V8)Lq#\,&Y9^QgGArl!G'(F)X7&Inf1'N[?
%5<1Wk.:l+f(B+MAEVS]<q?[a5@^>btg^nj?MDOaGfGOW^1?,VQPC^K"s2sgYg]GH%Q,ZK9GK"0j:H16NQ.,_#jC/$Yr`N].n>A6o
%bu6I1ns*>k]BA2;g*Xs5n@qX7!L+4J/@.?N5,PO$ogVk4MJLG/PpiDfF/f75nI0^aoj/?k/#?A87,cStU[L%)'pfE(5t2$*KH"^<
%A@,W7h1F5l=[UMo3'f7K@KHKsh.H?9K%El["=+G!2i(RVnmY3FMsUM,TiN"MW1a=oRh1']EDue)1p^]sr61klnB,OEP8#C31k:7j
%b2H>j5BE6u1qEgT]]oc'Lrp]L)pNkQkEoi/&/r3MQurDD`Pi>9,$6/8M%\*2f*V(qP*8uNZRqZc%JLL>;q+p&=H-^6oTY$l%/br(
%M%l%O-r-1V.Nto%PUb\@TFp,"S0#<;M*u.E"\#3,+e]"3J[sV3H<^M(LW+tq%:2)8r4"#.ip%$CB^rAj"4^#C-?&mhnjMJ$e&a\"
%&O-rNAl"+lEFKn'&c++J&f/kF$7gp@YtoA)A]dg,"]Z);Q]T9Z`UD_b87?'mJ\i5r7"o2+'%EpY!?:GuB[_'tSel&b@@r`jB6'm*
%E0q+]il.ZCSO(nLlM`K6,6ebs&iTuIX6L<m*OZS^?Jhe?77h#?+DAATGZT3F*?iMu<:lKB43XYM.M8f$CY$ta@Ttuc4Ltl?<oGK#
%aPkH57U[1F=%6d,ombDjC6E.mrB78+=em$Vdaei@Q$Fr%f7JRp#*0o>Xe\+U26m]b+,j$9(*s:UYVDms9MmdL$.mO<;71N"l']A$
%HkF,I7X+Hu]Z6ue7,6O5?I\AJG,&]G%78VrZMI>Xf,9u5dmb=8>aRFj?mmML?;)kk..2)"2J#l9BlS5$lWBWe1@":l\LG+dW;U;g
%%9i0SK==EG,&5i`c&PdUSK2hGCP%8*M\fsTM#9[Z4F$s-H^sUpX]Aq6H2mB*'b:J<`Q22@8;oN'Y6IW$;8#ijFrqIYCn%Aqla8:g
%lhE[X783G\)91`[7H.KpTiR.Pb9S*Oi&]mc%o>aTph,1e`Oug)QlpBA6sEQo9NgF4oG_6eol%,ML7Eh:VM#Ihip0&2Q[&"/,tY0+
%(q,`!-.4I-;5>'q"U-b:8c14NJ@e4I83@)g;.Y'rms>A6(s:_dSYOdM)21>\.NlE\2['@-]VgCs$BdqK$nM$!&SP;o?/6]^09mgq
%Wo?#"O;lg0?,jW=H.C2=:o$fO+pTu>aFmejQ5.ah&CO@]FJshVr^CO;8NE,@.'jO^cmip's!/MuUk*N;a-=#EW?Xhdb=H"!fd-:<
%6D77rGHcGL#sRB*=])6<I3[OEn8DFs_k.8*KE7>MBbh!)WXX7b'*CEI9-$R`M<)THcS.&WKd^dN)+i)jPJ]$U'G`D09E-Go/,bHn
%:=:@5aJ:sgq@j7$_]<7XO[iIk8[:hN8m3c[?:pQ/#3+'&HC>7P7Y23cLpRcp*0Ke[1iaen81-?1@3hBr;c6QtAUJ27ea[!D^Qb?'
%]dkEHW?!$#]rpctg;?A0R$6[/:nZ7EZ;$Pr"dqq^VmJ9EHm5*t_7<Sf[@ea4r3\L*6AO)bG*:Vfj2&5M5#qSIc`6nj0a[dN(AKDJ
%MbP#J3Buhh3WjgWQ]?3AqVOF-\\uVu@D!4K19)+LqM^KC#@jGd_V_d?pcEpYkY5YP0RTs%mrWe?quND0RQ[@T(q'\IIq'-uR!6T/
%=aeeW<L\,>4Gn7s]`IDF^piL3S+906[>4X6?\&.&mm=5,S]aBpVU?R];.BX@S]CM&X$5jhp`]JgmgWHJCbF4Ar3.gG6"`"0T_RV'
%+)?l!"+E/oXi0sSZ'SLP(BDC[Q.TnNDh@(AVddo)+Rl/g5N%TEX<EQ"r2<I/!e82<fpL8Qef7Kb&c38GD1:+VogV(9rPlYLpR:ck
%BKV>us-\!);+s6(9^lLA2QSjr[(rsK,fM*_`=0DiR)S4f):'(+d<]:G2X^u80E5$j0'7Ot\6+T#P;2]8WsS9VH>E)RhI$=3,;pSl
%Dh&-'la,__J7b%j_M?T/>la?/?b>ts)il.k3Eq@'&ht0L"6bW],I/e8Z?Ue#)1!&"&7`ngU,[j/)8.(AUR+8"A_$*Xq7R,Q<P_%%
%<,F+*S+=32]1)mSDJnqO2u&(GeI+<\:,h`j_o6$?Rgf:Qh96(b-6=F_*q7>`Wg=gg[pJRA>'DLtC>jjiT\.7l(9?JHlOl=&e_>4/
%FC"=1Ng?Hca-tFsnG%,IpWb9BK<BIp]cM(A_l\6b+aS/J*\>>;%lhSRa3pKtWY`Za'D]=Bn*_=q!\_Op^Uh3*/N!'%aRB%Z+4&>D
%r$-V1po@H8Y2d4eYM*eIjS)`Y!?m:PF<kPBUZNC_6L:n')<).M+q`[@`ca)sS(M4WHOZX1J:*R#=fD]8^@om+(Ob"N&mo$I[f@.a
%`*Lt.oITl^4'7#gVo![5WJoQk^gERICY[iLDX6o^8mq]Fa_Y`]r!rb;JmSQ9?M=Aa^5UWiPH?-:<rX$q`e3,a.!MWh7fJsSX-s#Z
%%KLh(pu.]`n@&+Gnlp7aS+@n2h*PJ]0Y/-1LkWgL]2BT/#P'.Z#3$jFGZL3lGCH#IjMkd6J;:mXkJ]L72us[f]"OtDs!H(RJLoY(
%)3u5k"^^F"r<[q]iD1YLDBc0Mbujj6*l@]lmkG;?<4b)(JQEEC-n@M':1,'n9!qlq^oq0>:=YM<r[#9A(5=<m5i7ktJ+J<_7"kX:
%)mISg4Oo,l&Shj@UUm[]*lraSa`L_ldS;0ld!&*kHVeOY-0+F];OQe3SK*(_K;I`1$t,T#ls_gNcNsKWZ4DJ2",g+`S+ObP9'j,Q
%jB$LiRqck$)=VYkB&s5G0WMpbk;rP'*dfN")8ko+Zg\G"YCGJ;kMWfknD/Rp;Cbg!D]d1q.fc/lDUB:Q0GV6f#D'Wj@UQ)&(BbLU
%$5HC\=6I"%oM`7a_ng71%d'mSGXG-nr-r\MoV$65:%2LUR>sD.1Fug`:,SCn_Mjto,`4R6+6&h%G4km2mm1U_DllJ?-S<=&M2.e.
%R.LP-*;F0M$(%PBr$-[\I!']tDXeL'%otUg3s9;EMr+]$7-HLYl2q`O*RpGkK_d@hL=.KMG0MYd#f/erCmA+Z<PVMSO5\.W+"6X*
%j3@8Em-F,O0KT9i=e.p6<nm?:qHtI*L(@l3%7brV`HL6WB%fKLpn\l0jd0MC#30<fD\4Rbe9'l_!3jj<@Eid)+9B_dq=un"L&b%m
%F.,MUI8T"tMaFid]m=2('6+3_VZ1d*J3os?R*EZ=+2u*8!MqU"\,SBIPd%879)"T=pLeWIE5=[On0'fgrX-@?'DgPIo=r8eZhAlt
%s6]c/@$B9:fDOM<j/HQ=RSC_a/$XH85-P("b<q1G&`TXa^P)ed1V%1:&"KD\!Vi9nCYg@h:Mfi2J;5r(Q3-ef162<-J<JCBQ@\]>
%&Qo)2/mtg"$KJB34H8kNkYmgqH]I^"Lqkg\o\6;Y86/d3$_b\;I)t24VZ9rWD_[:r5HhPHZ:/1W3R<lq[7#oZ&^@:YUTYMk[+S&h
%AQ#/i_TJr=>RZ]k9"/348R7]B`c[u_dY(bcdN%,Hpf;;f>Z&oiTfqmRe8'XB8<[L5nb@uXhEbK7'euNrN-[#D1Od'43^g!F(2$\%
%Em*u^NkD$k3HX<,oK9-hh&Q&6@'WTnrpL29g5\\H?CAU.#_2Frj1fkJ!mOd:)[mspL#s,D%Xl1*J+Lq\=BK:e#PCrX'TP3R?P@7+
%[?=@odN=I<IF*A<K<<+9D0l6bof9e8JGq.]>/E)Q@jI`Vd<NXV\h!Mgd_5ZJ\5qQ`HmQmJ?Fa4_-X[9S?:s\R-2/tTAL.iK-'N45
%eS["h8$bc-qrg+.Y6E#:s*2se3s*_AcTmS/14+jW,&?!kTq:W![d#k(D61r)Y!M*M7!^^U'J&9GDdIAS#/0gs$IU6k1[rh(IFMEL
%48d7gGTp(C@C&YMS+EH4C?]GH=J,9Z':V_9#5YD3H4j"a,W)qV]r7`sMI-C'"\&-hPneHs+3Pq*La=aMk#c<e/X&c0`3..%B@!DS
%MCJF8lt>+0K'>PW0Z[:C]*VS.5`Zpl-NNi,B)US^!Ed%MAO!?5"$n^&i=%TeJIi=i'BeB[F:PE<\;YNl>8`D8=gZTr+aGu;ojglM
%"L(Mh-<@qIgIYU,*MUPB-od-Zi4RYIcA]VI\1P^6lk,/jJk#ZP,S+dA._m_GciJ6U@8UPcI.1@,:fp&N/URrrLZ,AslO[DPhc>RM
%!k5U@$"N!7;6!\T]9@Q[E'*V:_sJJJ)1IQQd0R5gGH*"Uk%#Z(e`SCI<gls`)2k.gBEO@CBN-&F/2bl>$-"S&6?EK>\"0&9MN3Bc
%e/e[rO_!p=1R?9tc2)sWHX#4nDnG8/<g,i@*ubN>)`:,AgU.3Ek$SFV'`kX1PKpBSSO(<SZ:7*[i*4AC221S=B&;q&4PC]eZ")L$
%[V3ad--ZX`70c)`%d`=6M`,mCZL-D*p^YY`rjDu[#.BT?*-mD-)@b\&37m=_T%#WfFmCUrMl!M>Beu\@Nqf#.OJnZIG7rH+S7]qS
%)F7Z]B(hn:Gg[QbCGE/"!S!jOE-*e\]t]6.KpD^>AMIq_#n,7q4rVO(N;9oCRUNCU*QnoB;J#GC>)f[InI;]_!4AQ/o"J7T]"*7H
%>5:6g5:Ot*6l<C["2-1cCBV(m^*fQ'1r0rN]`U-I7j;6NXVjTqbm2W3mLlK7Z?ENa:#UHY$S#\L]JO?=oc&k2k;?t9GE;9l]E7^0
%1St5c9b/!rMS_np\S3me[Vn<qV4(M.aL8LLg@R.'F!2Yb`g39o46_77mIlL205]=k[klQ,>PtSS)6"/C<\4od)kn?dGtU#'gGZ.Z
%)SPsNDC:WU>MMcrlRc074qQ1.=.[<>MqrJ`;d$);^tN$d[aD>[orhrm"^AEdSF)>js-(OCU)?kf28*/V+(1CeqLh+2&KBH'(2/Kc
%8'hu?aB<a`8$&OR/BLNbH1TltTnR/hc]erJ>JT](Dq:nPk0o+KZQ;(Z/Sc`4!j%\;/b!<-W!bDn794LQ^gV!J6-rdI*s@Q,Xie;X
%\OM%8M_Wj*VGYQZ1FHk<bab?2HKG@ToodWf>FYudn]7#eOa]3A;I[';gHbGkk;p"#a]KrIJjJar_jOZV%ZuErC)@^_._D=<^*ZH-
%FHg%-&nuXF<1Ut-PBcelc"mSS$48[[22D4a8k,Z=Gi"]C#h,%D>LQIb$T8XlIYir`[rJg_aQ+nABhk=j5`#PoVR=kIB;HjRV-d=K
%aZp)7)nO12_b0;I9K1UE@;Z`dXI@[uKHW;%>GN-0",(qQ@N0_S#:AV_<NN8S8e^oN_`-NsdR0C6"<OMVK(]>U>-(]/HR0^c0^:Zg
%h;e@nk)6HFi^R;$V76&"2k5celWcG&KM+Du</93Jho-h\ol;uKkm<1Z+.V]%eO?Ubeui2UEa<oo$g/SRc_9U%d4/Fl[l`CEqU'b,
%5>_\BM'fhEL+0MX>B.)p5$rtAd81ZC$Ve\32Rdgq@.Vk-`I2FPqg8NB=#nXT5qm>Lh@>fqTs,q8XtH>=(MCiUB\43qZhKC;'j'*N
%$*uKI;?u*=6`<4'$u3!gcN^Qt8,)7cE(^a?_4AWm8oQ`$RghiUd;!Xd]:FZ5Q%M/*XhEXnY<N;1bmRPHDAgYI]2=Sn7aLQtAs_+f
%E.kXKUg%'\$Pj6/i%VM9_^@:l5m9eSme_%0J_I"sXp+_G=i_qrl.>Rsol0Yp)eYb*9M5Girsk@`@?V]h3\tamYs15Ig1Mj\dldiO
%#XW"7)Vdo'f3jns>VIp(h$(9j?ZX&SD@Z`64PL34?8kNnh=KDp1qoGtUS6(cO^g#c-o2Y?l*Xi?lOS`DL][PODbOnE0\N'S0FV4b
%27Vde&>X&[o5(i;s"r%!BK'N\o.lu`i>X%=E;o]?]Q.BN0)0:qr)0OrO"V)%o5%c(J.APS63/4#&gdu5O^=U>+#g3.e3m"4!+hpl
%chq5JU7OT:`)fUpOjMs)B(NF/>o(f-pGaf3#IBlgrjn<3mga]4>7"<)186Go)^6PiTHR1NK@/=&H^\'LHoLOGiHh?hpoPXn6mPb,
%RliFPq%po#nA3<Yj^g&#n_KgcYnsXI:^W#.85"J(]5V-<_3gA:e8"oe.)Gc8@I!='OU=Ai@(m!j=76A$Qs^b(89J>.h'MrM$SXf_
%f8p+d+ghEYfLXnLT3RJ0$&0$84Uc38ZhW69!CF2%Su$ICCu6:-/Z$RNc8KjKG+F77/A@n<bsnY>d".$&bnd"PQY2%_[PL[p9S^L<
%K6C#P)^bo&\Csm'3LF3Afd\r6?b>QOoc;ItlK+Kq%DA@C@*`q.j8:ZTjaqC-J*L`"Qj:Rr\b_OqgPb500]SY'LZ@L_q'(23cEfS*
%]ZJ,!fJ?ONS.7A`mdu@3d,uQb@*\p1p>#]%HYA,Z8AS9Xo3bT851eEWC4qb$R>J>P)tmZCYbs0b5E]p"]Zki$Si`QU*LHurH+:FG
%gW6J23sB]/]<tMo:\F'GKM[EHQ&hJgM:o5!$/Z7c?&*NkHMLsYO0_1T0TGG0efS04S^T03]!Jnia.B?0%(j>o<!7ta*X6,kCi\"S
%Z01^MJm_eC\P=0YCVYl<8AMm^'OD47Gt:92X(V?4[sQ,Q8*($XH_t-@biN&CY!sfGR-@GEhr6ie_6dTGk%\,a\H0#lh9Z*p^\^&G
%8TrFh/Z-,*IlI])K!-L=4aW>8[/+oci#GG/Sel&;p"RXj98ZO`bTcYgn[qHoVNF$Bh)h0J9*XP=AUJ;#VEK94-J'<KPNt`Z?sYOJ
%PN9.[p.U5_^J7kn0#2iqBl(Clc`?*sfB;NHk^ktT;p<9V[Hj?#IpVhPS3-HBQq-W#J9h)L);\oM03tgF43)a):"Pqg.BHMo6$MZu
%rn1#XA'aN7mV4HUIe'Iio^hm)\pR^B&Je0G1GtQmEfu)=ZY*LGQh>2)6MEqp@"*%OLUCM2PHh$iq"gD]a",W4!bNW=HP2Ws)&6bS
%8jgXjZb&@%KEg?"Dd+,6ZXX%jL"Z>_B40%J&`%Jm>obg:DmeGlKKZdc+pVaN.2>0FR#fHh0_`.?PLT97#0c*V)1)]Wmpo'!AqB%0
%.Br_P-Z"u:l&?gBEZ9=om5<boeR7O.fqi(gcW8*aG>6DTgE]rPQu?L,&.+[FPkd*4pG?eQ.O5&!^1T*Cn_p6TIE=rae:WNMjm>$C
%5:RMi%'/o8[^>IM<'Z&j:2l1eJ#Gm9=_/m.@*^UmD#C?2*VG4^D<t$GU\1rd7G+8aB:B'V;)>\HrHCc,JmkI+kOWNfBQ39be82Vn
%\R@]PK#Uc<S0)!8.d;o`;(j/hPD!gQQ0>S\jGWZ^FoF@_G<Y<:C9qoW%-%Jug$@8bf&lKnV/e9WNG-^[<4HW4^^lRa_2ich'-^O3
%e*@P;f;C"hW(a4eN%.\nWFAnckcBf?UDC;1_SZ/=1+JO8g4:hGI<mR6+1W9^MM7;gF0o(&=Ft<KlHfBOE^i*i,W[5/lhP1\'\EfV
%UCR1VnYbKIp8[u4a0"2`9/c(hGp7D/XH<SFMu5G\'])sSh=7GjknRI,]PkDJ/cU4Cc%D!-Jl)utW:fc#a_KVMW,#1QXiHF?pTrPO
%?l3*rif#<.D<k"kUAP;6;5-mt\UB8a;?./2aE,P4R'YN@kr,R_PpI7^qUQG>qjZ>U#H=pG>bY*-gF'3#Rq8Ao%*H0;;flHM,=Ud?
%pc/>c;snC(hT=';\_H_f?DK8e?HmkUfHl7e1XIfSD)u"j(DGc&Ds1Me/nWH*a7_lcX]7/O4DC(5X73ZV>Z)b&5a@O\[kDU+b14\J
%jUZ*M$adE6[8K4q/B#i+8g40R?7/f8M,\9Dh;J,2r-!CUO3KV@h"0:D-CSkUcSF*gXjdaD<fW"m0-0a==j7^Dh-rcmn::hgm!HFq
%/FoK4oLAJGkV\iGOSbK]S+tPk\,eD#@B2Kg0RN>3pEZ:B&7/`/D!#l%7#i0SD:K3)>0Va,4o/klb)P4>([E*e$h=S4d*]@X>rRX6
%9K<l%-k/GTZ1j)[hmH?;G*O)V<?o/R0@*$^:3c[d]e0tZ7L98Q4?g(2dUtO[*(k+I7tBoOnPg!,Jr]9AYKPY,j&J]g]dp.Z>9[5&
%&?Shk'RH-_nH>ng>9[3MQWK%&$L+)D<<?q':L%$H8855.l/gB7Q#oY%L9Y)3eIgET.d<6)WZ7q76?26><?Jb\q`JZIOYGONHs$*:
%;Uq+V1^eI%6^Q8QS$\&C</qF>E((6@%p<0kin;dh7u%=:B5hS\7Rbif7R&-\dp]bE_gR5W]QBriXP!.HK.N=11p.jGL'nUcc?J.B
%!hJ2%8i-fW@oW"ccqO93/P^jo+-+'L&2[<<5;5j..pOoj>Z=2NF/G*ZHbF)Qg77.a[3DO<9eUS4Ni*ClBQU<BrI@imMt/illYH6a
%eX+ccq6`5"U!_+qp%5T_oAW#9X-Wo$1c%c5fGZhLNNSU#qr;tG";rM\?CRqWpUR]C`G$nehi+1Z)$d4?_rk@^A@]IuOmQ26]nr@D
%jUZ]r<Fr2qFthdR[_?a(>'p93QbPo7`!c%);Y9rsLC6RXa3$4*lX_D_h4-rp\V1SDmMrsA*lN,H5P]QnTH\f^TfIDG`fhA')_FDH
%":khsV?N9-In0<")Rc[%FM'c'69rKX2"iahh.R*0/)FkK[*rICS[ALq&3@C$<YJ<of/HnS"QAJ!>WI-Q;a&Sq"(unL4+/V6Xc7X#
%rF#8(j,1mD?^AkDRQTA?T[?W6LlCfm/96,C?5#PHY/Y'H-$b:T9;VQcg=EW(V&Qh/q#EpS=XeB=]>82'guT'-`spSGHK5.$TXI+R
%dKhn%JOOpqA^8$Af>NaHF&YXUqqolWYblJq^Poe&QGkGTqK@;PLoR:?A)cJ*/HJj-kBgu[kTeY?C-3B<H/5Q8<sN6P)E1h*/Z:=/
%%rW^!W)'PKW!JJCok@3;9,Q3BqYIa[4n\&%*YJL:;r?29,I)61[?K6&@?Tn^0_M!?lIf*g$s1rfYbXH?$0Wc(SGLTf)61J+;G<".
%XDiooPPE+n%TQmR!a4Jb:rkr`[^*abW]!lm<%1^QkmloG:h\M1;HA#S'F\@KHI,5s19p6Y<F6+NrLbBY9JWoSh@(:55IJG.)\lad
%Qo-!PDmKZ\kK8Z,<'edKQE^^=?imLJgR9Yq:EO`M(@-eqo]`2q5Fm[b[[!QZH3^f)6JR)'$F)3j>([n?$Q8/fWsf,jADfFRrg:[T
%bND,nZ<XaH<Fs8\<<c6mB"L*PT@-#jG*>CUHp:H()9-F')XGFaN%2/&o)VkfYQVT*lM._@F,;BY7AGYgXb>7\Q>5RI#?pBCb<2(?
%XeQ?-YjH'5mVZoN2H'Z;05OSt/6h/rpYs-e;XFotj"1]HppX4+.6t2F^[/HifIEe&H-ln^0`EuAY+o_=_PU#")k1[&f4J6smR5u4
%2l8!>??Us-d%ZVPHek&g0d[\pAM`/0'NK<(!i'YG[;IrlPASnu5o(BGKKQ$Ki/OJV/I$QjL0IDkLRs3eDKS?19ddm1iQ")MV&]sH
%OSi6npf[WR%`b'd&6*P\P*$aom7`VaV`-gOW"Sh`R[G_Y,>KoC9b&4N%iJb"/B)_%,*T#W<cGt^VRB59a)oB-?\0RGfGGcuY_(((
%H%qqU`'ffl\af"@?lelcV?OW[/k4aRQlcUej5qu.o+9eF+1g9)AU^RmUmhIP+jfC?@3_an;@GN'>,Te#+liFaV=c9k!XXtPF8GKf
%=6\.(Ql=Kt$..^+91K/GKXC8L\DpUBEjAi^0\?PB$@O_*R`>"0Y]U\TN2e<N$i`,:S\h8&[Xo%RpGAd7fA(*F(J7bZTG:dS.KA<m
%cq'hWL.f/9O;og$/ehEY8Ke)L"8&_k@bHp@:^@ADBH74?hb<a<;i2M+f$dg#na41(UOM@QZDA^qnd_BNn.U;=)HWd%G;CM.l93:u
%L9^D0pY?)mP4r)DW6uc-OkKe37HcNP7?s8QdK`a>KT)j,eHl"hKFC-IUfW:VK!a#/"ifP'4bI9TJ]]LcSS.4Do1>E$Xf^'ja.fg$
%P55ID"_>LA5^aO`+?1SH<;"/S;$B=h*/et&W%td6&>:S!nlX)6+5!8Z'qaX,\aC/3>5!&cS->j;ga+Z?5ecdH1F%nITln::"\7A5
%aOU*@+ph.3ijMV,bWiHtlkTe4eIgE,c.?tn`PXr*.k$EC(#RBeR#J+Xf[_Hb9Np#))_Fmnh9h%Z^bF&DkFAlEW2H3?)j!1g(50\7
%9i+>o13]-'O?BjM5g5>^`LW_@`h>arb,\$"PFgOE0UTEZc_#*'VrT,]@mkp'"@PO45IQTpo"qL0R)$?[-IDAHd"*X\[*LKN]at>h
%q!;_adX0fVcZIH+E^Q1k]hNG/U:dt[:Vt-M`g>mD.6,G-5Ecd]O9Aha1S$sq+`Gl^@[je>-W,+k2*+cOgR[uRMdlJFr-5)_cH2So
%)js#=dT:p+GK9&n$G,f2?AJ6/!mC8GMmKZVJTDbPdKQSC^iKAUIhAF5`C3I]ZMkX0!\R>XVqG1IJDPaQ$W6PP!i!3M1]J/'ij_a%
%%M5tV:4O*]%M5(KSRPSNLT!PW36W1:j$q<1Z;27!4G@1<ql+h^(UBAM85EI(<*iQ,6_$jS`X89b<Xj/k-n2U[geK2](,_jkHZd/4
%kRob-O4i$pp"@8E8FA-Tj+4UtkW7BJ]8>`,;,$@$\m-TUR8G'R[T:fObFMS(\RWTM[MfaXPjm)^g'.Okh'K(C#%H3;C1g`De=Te7
%\03i9r_sjTe.jDt03c[np6jX.8bC_oUDQACfoq"oCI*A0*SU%'j(,JQ-d[!1Hu"2(MO'<r@^#g[ne!E=($-8\KIRY+2um_Ycnton
%Th<aL.,,[j3^*;*+5$OJJV'geHErGG-o\*!D&T_,PDt_!ZDt"_<X;]:Bs/AFlh"`#&blqsXJ'BgO+9u7T1meuMOpnM#Q9JF'4\Re
%$_-o[pjXsTo)*tli"D\t_jqh%?.?G_fMFiVrnWk5!S-CORfjXnE#pqd3+#c+D)ES(-i(U,BPqhZ+L%=__msK5oGjU%1p>"3Q8GBI
%*$Z-.Y,n4&(rqd-/s:a,G%dqiYT7)!EI>^<f#]aUF314d/6Teh5-[*i347PQ1_Eo_#ZRV]-D-Z;Ot=.$=!-8c1nRl&jGnu'$m2^X
%V^5+[em&?V>-ae/H^^Gn!IK1IrnSZf+aH@.T3+J-^F0*%$8!3=d%[9l+7b91L!>=<Ht"&gUqR(9\VU;i[O@k=N>mAW79P,f[s$_'
%5-Z<Je1jeLo8*L&-Pn2"<,WfLkl?TM3@O&(!u_O39$$d?(XT,1(-8f1Po=IlHgXLWd8R$X`H#4FHEiI7*7U-CeTqasdi'>\HS7:r
%e!chbC5j1$<A.5/5K@XPjb:H&Fu*cpd`'24TN#g<,(UqGnP'WnkT^Dhl;S8^;-#rngD?gbm18Qfar<ouLW9M/,9Lj>HVI%%DYm(%
%=om)m;pNL%c+*AF*MSk^#8\?MF4F0fZhNJ-Y]3P1'LJ*/E9`m<$E:=i9EMA!B$9%+Vh8?AYsKN:UD+i)_,U^1rJfZ(5SXJ,!#s0P
%%>1/HJ8-?s9*%X=-id@O3A:kZ6585m\idi;OnF]ATP1FUi5Xr)4u8Hk[=rEcJ!"$PZ3ZK^"._8B37sBq8L(+79#+4C3F=Xm:Ui:4
%rYJ9r0F$?5rj<^=KHF0F'a[:k&&7M"AP#=g-!]a#7$P,;#a`0W.aGL\=)]`i3D.Gml3H&-9Lo%>S,!I^Pm\\]+t,p(Ck5bj?3QdA
%gf-Xa;rQ/%OaGoV<f&OH>4R<Xpu6)fg!_>CQX0TM,^(6bQ.'lsShu=b3+C3:5OO]iS49Kh[']/FSj\@YpbmKbbZ?)>:d05b9ro>#
%/7T;TnOHS$"Y>9uf)NQ-%h&Qrnsq6nNBRah^/;_nhO$K*KL#V]J;S"8"G6aUKZ7d1"T^D%O,%'r0^\g5>oj$s$sZ0%9;>:OG4ds$
%2a12Ld(pI4e_khVSu:0DXK!tE^:^Js_:d(<V_8\t(@*/rfSts/.Y=%*=DST/VYjb?OVd7q^D5S*IX"nc+-k<\J"aQEe$:EL;QaR2
%a:/PFn\As4DLoQ9*gj'1;_DY`GI/X_?j&:f;Hj7g)e3Od,@D7or;I`mYU=RZ62VqtN=RS8M5G6Rj5EGOVWtpA[(N;,DhOnnK/2K&
%?W:E8(*H8n\$e]u#$b3o6SOU/_P=BkqKHIkB]XJ\=W8LAXGWb,BMu1C-eT9p8A.sjSh=n%,;nEDbRa=SG\nd-;O/"*j/>-s4J`V$
%n!,4#o".u:)":e:kE@+mSsfd1\[fu7+H%?M$Sm1'\hr>*Z9u5_i43oW"*/I[#"d1OLdcAo_"/>6<fGX3)kgUPS4'Y%"IuC4".!qC
%^r$f=:R88Y1eX/)@_hk(N0"ST)@!j(dg-7fTPVF@ogVIXK3nhq?Xe\9T-?XhAA`Hi_s_$tZH%r3#!@h`RsTBB_hGN*;dI2eJG5nn
%/fbeuOHfnrq6!=TO]tdq@g_=%:sGM:d['4iXpBXX<_U6S>VTe%Gj7ZG&:j(fiFh#95B*TV0isKB?5VWTFcfQjB6(cMZb'[CDH%+t
%`Lm9m92>VOOUN=:U`G:#S/=UN28P76bi8jtZueQb,@UbP2k(8]]u,1Z1m%.K[GHG-Ar7PPI;,B[Q\WHVc)@C>@d!:.lFXVYmZ[0M
%Za#'sH#0XM=EOjf=dU;0g7eq"/`/Op72;SD)#UE45\c4O@.&IeYXNhH:URKC[I]s<G=;MA)Tack\1"2:/;$SX&\&*d?3Zb>.e.C>
%X'53:qVt^qb`H'%=#fci'7moi<?s?<=H9b<SlMcP4maYEZV^g6\LC4+*ocGN8Pj&KE8\ZRKIS!.9*3sIiY)>!ap)>4l=l#Q)>V6>
%iVAE%eWCs>N[%&WAY+@VMJaZ#F^kCfET&3A\0MSH!mNs>cnH7"aJpd,Kk-J+VW5a^]cZG'KgFj1GSjj]T40RT`2Io[=WN`-O@_:^
%ohp.B'k]&MY:Bcq-?2-gZ56<uO<>P#FAE.&orh8l[4$+,E;l'%*T*1SZ2$kOX.<d-9!@#CXn5d\N.UL8Y#pK<@;o,L&A*a+!h>9P
%l_S9,@of1L-f<F<fur0:q!IWFWEqa%jL0`JBDKA$p\f4Rk-brD$0aMd62(n6[hDRFYd\8QgN$hj>Z[DX1pkTI2tfF.m91qV]?1W<
%$FQa<e!F^0U\f.7R)RZ&U/=K@]bHio*Zs'Tkqa;>%OF'`,;:bkZsL**D2aTa=5ct-%sjW_[^souK/`4i'&hN-TSUn@9:a>?%[)E_
%\@N`@n)iAN]$ZUP5CN1QW0A75GqRZ0S/:5ud(6AKA$`l:Acn]$+W:_=#JhlY%MPB8b>ltB&[J<;XjS]n\a+:$e4Z$PJS.asX-=*J
%7u=:<@:.@h)hM(!\G#S-kpkq`#]A(j<B:TW;-B`]DMcRn<r2(2Qdf%2[5i)lGB=\W,$A]l(Dm?hdF!`EN\#KZh*erD(fQrIPhLF,
%QjsNB=k]!^\A0d0AL''83h;Trb?d#oc16nM_PNH1WL#7fE7O1aFR"RX7F4m]E8Atdkel<g-%^TVF!t<]\\;sQ?l1^eI&C"EPYkTS
%B$[oCYH+^iP1M+*q4-^N1J8//)EWN`>!KU(]e>NP=Z%<6a^NG7<$/Y[q`Kdkf%<%6ZMN]3kX\`iQfFMT:ER$0TiERt9"NfH+[aWe
%Q1(*Y,2XtqPLDJh,k+YW?[4'Ol['d*>p(lc/BZ3RrjggsXejQk0.XAsWd9N,.aCr4$D"P<lZduMHeH:"4`/nd+Ei"+UtU:U\0ba6
%S)$"4T!e;Y3P8k@maC[h'=BQ^_EI5cUa&Z:CagLk"365`e<"5!.`;l@-p[Z1E`JGn?*rHNJliuiFuAuV<3.!m^odr.no0e[V%fR1
%P-YGR\!!d'`J7Y\V>X.4ML_BQSb_1)49DEHd7Xg2=lRGT<VrmdlHe!"L`P<$9hp,n*@h+8QZ\tbK4Garlj>"b=0B*6??QmdKmaKd
%p459U_6>Q)mNp&'31"6Ycs\?M:#p,S,!qPA:6XI-j9\hd84`#kOX2;.7si1NHO5^)5;K/WDH.sGKp9RP6.G+XU4#6]PS'DSM!Nea
%ij.4Q6%-6.mL"?'bJ(c!PZ/o;V\e8?TAqth`1J!'qU)Mp8Ng%\Qu[FOd3k)kre>Mel.A10++])bo3(clMiT\eQ!,1iQ(0;<hooA_
%:+*;XWpiJF.Z(J;8$ZD1;;2%X3]=e)Mi5bZJ![b3T4Ohpreaef^a^\9*#,oZUot_lr&9)\(1gI<]IHQcb=l`cLY^9-Al"3!cSB4+
%N^6J4-g/ZuT^p:O`49$iAY??X>pH!q"_Pj`ScVM8%u#*-0<?VIP!.T*<>6Ri"\Y'"i&!(0m(fct8#Om54'-1h8LZ].(nrcINPs?H
%.Z3GKioP]"&OC4:d_c#VI9s)U2R"P0<HHHl4T[7"A0#9/=B]U!:dpmiY#dVgKW1.\e<sFh?,G^l"WLukl$#qT`P0R<7rjV5*W"qc
%!S:KL4b2M-h&S#+N'F*E>*M^\X],,@&o/+&[$8Z"$!SL*>q1\Pp";+pOfD"')HEM'Q1A>sTLu9-@6KV@A^s7LBnKh#X4B<sQ'h:?
%0:Gk>K>aqtglqjb"=^P8I0=M0\Yit5@LH0$e<R"c>YnglWb[*]X4n?h[eaE>:aLk7e',E]6^:F.OCSNGo?S#Kbjl$e5a>V+#=-h7
%Mdf@lNXD<kTVaR31hN9pf3E#R[IaH^P+^>P9f_n$=nG)Ie6So:)nc=70MtM<1j5!_As"MF8om3I33pH&U@#U1_tL0CVa-C3=cXhn
%j,IJd%c)YGX@:;<H"p^'ccuef;/%s#[!,6kbRk,8U$Q#CAM%KfFJ"1WE,H?V!`E:`lqYqi*1kmlc_&dC2JOLF+4NjWHrG9-RDrX^
%4l;WY6poT@T"?8E:->,D/Z3Ll%GCCN/t?DPB4X@rM=8Aq*.E8sg9-cGDCoBkkKK'/mrDWRH4Q3`8t2$7_gYf^HWaYS"dDJ9IGN]/
%*Y5=%s)N1sRoZ9iR+-R-YhRX*e2KU`\I'R$HAjTe,,0'bn!ppf_+BmpB]u`/)"O]=Sc-aZFqciKo8I[fVbrJU1S]E40&ZN#"/qj-
%mGV[\n[Y604DW5m,A]a2IR+,,YId\;\#hZLUALpOb!)Faiq61JhF$:P.Ki7c57.1F3^Ek0Cu[T>qesP@ZAa6O"d5_7d81`u5DRJI
%W0dm.Vng>X?YpbHBll9idjT]7jflgrnU`5:D+8XlT^@n?;kH?OUCWO2fKhG=R7F5S#79[0Y"F1*g[q;'Gj![F\u@PdZ&^U2bYVc5
%Wh!^V7c:E")tbrO\g]GB>[moSOG,_IX-W&G(j3,eRX<0D1d`PY1!1G&R@HDTm>,*9E4lX?9TaG@:mSObn\eFI)3_"/-kccAfMq-d
%Ta^I*cAHTgK4A=5&$<#bTY.<i7cC1)#>5d_43#"@$N<5"iWMr\^(l`7?0^d4T]m6a=)0]ZcGVBQ^/U]QM,%gB@A8A:k?\L/P>[ji
%!nq7bZ8d*MW7mns.Q^-a`S:C!0i/]=51H2m&RE+Wi?;i)T#AqkZtiBn,Q*^XZ=GpR9c2,urh[[Q,.]m@37#i%qBJ'9H;9TrA:>Ae
%gKt%m@o&kf,3'iX)tJR+dG7Q5q<KmWQ__#_Pr$kmglU*M>5hR4Tbl?%3QX.b)BXO*!.j4Q_]&'i)k(1TV5?;RHK<KB#saCGg%VUC
%/tAj.#9;p/\I)_DA=<n5A2\n]"WPCfF1b`--PlonF%i_$oMZ/#DFtfJZlEqn.V[u$?+%g/A176%DtX:eFO8DU-^HT"AlA;hWCg4*
%*UY.$?V?(LGDE_B;S@$kD6n<R'_"-Q+7K<<ar*t&F>'PRXp#)5?/jf4AcNiWJRK[8AcC%L*-@Uc)VeF?$\(q,]<.^+a>E'9#tUpR
%j.Xh\_G`l;BCd-diTtNj6](0o#A6B189J%b`Y9MuNA6lVI(2)sFr:"HX8i@q$%MF6n8C*M/-GYn^G)l>Fd>>k,4^^(/-G+Z:n#?F
%(_cs``c<1=bal+6A(BflfA=h4#R5pPc6m,E'%uS/\f8INY1\(^HP5chQ=`3o(i6L'/.!aj>Vj@<"dOBHE3k6X.dO"h4XjW4Br/(t
%>G)sBK#mtnZ5VLX]*+8riEaBd_u7T31@3H4-S:dFmAdR#,egGWO"h),f*GKEQKY]/bD47]CR4[:qV.HEeQtk'1<U=K(e-]R#p'Rf
%&,,N+FPK:![W$:B^<Pe7GLSiIZ[!\'*5a?-`oC?rb"='0108?;M]MJ1Cj@4/&jbmH/l0Xr@_-c/_GhS)BOKcEWX/u7VJ;Y_Bc3O4
%<sc:i#Y8)fF"#MRTE+KYqUQ2d%O5V92ie2q@G.?uP)sLVJ6*R]_@gZmTO;YE(2ujeW2C0k;daQc-mQJ`aAX6T:UopR(mZLR7_WkG
%T_!4oT\`hl6U*e5N/2Tm&+/$3^+:>:(b`X*>`e[J`1E$3Y!6,+W9gquO#pu/Pl,W>mKCgE)E)e,XLbrsfA;lArNC;.g#d/c6k3A^
%SL!c^5W.!cDgYq14[CT]N(Cj-Uu('!o*GU)J,i4>7khHpNVZp#q$;M;ae.t8H.8g;J"lu*d8IZQDri[\\Kcm*S_;haL#?O:Zal"\
%8N.sDBQMef&\&>c=^lGRA=@=XD_nAUZDu2dmd9eLC#-bDdRk;#D!i'1M3nFEh@YH$;caAM5[$q7>M,Z=po"RQ&3u.rbs&b45)QKS
%BS#`9o44jfe5sEW7O"J1,(<t#r::TGHFhTF])2h.P<q,!$5<Z00rlc3L@L[CADGO>R9f]k-]<T^m:^)*60&:UdSO)m)(T6kZIY$N
%3uArEBBD=lhoCXh0FVjig@'0^2*YIkX/LtbE-4r#q+4b<#D>PFMZYiX!H.8m[]k:?r'"g5E7s`?_l/H9DI9eWlI7m7>sMSsrCo59
%qQtR%RAZ-?_fMX1))hVTmHVktV.SoWl1E[F1UmLHn+;3Nq0T$+HakUO]#`h+'oA:fEk^b9*;c3uZ9lb]Zl?J+r337;69"bWo%o$a
%g+Mk@kVQQE%YZgm<\M4)c7,d3HP84]i(N-]BiQ\PLSnc@HR@91TsZgSI401VDe00?BHkq/p%\iZR@`P.*1=Y-,s*$[Jcq*'X7^ed
%Go=`KG+R^7[-U@E\OWX]r[UM>Hl/sMreMS^(dhEih$[K7G].AlU'$`QBemidP^k-3/+>2u)?dS9J$@K8%-&I$:oE>)G(5"CJiS6I
%Q^-'><?#6f5q>;=Q!=U$3#`M/X"e[`aDOg7guLduW-Jp08hnYKm,fJ]e1E04kmB=f\[-JDmEe&5AN[(,=]BiD'H#A=R?)A5ef:uj
%k3eVm)_A-gBJ6O@,"Yp".Xif\`leV.Xj(_=-")],ia)f]FM.<MMV`Fc"X,Vd"F!@[?br;RcZ3uk9n!:jcZA2UjL>_E:\_t'E2WS3
%K-0nsU_u<+mZd-tnDbr9hp&Xh"CKhsJ(QA4+7I3Qo_$\:l-$ENSX8/rr*fFG`Gk2;&3gG5Ep^d#m6hKo_cF'M=$"8Ual$pB'YWP0
%au^]sYsNaaYpq>tL-VW2a%(;Xq@#lS6cfdKKpapldU=f#!0XY>-hf+a<,YKGC?];If]l3r$spMl8q^hQJi(>;S^"eWP(IWiHkW4)
%i_U`?d8(k_1b.V,DOudZ%d+"@K\I-S?!`H/B%aNNrPGdQ+<q>41@^@;cVhAU9#e$>_m[DonDF>62KEo3mR@\T2]2]$3F*q>n\$$r
%/WlHS-<R+obHq-sl';T(:o::X%YZ]_#9B/3Ub!+qeHuPYVBMkE[)u++p4O^VB`tL/m:_c,9*BuH<b\=,cVKn/&i3/hfGZiWVT@+@
%SS4KaBVulISi`Q6$#/"Lg**HXO_K'0pB]AWGAHep'Ju$#:-71T59:]-$"GVbVV-'U%[jH+e*3[e?$P?*6)j1\UUAV%j,[b)ZMB'E
%UOKR3E&epJ6*FYdCEq/ED=AJZJHeEDh/pF.h?c4`$GN^8I<fGSn0i;,o1mY?3r/N6:BKbfE?bfm5%d&G.+^DA]Y\.T:l<M".X$qd
%'2"!:!jhaE(#.nSrQqS3r?fHEg=l`!cJi#)dI49lnap8534'm1h_-"mC9S[]A'4(0lDjd9S@5dlX/*pb]J:KGO<JCpb'2<SVNlXI
%f9CL\eNE>8APt!:Dej(YjW:=Qr8B7E8r':[lKKRA+I/Y/.W;9#+PgJu<bqYi3/Cir%&k+6\W3-.<Y6HM?$)OU:qoh]L;?IO_L&0p
%]mn\nJs"Zi,rFT^oQGZL0"Kd7Ptap-TZ.r^U,2K0qSWt:np]U%Ua>FV'8riLl^P]f;'ISmD?qGaFcDS#,^idH4-1B&1OG5-4R>7^
%A82p"#EiB`M.O7"NGE8TL,r\<*<p`"^@;/+2bSll%S=8+WF/]Id>9>]6iW%2?g(T@.4*[g#$e_Ca_4\P%['q6beIA#PZl$,X7D"b
%ElF>oP*ItbDmKZ\?Z*P3Q8`om8NB;+g.bQ;mt)aCS&eH<Bh,,MW.P@[&65U<!+&JJRI+ZXMAZlAQ<GBL$];;W(1\3q<HJSRpB9Wf
%&tKDfi1a(GOXN3&8tL+0M4@o/)9RM?"Yu<b(5G%?C%iS(/kM@`EE8<2ZW&2?<_3YVALYA1h,\a(B%_Z8FAg4-s#8D!5Ke.X`@\de
%a9(J'-pK.a9I]AVT,8;#V)bThjuo$jZV2b/6)WCX7Pn$Wb_0Fj/3li_O^*[-?]r5&=[mrNqI!Etd_2;o9DOUHaRRI!6l3r&?SJQG
%)3TN)9%I\c2R+7Y94fVOoOd;:PElJ0"=O.+je`#.37^L:D2jVlDXJ2PoIij=!:3"?@H91L_.c#j_fQ&p)+I4(Rtr$L.l0o@QucRS
%a;G;o5)bl0l3*X!3NB0U[Qm]nSZ'o>I_TkreW&W>_-t9,.&<E8@Z;=NW3WI$VSWeE&8R2'H-.;]SCr2?^T7\M>]_`%Pi+Xj!s@F7
%n]oj=I0^kD1r@@3p-@r.Bl2@0)Gs1/(=^a^mP`*%FM=GgJe8.d]J4fokh-s_&6aahh7Msj(f/QCAuJU*2\esVG\OZNWXPIc8r$+M
%W]o6E8`@a8O&1O^/:9u.0Zl5*/Q[)rE`?JZJ@53;&kJ1(%>3^bIG>khXd-d_;hra%"UM?ui_42bI;0.SMbjs_<1181AQ62qFZ;88
%;ao6b49C&5O`s*"oQZbF$I>Y+MbLD0JR,*rgur`F<GC#ubQ5a%q>IC&WEImE%6_tQLYGF0g9CS/C$D&4nr9th-jNgj:l)G<FaomA
%o53-O[F>?H?":1QM;-l]6nR$q=`.q\YQe3&2\rY1dMlu$&+"aYJr`KI)>W]&bFj!HEgPs1RrOXXcY[Ejn*o,`3R^Q$In7AJ?E2=1
%/faNW+T7JpN>a(2_?N]k.UI_h8_QksVf@P\kKIe:)+W/Z`UV!P.5[5:4ASZZZ;BB.8Gnis.Etc$s"c(JXC<Ar9!ar",rB/]GH%e3
%]hr\6p(T"OT)i6$3qE:fAa5t_EF:F^]=N]]9!k-Zh$mLIk/T8Z2:uT0L+(+a7A]uB,)Eq(FO&[nmWKX'Ch`=7HPnm*#^n_@!8/r+
%?;ks1W$0l+`rMGSf3/$slCcU:XN@U4I,cIilX[=YrtXZ$lUYMQ/K1h\eW\6ud%,O6&!0K/G-4)6i\:pFPW,BHP*KY>$D`cqW$-J1
%Y5n7,l4pYb:1+q82]`fo4/kWGS,,mgW%nZ!o6E:Al"TcUg@uD[+UKEbhpW[/8op1-76`[i(tWK\,c"Si+8\3N.e$?]-QPu[A14fu
%[UDm0Z2b!,UnrslHPItV/U=ufe`7S?1$cE]=GpY:P&#e-Simg[U?Ha/p3Ttih-D_!if,]VE<1gB?H_AlTo9<mEL`[8L=-=E>3rlA
%V`aM"mUckR/XjF4Llt6<-&;h$#04SISdBBrW$hhp.Gbm*:39C[pH0fT9&L[7]\aQDG]>02bQUW:!`ad@H4'_(ef,/n[Sh6>fh`UK
%WhsBmk!N-I*NIWG."n]3?Vgo\Tm0S5Pu'Su\<583I6e6-#KD`VgiC,*3d#&@ELe,FF6%[)V'X$iWW#50+0KamU`g)M*9Za"3G<'G
%LfP#+7cr[?A_`$n$G4M,E4Tge6k*;)K$1f'IE\h2>8*6TZk#FR;]7*!3Qs@I:'>Yk\F>lmj=FI2,hL6i6_e1/0FVZPZ/j$ERbJN[
%>;%VB[!ZZ0MBte*(SS-rdelYJdn(9[Ln^kVR9Xu3ei">8eAG`AglS3UZf+!BGtQZ=*sr>JJB<N:#\G%Yopa`j#LILuokTH4HV2kt
%%O.NM\1Ba\[Kl,-3S\PjAf.d8&a\BY4Vs\KUEQR'qj[11eU`>LaHF0@9O;q?NX#LRmo4Aeqe\NC4tsq.G`?tKHsi,=:#mXAWf@uN
%@$$?sP_0/_?"Mg%M;2BeAS+j5iK>KSi0`kUs.!aRG0V^CWg]@<BTmt#BeCNn2l(iC&tle6Z0n9GSEW5Y_?MS-$0TJ5r$`q^q\%h:
%H95)8?PF.B`Jt!aX9/;_3h:@*#:^D20=l07m:=3:Ii9l%?i6@>f_%k-R5)Z,b5hD01\%)*1%c5HN*md.,,s/tI\-s$#R6&ZA_4p9
%B*SR'(ap=?Laqpk3.&5"j=G;S+rG,'@?<7^Z?U'O[t`#7+l#E>\W*d%S$\Yh_[&,#)[hnJ]>"*5<E<7#a*2t'5Q!1Fle=^/Vr_5r
%C/qaqY$1-[(N/s(gbeY.F3_(o7AhG:VC*0ugKKTd^.r*@,D"%;b2G/kqGY`J)lJIs#=n:s0&8ojj!AMP)@=U,\)H_!J$`hZi2@!M
%JfA'tJ2qQ^=mW)JA)3i;G&9=!6^`fsZmRW(0&Ykg2X?hn]U-[=djk[&@8BrU;^K/'=CW9?:Q`)]1i#ZpF""AhSDVGtL1"t!gAa,&
%GT[jY7/E>q61;nhW?AUSH`CImI42EIUk#J@Omb`H&I`OeAYf"RTZ9E"`QpZ4f<&n9$#[CUlX,C9]ROld.H"1CRlRsg9BL-%?B>(S
%`%'`@^.-%U9r_m=qVuAJ6aSi'n/SEO@\C$)P#VYMS^ppP,sSA`VeP/1=\P^O3E#;S!WLM!jVq,WM&o^_SOS2$0.^-E6sfMhn9mQO
%++YMfn"8QQc)$0X8A,E/jWb1kHM=<undu97p$N@^h`TVnGCP;Gk)iWV1KldY(ZlmG\XRh+gfOhg-MB?A.p%C^Ht#1,]BbQ'B/XtD
%XgOQr8Qf&+GOW'$X!G0O)7DE#aYdV<VGSOgpSiRX(TSc5jfh13=EP7/&3pWnh-4&Q^>k`]?Wc9m(pC,l/MRmcb)5tJV8/[pFE`uG
%&ccDXU)EHH])l@XJpLfOmSuIqI>oRR6C-;IPfU'!Gk`/Yll_*(_;I(Jep58mX&.L2?<dVcS'kIM"8lkdqc]TB+:N-?hD?T*?,3:D
%+j6$q<IquQlM&Fmg?Cace8Rd["MPakI"4l72\)T4g:;X^G%n/:Bb#jVHL5WsO/i!"m_o@m(=+1ZS-5?fh.6nZ>qCa<0!Aa)??B(t
%b<ibIK^2\b@_0n]EiF*GD`Z&KO_pY<>Y8QWCtr^gJ2[6s$MMo*Ie\V?JM4iG_khT+[*&W]`f3Vj4dqu""8#ORbmKm(,#d8:St66N
%f%pmj`83JRLVd[s';>E4jqCuj:\-*I8!tnF7WL>7"e@^njn3r)pG1Him:aM%;.e.kF%`.)i#`7Bm5U7FQh'fu&?`/cY?k*3ID4Q6
%(X_=T>l@Yi`X6SOb.hm-)W7du_-02[N.^h@ielrq;;f?`"SGYXVS\\MFc%HCNddXm$Xkl6=m04P)4a0=UFUr7012F8,BPHTBIC)9
%"RW6Y`B8NI%2TapQf1?j%pXE^KU#!fa$bJUrKd7-2e(#T4)42DftG5]8t(FU]o!'70878fq#It5\ZNIHN"KFPWt7<4YC2_22r-he
%8BeufaDns3gc`us"F%FA2>E:E7[h`ri(iON#X=oTn_JRs%'k+hX8QJ=gjHaRCJiVX^SW[1%X26&:\';*M\O(6gI(l]SB8/LGIJ5O
%[Z^U#dUAM7#$8.-kT+kIhYF[AJRJoMS]%P8<#T55NZK:qETo8!3=[>oPgs=(bY*`)GQJ`'?D#=,'X]2bP6J[.K<=S6_r.B'VaPe'
%,Y0/meCi(3+=RSO_)DM,*a]iBn#)4q)O5>Q2p]HhL\$*[_JP.e7^jm9A$bOTnU=p!1sh&5`L-G?hIifn.j\\,fjS)B!aO?ud=&SF
%3G@8[%&@>D2To/n=FBSX$!'X,6n28k]Lo/iB@!U]Q7*a\BC66jZ4uf48dncO*13jkDM]JBf[J7u2b?&;-/B2b@GiV`doiN,8j,Br
%,:&7BA!gD.^t./#<Cb`Kcnq;,0;1q#?:668l6u>\q)!uDV&efH3M(u7H)2=8aHWMAm<,lrO%2Lal+e,aX,aX[O%3t,iC\mP17K.)
%STY^]+-aA1]g-^ZGt2YLX2c;8e%mdKFOZ@p#G0mX^Z=!9h?b*>#/="IBFsgi:%t^W)6VoplIhMJK$KsA7u=:<GCg#Tb.jQr3nT)[
%SG>97\\9u#:R8Z1@f&t/`NYQ=ZIfV%"D7=h/%3d1b0[HFWS63I6G+P**8d_1'h/+j*D[ccF@.;EK5*o'^N:m)_2>04XM1L5b-0'(
%904smHRdHT4^ONd%EOVg605`C37H#7[VK6)8`4+#Uf;6gf$]kq^c3Y$%sPQ\3]%:H:FG*'WT:Ed.79's_V1&`jnESn+41L!2]N2'
%\KY5r`bE^brB`C6o%SG3G(JE@1$u";BQaE!%:W[LT#RQP)5N,h(Bl@027ZAt0JhRDVN-hO_W7S6RX4:mleGoqO=WbG'p'?U1X@2s
%></X5'Hjq7T]@`Qj@5n0R?8l9]@!2HUi4j$/fDeqW6_7-<l:Mh/_DAm847eRi;R1N;X-%KK-LK?5rj,][cSf*hE:-NdPMYVOnZe:
%M2fmnc@[;"g[%5Es81@QFss@C]TT+8HDq:5i`27:X%5<APs/k(nB8#8oVNh3js7!TM@Ed$:]!R^<K@!eN;]l3C7Z@!7/l!5C@HRJ
%9"rh1'I%34num0E"buPFQCX86!jM<maA^"p)pT<Nn<_'g*q)u^GE`pg+m%od2>/'GV$-<b[LDAmQka&=EC16u?/dH*SQ>lAe0$Xr
%HI)tNHeDPBFfj1@9f]D5l6]fF$uV`0Iq'PTJ><2,].!cWl0kf%gn_X7">X!-h4_e_F/K]![Bstfl9sQ^>:--p76:$m?R\E%#7kl]
%YP_]N8at630_0J8/M1O'6U^'lZKH6n<h[4AXJF6Vg!O(tp3^7^kjn<X#KR7DYAH#SK>>6j9a'.eNS6j.QQt'%7ujCp"BlsZatQGD
%Mj?-+[)BmECBO8RFAu8Brpg%p730<W>j%L*7QolU#qW^@e^O?:(d<gBU.s1LLb<G/&a>+f/u"7Hc'm-`UsHfL<H6SYD*("2-9$H7
%&u&%cco60lI:+>ZoTgt^-![U17-gt-5/@sfWL;bFip>"!=u&[`4YVhkHV^4ZfSKB,_94jn;X8F3)8T!S>GdRNlStf)j4b$g\Wqr?
%"R_VRrRn\_9[94Tl>o2%jKPVQYnEA\aNWi^<Si]/VkaedKBRDfP9]dUdBO)OF$]hcpN@U!&L8mSkmA^7q,m_ic(8f=;@(U3qOhFf
%n(MGKI3tg$+q#).p"9TXQ1:I:>s&!if\J,]*X%0o*MearrOXT;NV?OO+EP#!,oRLt+lb`<JK5J/Od_C/=jSid.*Wpar<=ds0U:3`
%T`iD56Sts<0I&jcV+KF,X+J]ac5&e*Qn##YLVPVPV7C^U956Zf*bRj>qPhl[DQ2F&b/ASP.C]:_NpG1#$!D%8I=!d$6KW/m2*oK]
%\^:O#pbB1M]hVh#N`[gi3?oWOen+.&T!_7.SQ'\>V[!`F[tu3QmZbT*WY!qc.R:VI=CS#or9;=?9k9%QFITcL6!JnNStJgYP"#eg
%!/Z<$9:(G%*$`V]D%'^AVB<*B3FKG/06%O(<CQ"Gi]HZJLEGDq[UqsQR$pu9B<DSdgLu@S-<2,pGV>bt\Vm`n^CR0O8h"sXC%S:+
%=o'dRkLRE3)T=[EG)Z!>\t'qhFFFmn(uo7BR[Tn_.Kl:uGX9`@V*\SMaS-a-90l?8F6#T0YGXCTIV5/BQOEK>BrnnVFcJrY#J^=]
%.T%,DTpIH`4:,XhO@[#]J14`KD4G3,fYjU"\rBG_2jTE>]==l(>TM$u*jOgJHR;8#3:qN4lY8Jos5p6=b3MbI\ri\%)=]b/V33h/
%Ik%VDB9H>NobA`NXV66G_/NifP,T[u5"O7%6U)<Com:hdl@-]!fJlpMc0SrCceWQ6M$?L'HM/DL?tOkl5aAB2<)1\]hPeb'=98J:
%Gsus6OS%]TT0UiF%MF?R]ED5bDL.gQ`h.&.[c5BB:Kb693c+,h:<+`rO'.f;iADPBWO\eSZ.r;@lmJ:!\c!"LAKCDh$IgepARp[V
%P9F<^X,sDoOnY(W$KcTcB$n2!."bMa5]f/SB8.%QNMd`ZX;EGSX,#L^4%Z[bpiZI21,p$bC58U["Jt_i]pm3k8II!bN0#kp/sJSC
%-YWW:)8?IST<@[a4b`'ZWis"01oJl*p$i*DGI7.aLAt>1O_0m^>Z=?UG>qa2_2VgWi](9&,_!IH'oF6UYEL"i4Pj"Hk?(<1F&P$;
%9bSGnaYXnB8jo!PT2WD+gd#SgjtboS3Q2+I1Hl'moq?(G.-^L,.IoOK&<6#jZU3">Mc=u5jiGaMY#FH<>ZaY*(,Ym7`F`5@L?.i_
%P?]oE%.37&bN-d_>1!"jEE,WC6%Pb5<BpU7&i*:P5?If@,XD1:ilQmG">P%r1`A'U&t2FkW!4iANF-`/o:"nQbd<lA3`LZ=I&WsG
%PFksSdCSmDK9i8a5Hgk:h1KD[;^N<Hf#_LCPi(O?;4pVg#n#a_)"2sDCII,Fo#pInEh\SWHZ:_*mj>O,"7i*K:[7/,k\e0C?;j!S
%bG2\9hVh0YSd]7-9@Ct-3U'Ycfbd<(9,rV=S&f<0kNBe?lb8#TSu[mQF"U&Bf+udc!h,%YaMmq6.To$D\1%XIXHEap]F3_W2fFJS
%Jl^^_=mRkVeNr+1e0c*"'$!;rQl"M7V$0K113jZJl8kc%-sj^$D8e=e"\CJDEhB.bWVV#&UO>ZJ",1-%P=A$7>cT**rNU>c!:[gW
%^7ER)R,SVbMIu&KflQ!Alq%G:07>!j1A@g3gLZY3GkXZZbPad7#?A)X9cL*-@l:SX\LrtSm<@*DJ9!5%s0Kit\8c&\"7PgW<8.EO
%g3.(75#!:Jjb3(HdonEMs6!'CcS[77%:&4_kd1cQF*j+Qc*g[Ecb=;Leu6K?:1P-<260*4@"0T2U]]s1H@DN..'n+2dCld#%#8kn
%%HQ7<2S@-"cdchQ&:7;:PaS3KS]ClBU,&Q4RH;Qpn?peFUi:WDPZaU!PfS1n1'p=F7pKd"S+S3j]X9M3ka01k=UpRe+j3h6'q!IT
%%,r)r7c4g#+H>cLp8oJTe0hOdd,T[b0L(]a>nL%E:hC^:>V,umYftm?DAo5PK7cdEFtf#YGA`#R2&Eiffqp4WAsmsXJK*<^\`+RK
%2YWX=Zpq4W_=`+"<U[SRO#g,+oSsYFLU)1#]s<<uIs:U6FJRd(%TIU`F8+rNL6A/o]qaU=?E2kmM,h$p9mpN?FB<[JScdYM&349h
%pQ2HAWG&V3aCV4bP%5&>mZIY5$OeY.$5!]LD=5/o,9O`e_<1a#qJRFg"B:a3iEu*34M!B-3NN5@:EZXuV5SpO4BGt<M.2a$R!t]a
%+e6SU\eEP);C,mG$#K$e`rg0QnPpBLJIq0@JUd,p>elc1C)K"4i9rB&_IQs6X2?&`B\l%KN$)CHk&]KYK@<KC,3[iLTTs5?AGVJp
%^cXWl@b#`(N3?<n!1%Vig@+MP%j+mXnI$<@8hr&V:R3]uC(U7G!s/IVb5R9W'`^M7:d9pP$sM?M97Xbh#o$0N&-f2BHs7V[?HBE)
%eB/L7"I3Fi:XXom"WZ=B6l.e=_J:dc!]RLE6;kUSW!])A#DNgJ]\L59]6"fgdGEbc;SYD&??+1t<5hc.cGCsrb"2.N=K6RefMbKG
%VT(9bVbmsAqU-2VVCah\i6jV2I=UWb,[sA+?RFNr+$!\!jk/I4Q5JVO[3Sc.qL3K8V+rkp%tHe=iEm8sn-eUb?NP'RfCDa/m8?.`
%DTpA2Y`(cBo=N:t6]s]$U[I(3ZS,b*l9h6Q7jE^TiA3n9Tu"5#%pU%5]i.G]=-1qTBPp^rTcHX8B"%:SNm*ePh:9qt8HKZN*(OI.
%moZiJb>"+Int[R(E*7M>Xl4;!I38<]SWjP%Gqk=pBCX1F@]^dj`^,]W:<-MMF@VZ5c#[]QI9D"6DWp7M8>rPkl%P,[,=#aNQH1*i
%\YRMf/qer^-s.OJd?o>+]9Q'2FZd"=W7[MmgqmW3m/k3#EU:%bDs45j"eVT%T@jBlWiUh?MooVR3e*;^/;IB]7,9%hf[IKt9k;tc
%b;7tC5RS:rZ97KcF]dl6gAS>0YDKr>ouBJP<W/6Z-oYV[+ZjH,NnM+^i^sOkP%6Tp<Sl:n8<FpgkEF5Q@]*H-.L^Rq#h>O]fa(,Y
%[W^1nQ0Z<Q#/d_#6Tc@qrr,2p2K!TnQ\u;h\e%A.HtuEMaf^uaPH?fknarB;jr4Zf70[e;c#)8_f_kB;Gm#4jUT&jYAV_[]RG3Y]
%)C>CGI*C0AR3nMmlF"JV]_o]WdP#Gp6@5-0r'B^f&WP'/cEb'uogS\Un0FS2e7)<E!r`'cI06Dk]4WQH%!j^-]<)IW[J.agE$N*A
%"ue`l]#!UX%i[MgT&q5P#PTm6>-C/&b2o64;uYJ+B=Nl3'#T]UQd"]"DO7o8>^nJp_fggG)=Uq/HBl]/[7]nMH'i`J8X4R3joac9
%o4Ys&m65DCY<*8!bXZ19LACapDDPYoaZ8s`I,88FY;YhP5q'd,g&(P0=N!^j_W!)X3SVWV^IpZ7g)tI`I!S)"5CTP2++qt^B-%Hp
%9Q[.mOi-6LT&C"m"bpeOc^E8SqRn#!k;J#sp8KeTIARsi]uJg@`/7Kt\?X&1+JcG\Oe^Rs;`)4XDkj/OAkn4"KgFiR!ldifJh0uU
%&pfNDo.:n"`?m5?NLEefn`!k$*WU/OV<CYJ&.BchM:jGie,?fcmM;C,#4>N&$D<#LF2-Q]2o!PF&<N7"i??!7q0J37\6Kn&a2c4<
%F1S]fB-'!$?06M2IN>OJ*+m3>UkRKH]co$$kAR]RUsN/.?pF10J&F*tLTA;O3uZs^?[KKrB+G3#[G1!2q8RWdEg4_K?_ukP4L<R7
%B*7.j]5bj*QZk5%\Ys>NM18cQ$[Z)l+`_[smNR6LQrX[KqqM4#lo^?^qbcCJYaZC$eT+#^8=?L_E)!L4jdk`H%[4Lf^[#=UC!+mp
%].k=%CDcmm,EDh88SeZm$F+uL.o5'O#CPq9Smr#u+VH]<%QaCrPg76@dnT\@AA>8]&^)G[VaE.=3@"kXR>q1<E?YS]G5@Sec*p?.
%>cJAdPS7\kTY]5]kP=g=m@$12IpY]dHUfGg/puP+I[l2=Ni1iQ*cE$Z];o#gpXOQoj$=:?dnul?\u5`RA->n*D<>D5(u?8$J`C'#
%X.0I2Zi&cbqkM(;_@AXI?dA/bd0L8T>Wl;<00C!Gle-R_i%c_%Y?c5,?T1pW^)$MsSSrDBbK^#C,`P%gcL3u9p:r?nQ^q6folq_p
%_e3Wlbi9qk("l#=5FKJ0a>G@>gLP)ri=:6SC\"i=Y(*('&:5TmNogY&8KVs$ZXW[2\H"#s4E6/<9M]AaI^p;$jS*SM5NV@ic9-T$
%P$0@N/g$R_-K.Y$SP+D"Wm''gr1ZF=o$$n3(Yk%:'IsDlht,nl[s>fkPq##IZ?E("LKjStC1/gMfS.5584%,G=DlUu6X4?g@upLJ
%B'Z;ea&Aiha:FFPBF[fCa"QPophZ;1D&p!B*UO5Nk+ad=lYuC<Nm>)23e.6$m%/:[X2cb-gpuUXYK^KKOsO2Y][2U(T/7O4?>f-P
%%h#AMd8mfo*+X.:OFBq(eCfWM_rL[2q;[HW]?pOu[G9Ot">`5U?\9)B:9h4u70FYo1j&=qm-[nXB;+OX^5pLeeYL'Ip0JD?d[M2p
%?9L?3!8a6Mfpt^<f_bS=B`%ZjbobiZ@3VP=[0=$bqUQ3<DXk"?.&+,LIh2jd:oXqb<[%AoV0;5NB6\VS56UH#;MG+i.E<1X(NBH'
%k*jsWB9*Y/+lA?RrG>n'[q_UdFWY,^[bldJ2t^0Mm2sTdEOOY=L=2njjlCup4jJ6A6EdqR3`*0GF8k+X6I7<LaHTn#4j+mO]Uk,m
%!,l[rfP5J;_;8Fon(@M\7jtchhepu^e@FtbE<;]IQ)2GTnD^i_"H.9+>)M0$lmP`c9O`c!'[lfT.1g=!Bo+c<YN<k!e!/Ug4Pup!
%6YF`/N@Q,%hD`T:h0_X4i>t6+r*f&s&)I\bf=OQOb``:^Fn>YFFQ"DARb;QY8j>A%a<KLj2suH$meuL8LH>'%LH3EG?MjRbHZ<8C
%gi?_Y4l9h\rH4pfWjQB$`p]W%g:;N,'OI',;]>Vp.G$1p+r>d#a25)rJ`JHXYD]6#rns>1[qq4ulm-1sIVGR8`"NslE-u"R4H))O
%dDn[9<pK$h2V;h,'BMh>[2m?^AQ=rglf&Ms2ET1#h;-=u0mQ_[(6KrI8Rc>dj\BFVO-/JL+Y;!98<&8n6M!coVEDq[3q(12j6l_8
%V0pe=cQD]_-]>O,jp,\0]+R=i8P.fRA(CIu68k5pi'4^)`GV-V.1EL*.D;FA\Q-DD4iU19fo:%519([3A!2\l3VTrQ\.=R;:pX#'
%a)iX`oA^#to#*h[]dX_79C4g<+4;1FVk\lPj>d+L>DgrAfCqA%%@H]:;%OKjA*$GPWN(HXqot,N%T0IHJb@`a"3'5Y5q)r:Mup-E
%;3QL)r!(gL]N(u]2r?3a\ojUXb@OJ[r!$M\V-S^#:a7OAMOi$D#b`[pY-Ncsq7J*lG5(fh=qH`5T>g6X^/f-c*c]oc:mW9%CT$Vc
%@$`D4l$+'dUB^>''&OYC=ghcP]:3m8VD.)\,R_B!h&Y"pHf/QI(1AopAoe1n]3le+H26ee*O#$!nsk>l1O:."*&g'ijB92^`kKS;
%VRNZc:*=33S'e9YBH!tD:;Vd#)']uf9K+e`RSAXr^0`H;&qaDmdENKM=d_j7^*\B!Jk`%!8Fq7Z07S+nHKF;V?qV^uhqs!.I+DbB
%[C$BfSp,m\r[!fUqn6H9Z$uD_3Ht)iLqUOE"6JQ"#=p2s;EDth?_?K)i7bs6*;%&:3;8!49,$+!-S1?.HRE5EoI?V648SQEm!C)V
%iuZjZb!>tGD&"YVd6=cZ2];IO8_e1.oD>kLDE6-T^;9&Dp8K%50aXf)f$4fWa6C"kU@cUuc_XHR;(d<fhEUIYgl+1SG$`f>#S8p[
%Gu(%Ib"T0cn9R)U4rlaL^B:;qfT8kgNE8[bMDoWIEh0kpOETXtns9>J'il1Q9RJ8P&:2\ES9DDi-i_Im(U]K^%_`itlLX\sn6hb!
%!.jdKi2"m66P=dsBUoCqZWN4#@4#&lN?)$K8pd]W/8pKumf5YoAXd4qk=RtP3n!YORQpe5"!djcXZaQRo^;#rFFSD*<Rme?S^!.(
%D72Kt/D,m4XfP\lrFC*[2iEY:=6(0*8$0$Y3k$C*\aPr6>!)rdSjpPj]sA>jOV,(9+Y3U^F@%Bp9\s9Q_T-Mbs(hc5*])g&M`[3L
%ICrnBmmW7D`_k9`Vb@]FUV^Ek=p6]B#tN.!cY#f1OokQHVGO+*Q5d*c(hh#Q!4\r\Qd!o1":`_<dQc[2Zmc""i_dL<!.UIu<(i;n
%+UBAr+#ScuJD4;he1pJsD\KEC(E@Hr]0L+t_G\/.LEa[PcFX13Gl"OBDQL5ah"K;o[*[^C+,M@sUpAF+/OZf16Q@.bbkQi`FJce/
%mLOMJ9CLedPE%&lK\nc"5CDHKf0>ql/2sRF$b2Io.V^S4"+p(&oi$,=O#EK-Iab4JDXm;'2(dT!j0-Eipu)Z5jK8FV+PYNYRD$VZ
%M-@H</b._V=70k\*TZt*[<gmno6==6]WBWP_;k#6rH11$Re36kE*(nq[:A<"I_MsFJn/'\=qmWJB5o\+G$^q&$?-CM%F3JBk[B-9
%*u+R.US*XSddrCm&be/=/s(gikXfCKd/;itWs]`Gr]LPgWVL_((Dbd1T`(4iXE0F:1dW12"6'0^aYJWqH_bg!A44726d+jFd"[I-
%"3]+UrHKngi=W#'C#%2E@&U)0aP`*ls1Fmf=$\.cmu%h*if94ZX`R3E&%/$3A+]!#8V"MQjC\"jp6j]ggR:mTJq(eCG>_S:iEf#R
%M$p%0>MQP9%E,3MXE">=<*X?."mV1b`=q-)+'5\ih0:^hc7>omPl\&q:tc\*5Jh<O0\gS_i>?-3aRX?7A.*Rl$AM-TQd`%C%PDUX
%OV(R&Zgdsu7_CI$4,BCP'%qN*YHFq/EEXk2-54.]s-07%g_EZa[SDo#<LX2E1?_d!V[rP!n-lRmA@I1g;>*O[/]S6$g>qn7Zb't^
%FAZ2sNgso+*2'9_Q+/eTU!LmN%>KFGKdqFr<iZ7TZ]R`_"jJIs-@1%G)tDC%IPZ0?&NOf*(6YoL;$LmCct5]dLC+W5\VkAr9#"u^
%^0LJ20cm,IYInMjGZX9W(9M_"D)"+MKoc'ub=:*m)d;ZW*eLdPmj9qSpY0;eXOm[rddd]J(-p&U<s5mh#T8NF-+*Su]SdS/`Ht]s
%S1[QLK06>>J1QO^*Gr8Rr/!gjrH+*VSDjA>8#/N_NV=n`8#-SG%jE,Ea?Wj?/rK=35kE66]NGR(D2C`hi9*-smpP@_%bUD<G+jS$
%c[`$ChsPB8Et@AF\B'[-D!QASFE-1*E95MSVN?fP>N5'.l@-(->,Ic$P%VJFjm2[ZSbQbS\h<]*d]l]Ho!D5^TT)4D:A'Z+#7!E-
%Cn4s_b(fJ+(N2U)NmAe@ii>VBe#fLt)d2O341]puP]^ZYgj2oS4U,\)=bTI0$iNS>fWcW/<FPD530`:'Ea(3+F-G4!7=U7!*'/<E
%pf,9)f-\fL_N>C,dCu%ko7.p<P?k,o[LKD\Sl@$4Y.dP!`XR1;:>t>YdK<+dr]9T]"kRsE0f=Dkk"-V9_r/f*'KjCrFK\,jiKLS#
%#cJc.!ici='.N)h"G92t@QS1&'%gCPFiG/#SN@!TP']'kRI)(F@Y,$1ktl>Y9n.h<#'CRf_dV=CGnJIJf`K():!*&[,5F_ToEP1!
%E59R;SG2?rN;lhdRFc(R4+r(:E\ipimrq6T]0^h'>:j*`=!(u-`o*L'>l,s/?bR2-_0KjQNcnft=RZ$YCsq63nW:\848[(.8UGIS
%P8B\blPqu'XeJ0`Ed`F^%UCWdq5:j4<O6ng9cC[Y,J4drO&&j8.!42IVm%Wrj%KQF&T^),P4RIQK&'A9:;G8&X?8K#pX]X24ZR`X
%fX]s)hoB668L)ti0CrM1>`WZsp@rs']cC-8>d8Q]K[/:qN/-Z]jV,l/r7RmfLY-.M3<D]Dm_*_Vh4,K>-g`&I,=4'Oi]F`0pR=-`
%4,24flWSidnYh9_n<-$2p^6-WB=hZDI#NiKNN1cH41<KHF-KK3;lN"I>,dr9c>FDods6[$m$2`9d<]6p4;^1k0knBrhEKW)m=TVZ
%$!];e/"HkuRKMaugS$t!.?R[@_m-%MriuE@V[O54Ao8Yh_q\Lg]dcaP@=kK3.k_g\R),,2,d)Y2HM_jr3O1R_U"09JUl2p]6H#tI
%f&lKNB[C44q#=^XQ[U7,/GjmGfCFD&`;p+c49-ie3'GQEZco-PMK$np?gcg#];dqa-\U_]ce3[$^";h'dW@O8:3BXgYD2J\T#U[P
%2:Hi02EI1CggcSkJR82pH&Q*sa4SO(cfV)CZ,b0lOB!uRN,_MDbtp!iQega=]6JF"LMp=#fJq@NO*R2=[h$s`QEZ7PmDlSa5k2OL
%[AWMr'`>N[9]TD55YC`[>45t\i[heah4#)RQ?B0tkT6Ut@;m4Dk.\aB':G.K`l"$]l85*(cF<BCHT'p)[hdHdG<AP\rg<1Y64$EK
%gXgE0H=tK`D^R:l,#A[=m@Jh?*0W9bBb^%j/SI'&]u6=d]AR;e`'_03<o24^!gEG'O9lrQfPCe\gO"^Fi,*l;(7B2(hp0qlpF'VW
%`+"OsmlIdUd'n[\74]jrhk>7o0QW%=O2k&C4.Y"MVqdM$]bE5o:%*15/bn;ZoM-d"4GIJ99VM1c1^+H=;jE&^l(q^ml'fkX1@Oro
%S%Y4&D$mPP4F``DrJ3mDKM=*\$@[UF5inA3F.@Stmk<E_&$_=?JKJJ.&8M[&.gPp'd6_:D->fcYp_d[GZHi+5d/+n1el)*q21P;h
%06P>"@Vo@uo[5foX>+0sLp`l'F_?Q=e4d,*fAt4#f)A9#pCKEI=IXs"\]!2t0^h,5m0DjG5.M%<lncT6e=FDkCNJiQHh$k$N60o!
%Ibr?_CT3_2mB=K^8$)Xl1]3#b[F>Vik/4_n@dUd@e,3Z,2-m;3XV=Erl'"cO*+ih%KjlbMb=k83DeC;L[uZQCm.0''(shU@h/kp)
%7[k_,;Dr+j/248Es#5JXD=ubKSs/C:8K`Uo2W(4;nM#*+?c2W1KluNdT0faS8e^I&Rm";nb==7GhUfedUQaan'*65tA-PHPDr71!
%bjTbD!MnmS0lQN+,-f?d7/>g9QsgsWSjr23b?m",ib:3rl>JH\3/`'.LQsk8gZ"ET*qi#=gT8N1>H,o"<9JH/9L3Qc0-6Jur17dC
%Gq5<[g6msXD^D5\@_-n3PeC:(EJOd`A"jWJ)SMDi?uaE\R#$\sd5s)k=X:4hIb022j.ZG9SRmr-YLI"ArGMai)72qJf_&%.rt@8;
%/*;"p-/YD?%\V(T4b"7oG-F^hIO2GNd0FOI1jbb(%kngmf9sc*hab^a-^Fq,crRsDb'R<A4KIs%%6>m..h[`I*@%K()dh.6h9l,F
%QDs77jDV=Sj[/uB\P>XYP.BB)<oRf9<*RBH1Q[+&I+-U=E:4>k[nE]qY`MY0M<RS"@usoshVT*mTQ5g3jRtKoU!k=TnfSt;5+`TC
%p\(46Klp*M^4(-4=YZ!qEHq4YECVWD(LB!0C\^Rk2)/Fe*A@W2?=(07:\(J<rN-kkmSts+k]^r"+sH0B6c=#Iaf_2HTP[u,AD1qE
%Vk2-p(Y*J(3kMcZW47HQXo]10_B3,iQBk;Z&lT$Rdhee3HDYd%H$;\gp$sqmbIW's1qSTPqCHU?nq<<:U0bQWHDt%Y,Wq3Nd%S7?
%J`0Lllsr=SGd`g*q"NtC,<hY7``rq@C&jp\&sjm0:4D[_M*^`t0?;cVRd[)D#Pg]f*gL'6q=bS:o$*/W,+fqp9lCAJmBh#WhaGX_
%=I5,-Rql>!ef7_1-;n&2Wo%QlE?.r+$\<90`.EWYRis.N23g-L*g]pR$R6)MFsl"XS#ntaSNL?H4k$sFIGc+s&'PcU.EGC-%/-F0
%Eq=*OL,:rO-'u6pLm&ZC/Uo8NaDrqXL2,lL1EL'Xhum]c&cpLU[F8?\jn:=U=\E)aCMG:p#`[Cm-OGKCHauW>20Ln%Ac>*T]WmYe
%-tilqah6\%.8O7\H%q&QmC,WtT6lGt*7'%]U02$9T/%F0D)aNgdM3%;RQ8W\]m0G=TL(!a,D'*3o`!(`!V.ig[XYe#4HX=A-1YMb
%Rc"!,B5Dahj'fM#2l(Xp']csNi>K*GkfcIocacLf[8PZDT8EJ3QG.J;PrE7GL*#`60T`nTeui`^Ipmd"*1,LTnYMhAe*Y1C.b<qi
%S\D%O1m.=8iDG0'"-LVpc_YMS:>aiG[9s,Wj)QHT?Z/P;otJ82S.6p-Ui;u;?j*Z]>CnMr2<A\pbAQ9<S\*YE=?,A2HtrVTgH.Jp
%m[g9%f%-ioY'N!:[*.f?Au&UU_RUE5ZTP(lr$h@I%/)T<j3RG%>\%-T'OE\),eM^\MU6`s.nQH+bV:8[<SMC-ZT5:d*LY[L8?)[i
%HKL%aab/QIB>k!J=rQghUrT[4Z*jHm*6INu?"7YGg0TonO'>11S3DpreKP0nk?:081?G3!/gDlUro!qT-.^2QY+a%m8BOT-*U&Y3
%VGcK-r2[EB[9N"5/g*WD[M5FLDFiic[3<*Feg19Q"K[/47kg$`s+4lL^YK>A#DpgKOO9fc7?Z35lQOpqNC03LRS*.Y05%_#MASo;
%7\2(k@Vm]CKONT_AueoCUME^AK)#p):69J+rck&`^!F1O-L)WdhhE6),ib3b`*uBe`1"E&(5ng%Tso=g/<A#sBq\hfD-q-m?hM$7
%iFVCPQg<X\`%-SW];d^`fAcqhYf]=TPiI.6]<Y2t4>_fSJloW\N;*Em$"bD*gs[k\0k0$FNnjG)%culaR(gsuH3erjF?O]7I<j0+
%N/]1>IcM_cGTE+K-sr$*\jWWcBF1[b0'h9,[$/+L'9fQ+:Q[anHr7sRSs*][W'!d-&B+dg3G^8@\UpEoo,5I;ltLY[Sl27M^_K=4
%mtuO!'K1qsJ;.>OIF'X,pp/@U:9:"`&r5S74!2`CF[$t-VN$hNQRlb*O/"6\S)u71;e-o?p:#a.@KF`PqKa>Tf(;s6cE(q0V-NXV
%.>@1I<Q]I%=gIC*_LeK3.%qngOrfCJ\El"\X`T_V'Yb[Q-$^7B)V(o<(12]LA5PO/'7RVjZQFolEHo^DB`X6FbJf;:ZQI48#YjhO
%0'234@sRNX9bY"mp[dmkL="/YV<f:3YL^&HLT<%1#>a/CZ*JDOaD83ON`\m[MU6b-aPp]enLSr32%2ETK][F,&0p0HU$\kO+mXLl
%nuDEljQ//XLMSso(6@a+\0EIdmtZtGRL<nA0<+E'p"2HjKB?"jms+[/h\qo_p,QqR)L9g"!W27_0%`B*+DUo&+,WQ'CUEko9&BS3
%7ikqJaF^RY$1DUtnhq9s8>EP2:b?M"]>D$#7$mXU:D7/'pZQOlR#iPRGs!72Bc',-OVi?RWam/-qhJ5b*g;mJG+M.n8\7gaq,rm4
%lJXl'9=B==l"P9:iGJ;-g3HR4CFLhgjn>H;^g4nld!lQP-2CP39=\#Dhe*%k-]6OPH"f](C.oGl8%NaO];LV(0DtWiI#Rg8*H%2B
%5XtZsr-1lK:L@Fh9M[CmJ&f%oXiJYSV2L2:o^DQ5^\*sCZZMbPL^*<^T`cd5mEM`(qIaO?nG;&;o0;^]OPVT1g/Cr%V<Q<K1pV1X
%1DG"=)U"?<AC@_+X\8R,46)qn0Wr6"V[Cre[VPX#iLbjp4D"o=3e&2ko&*7#p\YKAac/7HGeX\drN,oLV[h5NVU(7"!<V;W%kTVZ
%0IKpCi(+CiNutXd)&V^I0ClfK)G_lpEH>X!Ysb=QB;b*MMmXSpM>bW'#ae($Wk1'AI:,--^Dn8)R[>DiJn?X,$99DWPBlJ1KNY8j
%9LmfT_%B5"RFTJ<Ktn&'(&o9GDG^R]ZtUls(%//7h@g-dg_um]b^#3$\Qh%mQ)716CcY/NrN,[Jja]Z1f!t8.A6?o%?GAWB:tt4-
%83BYJqh](Q1\89)QaN:_VXWAmhuHhK%hUJu^)<oFiG.d7PE4h+UM/Do>+e2%Wpd8,QsGCaVBIgG#acPc"g-5_ridh*6[F9h&`"1q
%B_AEjr+$Tgon/s>Z6ij-G0jmW0f0WG5@qAlr@VmMm>64VdhPEXNGQ)SrKNht^?rNR_jb-"oc)J3f\RtOZ?bMWQ4NP+oL*fWrEt0_
%)!a)hNB$`N`p4YoWOi*sI?Cn]HlE4VM5kt"2UPPqG$EtT8hE:V]C51LL5T<OHL,)6Q$-3W(PD#aQ]Jr&r25eFXiJn-I\.LufSCF:
%;';alP5l`F*jI46![&A9SpKqNP,@lGKdoPM?Gk4Of;gV2(?6jA!@dDMZ(u:X!qa&k/AnY268H@'C\;(qFM0Lo<VQa&[2qY-Raiqb
%'AMM>)[*oR;CEh-M$]uULcK7:V!!)!#AiRfYZiS1f!Oe=!t[QVs5i?^Xqcer&S\JP>#Jr>[R*p8j`L0Xn)k)5_5*WtP$.j$.38"V
%I.8sY9ZF91kNl1O/;fMb7CnRThgD41D_HEA)&SBib]>"WhVY;@lsQc>;-YUm-sg!Z/(uj>8ch/M-(?&oE?bj6lR8+sIJ5h5O,`*5
%/SEM1AF3?:#?r,japalAnm8C2[#IJUHt-Cc]00LD`82mRJK!Dr`*25ta?ALgYI(U=H5I#2h4u]bpUVK/n(<t-Y=btCWH,;mCu2%C
%h3!^]&iXh=*TDReHnb4J3&'pR97^pPH_4>-JE#6CSA$7c[nk2A[87nIT9FNVGLhg^<MHXl6TYfs)n69S+[+n-@-tn-CUl0)`R[ZX
%Uf#F(g]qZjN:G7IVl,S1E<,TPX]7iC%YXIbS'Gm=\G%X_?hZ8-gXm%f\)D5a7XH(iZhjL0g?>`mRJt%9\ugUk37eH!5C"nF<YN&M
%^P4$.dm.;[,6rf\rQG1A-*Vi=pB6ffm'>&ei@]aC,KP"^5NFPMF_*f&l:(^]!p_pt*oMg#(q46+!-3C6RDHaFOTR%o/$(+);T\Wg
%q%m9`/^Y'-rhWVUhrTJ/.pP$;jHs_TF36q$"Wg?QT-IMOYQ-8M.O5)p4.j^YERfuQ$I!ct!+35c6q+$7if`UI&*I:rfbq8iXki:*
%ZV-qe)l$hue\%O+m.sAM_,Ag]gC<$u)Rpf6MVUP*(u&_35._,%0_f^cHp)rKA[+jWeIGQ5+qD0$_i*:9lTLILA&io.-VM#5'UF0_
%!mfQ>HD3^X/_N[aM'K_e)dbR9V*f?ZaD9.d^eF(jI#WE8q%F:ur.fd.X3Gb<qUqXi1VmjJ:q,TOMX;kbf>AIVqP_nk<!-.-N\\Qj
%Q#^!mM(>a^f12gY;fkDJ.h?E*h\SWZ:u6Hi)-<daf+OIFYHnMoEE1EJqY$9V^6XLd5B-M&XU&Bs8"=dY:E4Rp[m7ih5I/Ftm7Xf/
%i$E\Pa9%1*RD/MSQt0_]QON,khku@5b9q]>^>#%8@bErZ'Z&fQel!FjZ*JB],/VRVnl()e]Zp4389Clc;M?JqIIC[IqNnk?$efUF
%SZ@J8FActmDGfQRTk.;0I(d*?]S,9)O1+)+9USYdO55C0UYqt_pG5W;S(mC!]0m9"5;:&-\t_g,;CacLiW>E_<2!W1&rU!,"at/d
%bWkG)`/)cuJp2G>Im.S9o-\Q)MDX[gG+cO)c-Zp/\eZOS=8(KGIlP./ZdC[;\+!a2]0_f%1!K04%%TEF0u:5Qmg'0K*<WF/`D%)7
%1qt1Qn*u&JfmJt\X;0n[b\O5gPhUJcQ"d*f>Oe(G:ui@kN8u4M[2iH!dTrQu+^.[s*>R#@FR3PV;<L,knT'^3+76LgjfPdiGUaTE
%H%of;>#7A.A'(ld1W@)LO.Y)pe=`OVI@&@R<X]hK0QmZSf_M,p"Up[2Zr0.#/7PQ&I[t2L4K-&(YWT0!Sb/*&"#&Y\!f\"i;*Ee_
%>?iQXT%ss_r4?*6BA6=_oT=h?B/3MZ_tnUgn_=Fi\KOG\Cn-H).nI57Rt/4Tks]oM49DI.[faCepcpS)WBk&_6kYDe@?6@%LkDB8
%Klr#kdl,d2'8oB:$s\Z\M-(+6!+FU`KMSDc8frk6S+IoJOQ-@IFUZ\"+#;XI/C4XQJmGlbM@nh:7c'ima#gP,>7j#p=BUbW<36/h
%.S71_Y:L-D+YOX`U6^M8h=n@nQ=j=$5+S'F]:DqABUeC,STVj=J4e[R?cnVG5(&te9E4cFs7Dr`iQ"W`(0tW#;uP+9STOo),WpKm
%ra"CCBDtSp'0t)f>!>9>]AK$Bs2[d$bUUW0Q7o%,7h:&N"^@S5rTA[r1%)hF[t&hckA.6<s5&"QNjf7qr_D4;a(+DCUn,YToOKFp
%"I7XhS=O-rCSqS`>DJu"'"aM\,ik.b@<)7PW\@)/6QVtm>Uk&Lm;`>XMUmUh/2W=opVgJ_o$%3Hgp+NKC4GI*)UiZ_j.[.\K6\"$
%fjDIEi]a<P$^Ea1[3J1!EIBZ>>e9)#\]ubgU;iVmD6c$jbe@g^NJ45?o5C]JoUA#[d2t9l(S!K%E5Mdr(UHCO4K*"]a/`LdKRq9S
%pp'N4ck$@)r`:<4a(+G5#M/KS$5ZoBZc*]:Xe-Y:^\#k+G@TqjUMsCE]a](o@dEtCAl"DgT,q*1+#?E']uOF@`p)]_?*?4]mVs@*
%pd)?LQ'gomo>F?G^g\&lRu5JEHo-4)Gd7iL^_uu"0rT"t0"Em0\\/rr`jorSDo76HiGFBk\8BA[D_lRH31['Rr`np<rlS_7o(ZiZ
%'CL;&LY_M0c,1'QX9rc%G"j\!pOVa=7"bNil]RuL$#o)_#HhFl5#SP*4EdkL$tNd3V_Y:J`6r@2W$C3?^di_.&lAG:r'9VG`fPci
%?K@lrdjp*jI['_%r//Q;Cq"Tr\3h?MF^7`Qg.,PGB[g5UJY@VlleLH/.?o)obC*ntGPuN@(f]V(]H5]]UmIS5j`\7<c2c,ikBfgp
%Y$CH$C&5tV.UGlO;JC)q<+/+>ioIBpr?&)Clik.'&iOJ'a1u+Olk(u45"\#qbK7Ip&'A=k6\!f+l?\E4O%"j%+^_2FD8(o`9S=6r
%i7PM9L0;5e9+Z@'Tg.oPoiK[VNNo]@PWZt3*W"7!:n4n4GGt85n+o@f"j63BS`'r^aei1N"%Us,*Xppg$C$_V\muiCic^\_blQpY
%-0Ir)Fh,6LEMd`!aD:UA98mk6$eP-I?98AGfoEZ^DDh1)#4nb>0$trta]Yu8P<ulLbC<42U:$f[pJP\H@k`hl3??G`eMC*:WSTM]
%2$pjEm@F/<fAr*m>/ED)ai*2A8[R&"n)Q.3-6IA*&2<S6n$sdEiF*gkp04[kS2=IIs#&CRSMX*qrf1dB_UDb)l-Hsg*V_pKn,Jqo
%dbBJH7C)[_i;DjZQGA!H3AP"*8:P3^J1D+o.P(KANLkAao&Wcl*9oVA2'3:!WUK41FLE#beEl%=ZadFn#Lg80hC!.8i&_um&Y.tD
%oH3[DL<EHZS934LmHtEp5[f(*3c]Y<EIT&Mo)gC2FtZ$uJ&ZJ&+25I;_RV1okI</+",DBEimX5Q@2#2bkTRkenm?MPH4VKS`Hr(B
%@;^B\.9[uiGTu;0)5Ynfp=R*Cp'<M-4kiBj],@GF,sdj9b8,?k?H.V+kLA,`,%?ZdcbIuSkD;r%FW;U:30!jV@M1hJ\3\3.Mb3Oh
%iClf6HMCZ>O"IMn:KJiZ(AP$f5$\gD`s)H?)5"'g0:j$Ps%beIM444fb^)0'4VQ[35sJ'`@l\ur:=)cM[uE_@1;<@N3'fc'S<$A>
%4(XqRcBFm'M)4&C:W<_;C#WVtYOBL<qJ"q^m]nj&YDc9/`'JtNiAa+f9cPBVIPssJ:D4f\nFqhSS>qO[I\!-g09+L#)Z($9.H=p,
%ph;es\@+07(#dLIQ"VkCO5-mo'-m55#hK1J*g;0GEq5"8EiP=9f%YsX5+Fa,S[A$5C:Ts3^>uC#pO0I):FC@cK0Q,so+\focHWPY
%(ZnQ;rH*)3g\d"6m\c8dB(KMI\LQ^8Q-@hIm7YMb$ZC(ENh<:bZ/eh8iS,(h`WlJIC8#qZDAJVK;uga*$Wd`*[*;Gt^f$g@W#"lM
%[U$MK$O`4,J/rspC&s6Z$<Y/#e-f:b=M.T5huX9f$ZHP3=4Rmd2h,%J@G\(-ctjK#(9i&7%q%:'<sq8c(+L%a*j^+!JAk.b5`it%
%eH2C_F*tC-5cF_pdL0+a=Kka)Z"k=MFb+9.MjFbN(0J(M^uD0lX@ZWp>/9-o!h;hdTN].jV#mS_EkuJkMjFciW>tM1$Wt&@J/dgE
%ZW_l$W^"0rJ:jaO:bBHf>*l&*YBP+uW;mJ4$Wd`2U&:B_eH0ueqd7L\nLkWm`7e\N!Yu<-+cfd=>(Acsgu0t/_rJ4hE55VhE4#\l
%YB,B;!2hDR/R\,<(ft7j][['!LZ#)NW_^Om(CH5.=Pu9^r#Dq'$Qo<_1@G=g9-.1V1n3qXo0.3M$d4/Tn6KRR%TqQpLA_T;^H,R*
%jW,k$Mp0KJbCf3X?"De)[8UIY*k_MWA:>"jhNd-kQcT(EYWTq\IM8.DJ`ZVgYe9)4q$o/E#:sdVAcaaF:0@DlpL7YQhqHs4o5h_<
%95p?G2j*nr@/9?6qo+]n3FMY/XJl%[A:>"jhYK.f60@?\ji>47`KBtgXqEr"R@aSI8&rc7,%;Vm?R#)__"-:3q:E^c*3_PEg38\T
%3FI-:D\t6ZgCfE?oo^.([PFGDoOPSbcI]'LJaBH.&kjU3!o@PjG[F$JDeqTK/)fhAIJI%V]$'4q,i!+9#I4\0+(U^67Z512;nJ-+
%V&n&dX#h]#EBS!8-f`PhX+(\8"'pHJ6e.I1iaWQ3_k['3=?FskM9ON4g:0%(bCq<-p3A\G*%QT^)XsS)h4<kg;G,&AhRE5gq:b`/
%fWTfi6^6knBN3$Wo["p5m9=g3JA"cI,,odp(/G!=)G?7lG/goH!!!QlA'@\$rde>0haq'YF\X@^c,<UUBEQN!:0c?KA<&;7_do[`
%'W@Wp>b0e]s67I%+(t+^,d,klk'%J?nQ5:K?VXjK[a(L:>WoYjpp)ekJA1=,O!_#=euB1Yr`\<]bH^%PY0u>`IP,UTZW?J&q5_G6
%$OiVP,1I6qo#i>^)K@aC+tBdOUW&is>[8AnOSkB^<A`2KaPn!L=7MZOqe4Bhg%_G=h6Y"Ae>ED/kjcUAfQOl10?NJE3gQIr3+qf,
%*qKbrX1V<nQjc3N\;I0IP*6hB6&1spERd+J-NA$YFSOko!E#h'76HJ4r&<[!IdfdRajd>0B#nLnh@%N1k:cQ1QJ\"WK>S\#H:1-[
%NBK7FU^.P@$)'(98PD2?a=hnJ,1b&WBqhu<)fVb#*\dk^OM,rEa"f)`iS^gC$pAag`=>kA?c;+aV(j.\Qr3hf.P6gil?^\CjfH$7
%o6WKum^JSab1g\mE9LJZF)Ma4+qK"Rhgk:*#bI[lVt1I?,4V29Su_'oPg2J^X+@/dI4llF07r50LZC+cYZa<D0;l$8PP2%+X>WH#
%(d214;X&LuHlK2OD)?RB\QDP;6c5LV>Hpj%>XA!99G[t]:A@(iY-L*tWFW"(Qtm*7&a(8nU/[r#`S5@)7VqtG)Y\mRos10iSim%h
%F4$L8!\/5M[dBZ0@^s./[_01@Pf6,po5E'P9'YG0X:duc>\?=%QKVo:2p[tM`eJXD=aTo8:5CDk%9DeI9[r8CDP,kid5EmaOlp]u
%#E&YYn0Qd,13_s0FcDDNM([RI!A9M?("l2/nR7<6</<k4D<,SJjutA6b5-7EU"%IYVUO:U3dR5.KlMOK7E!a:<kP!J]lH$OB0SRN
%l]:]^&:L$`52PMK:+F>YhJ2mBG82D#m*ughYKeYdV[(TO`,(I;%8M?Mlobn9eKfk`Wk$789dB7YoJXJqcUBg&Yi6g/2e7Hh(li2;
%[CO,^l*gR=gO@ToRjbb\Il!PClQQ-Dh601NOR?S>i>[Jsa9JHm&5FVP-Sr=]j/(=PEr'M^3DBm:\1sf,D3XNkIDnkT_;"6&^*2In
%AAq7Q3]>uOE%&"\m""Xq^(s:0M.J[#66_cu7Hhh\5%:Ifqt>rlqsjJ?Z)&KGfiR8q903g#[Kd$=C)GE0^8LR5?:-K_,,EcPpQV3$
%I`%ir$X=?:'j+$:g9m"u"c:./@c-iN'-o';\HP!t@Y"<HUENB5$s"=!\/mA>kSWqV@]#lglT3Reo&pOfGfsA:>OmRE61J_oqn\`C
%pcDDk^hN3qKP<?)12"'b_4__$X..MX$dmb49]4JHG4m;:h%6:/b#cp$(PRXm;'UM;&e6Jl[XNIco>%Z".r@.jnshcmaW4RpH+-:u
%6g>"SNSlCVLWX`hEHjIuDC:2W4%QBsBY2U'!GGW]D3rT@68H;SFT!,,cYp5[L?r%orN]ot#38M;jna-Jh5aR_k^)%=\C&+2;:p.V
%b\uZJdEQF[d.CE`GC(39_.U](dVcXiI_,RL;9^MabaD7n>6s.Lc5uHHn74cKbT_oKq+=jWD,h9f[Z<)unVI(&d;(ndq<D,YQnk*%
%ZG0&Vm_(:*1:lj`lSjrq>k:X6G:&=G4rR4j-@.e]_F]JuK.Boj]@6%hq/SZH`rQTh5V\h2B4BL7%1CLElSoSr3L_/`R&I9*F91hB
%POp0^4MeIal'\iF:951*T@TH$oHU-bf(drt4D&mpqGQO`A!l5<-oDGB=2RuMZMj[@]Xj)DET<^`gTPEWGc!pAg50GCa*Jnte_s$p
%1;-\mH&-:cCR:.OR;K@G!d6P0#J=lJlqr7WP)=`OIQ5!D?_?.]P!@bp+^)H2>5N./.Jl0k^(H:eWX2UBn65puo5fn7+!ut\ZO^tB
%'?dGZ'gEt.GJm`M(k#+'hnZ8'a>M*`[f&kHc!gJ8cc%cOLek+[^X@XrGO&e.caU?+X,eE>H.(5#gl*70IHGS;OPN<sV;r#Ros]8d
%okEhe\&cpmeao=VU=*A=UM*,Y#W6%D6X`df+Mos3.g3_o*8Arf17e:BfhQSK9C$em"I670O8)!ah5PMLg*_J#(&tV@kF2.]ZIQqA
%qMHW)gOaQ/*Z$b0a@8^c^+Ph*bM;2l5'6Jj>1fo>`15._Hpjd6b^46fPm[-"HK]p%^AB)fFDQ7e#*H_ih`L:\ZK0V)Okd3ua1Br2
%"BjMMGIhdG%/^ef0+kRu(c'cs)96Z)71GsBgY'Hc?<)<qmFRO(fK.a[*rJ(U=W*<XHoKIiOnU!bl$&(P3iu9E1Gq])7i2q?B+mng
%BTMC1-pg$W)-L=99T*"'B>K)g%"+/pFeM@-RlM@'ZjYR@7@^msg,ckU'X3Uk#YAh&6T_F$V%u.uWi\MJX0F^1a]kg3E7jFj_Ae+>
%hhK9D-5.f?4R]/q-_I(NH.M,h,rH05;<<'"/.p(d%R\+:S>U,`b3&e_e^Dal[G\,o_sD;#dhfn4[&%M*Njefb3J"JZq+P?bk[pld
%BU6([iN9S&:u=j4m5W)&OI1Oq''VT/GnUVL?aPktlEf1/9hPEPYk[)JpKP7:(/"neJ#lR?3b5j_OBk5cYNMs%odZmg0i2b7..*jq
%q=5hfO2nH>JcjVBER?2qhBU"1Rq=Pee<SK!X0)8(,@B:M1FG\3'!0,eHfrM?_WL])4(#Z\,SPYA/(2bGDO]0]j6bbf?X9k:=UXnd
%bgL'SXL.#OJCuC$*YOI5:chVQ>T)0t;426?!AXK7WWFfcgd/6tB@/stUV"D7n?kW)BQj(7')E:F0t[.IYK(k!Yg8m'[OZWoCrH:V
%Z\"BFJu0?)S]IrI.R?p@Z?^u,Qn77JW/r(VQZk>X;Bo,O%)#hkg-_;,g5SV.YO\S3Tu98O-H4o8HIaZ_SZm3o3tIV#fiiigXFdQa
%jl>_NnUGbLrm;0B>rGYL?f!sgFW,mr6+b\8/Ou-+8M'hHS_b1%X'WJH(c3.tNW1'^qR'20d2O^YQabE[g&6>OaFRO0hLHQrJqdHR
%ce!%>C9Gp10'DX5/ml_,P,]5eiZOVH%$_S9g8O(>Q&kW(au'5B&^]p6(:&>&(,W5cA_UO,(#nO@EL]*!$\tp<Ol7kbgBl?7,>E>O
%kMsp1Ga2BU)8[rF7lO+`'6.cWO0Zeo6eVoG+Z^Aqicl1>@<5W`7%W^6+S,AP'SrXJ6m0(S;%BZb6m>NDYuDhi's7V#Ei`cE'ugGs
%B?:kgj]+?Xfq-jrl8K)(8#$NS1-pWnS^tJA[0!I6lfHtFaRibT&ll-S&f)J^bFR`<I8p>QGFJhgXlAM]@'_K(!muq>lTisU$LgZS
%JS:qYjef[MO`E:uR8fkDT+aV0/lo`YcpqTB`n6n0o<aA,\?/W]hLsYGW[h8p$-FabC2;L"m]Onbk>poDI.jgi%P('HPHD$a[YMtW
%eFls,;(u)/:\-Loq'g<-eCuQuY0.@?Oqt!"ZfLYKnNg[o,I#rjc?Up5GZ*KFQ[(k_Jb%Ym2(e/9F?-^h4Q3kJM&rfb0QPX+Bf?VZ
%=Cob`>>/mjO]H8Lp*s;ZMsMud/@)m,[^l!U$MIY`,=e&;6\Ka8T'rk#"G$reE/_'E4kV&P!Y_XNi!q5&*JEibY1_#,e5YJ?^i',%
%I*(!WJI<hc!W`I`n$XnRB7?C"M6WI$^+178J1_$A'Qt58f<gX.3I\MVGlS,mW)FfCWd5IC]=7TN^D'D7hXuqTeVlNMl5<%XKtnG%
%o0kj!Sq4/.om2Fm=60u*cKC?T7_iVR-K;h<n%hoM2D,QR5^Ub8?dLH.b'm15V[$JHGWV4BF1pVtJoo3,"!DFH[_'*/<]$enN(g>b
%c5g_U2VgTfOscJP=o-+VBf.7@?Y+Et0-1-2PT,di]0="@l`aehhKL8h?jj(/%YAsGQUka";+tG16&H0XcU=9.6SA%tF`eiAel9>,
%E)DXDLV=HnQ%b<4-G5K:n80SJ`GE)t(U0Qn[f,&N:I!%$f4RIbC_G.);MiHWePuGsg37ejk`5**F8OcG."iS-F7Q-o,4k<)AI<l`
%E5;X-B2hI$UWW-9;A<RHcbuUja([$Nh9Cu;Xpn8Ffu*FRM("n0(fnHR4r/1?o3"&[%i\=`KD7Q[f/s8#bIgKQ/N7e1I_IJHiTbIX
%d72q)_'*$r]YA7nl&+BnC:*Q$/(^n.@BFeT:e9:\k($a/!6KJ[\A_)!q2>_rLj\Ql"a5DJ%<r*o\P'lp)^6P;5P08%D0-i5k;ddj
%E(ZAf]+6!TkHGJh+@W0>gdNsdR](TQ=&'mE+:>T+MOKL9]fZ8tI^C$PQOV.g7(4?[Yq[t&a?LN0RJeKCio(i]lAOBW4]oh+fA#[n
%QKA<i*+sqS3p?qp,SNcB78c6d%:9FuVERh;1=8K6mPq'0)*(3k`Np0R!\;QODtK;urqW>g7X/f>jfr$*>EogjqXjdF_:-S9:IH\g
%bLh`Z+=1^">;jJNjKEU=]f."S'95I)"5`c*pcT&tRZkXmK?WkFHKlk;rF$N.CP!\]3iW_nl2L5ee=0Ym7f9<*dp!#MS;;.UKVJi?
%.20\.ihN)j(McCi%k\R9G-IFUc`)@FT6Eo<>6msKT\8Hc$=OD)Gh:a>2$&s#^Wh`C?M24pq%"nao[N&6Tea0NX^OTDLg.uu5*+(X
%@'_h?rob)[L"aQsQY=\+as%g#+iM#.%@;D3Q?RrF_mcmI*lmbX@6Zr.djtJHSBErOE\Q.p2ra.O8]fk#5-Kf<*mSVjWffd;*7Vgl
%YE(j;g[RRI<&m)b^[:A&bi!b0qfo>KgAMG7)f2plo?K?PVUt-ZYQR_7K_5Lq=ur+SVb_rQA%L4^+4MBl>.)$!;841a6qO#<?[G0I
%cVaY-dlJpiV5O3_=!?=6<U^*g.(]Y*Zg"FaAFGdfp+gqc`QOb<N:[m\/e(QU7nrmN'<rk1(H:+VlI?TMMUK'.Bu*RaRuT*$N]O,9
%aq1DcFj[&Th*b1KTl.6I<fl)2BLG@m+V.V!k_dgaqI,S4O@o.0f87Xm]9tkOI"Y?;Zm0VeXoM)LVQ/n;?D(*f#]5hf6g2gfgf2AL
%'X)?".4#5DcPQfNY)C8s(geutO=^$Oc2t<Z:0<GWP$,(:[*J['%WV'-hfB%]g)%V@LoI&i_82hKG0n<GR<6+QAtnh8LKiSY@9^,+
%PM!V/<?n9o#pV]p%+c2!KCgENlKXI5-ERe*arPmS\FNW*S[RROl/1Rjl>'OLgmLtTlW;7MAmQV.VJu.49BKYol^83bV,oFUIkGK(
%p;-8RW,ro3L=&)ThpRkeoeuE(D3SS:J#7@LjDuJOA)XZ)Hp1216rLt1C#;lgQfeS8Mk.C\CE*V$.nQ<leOaoGm%rp"[!>mbCB?3T
%q!nSF_AF6p%8B)UmJZ+>&7.TSp.(e>;5MKr6^4V=)WGU"6YY&kdOMH]%M.u6ZJnmY/,rUTmD(W.DI[*,@-AHEOBX5&4#?DaaMLP$
%=*Q]BOdCF+o6;-uo:^=#`4G:?Y38V5-XMGDm/3Wo^1B?>kQ!iOgi]n:4S`'BDPDY`0`O,>!05ibq'PC/1E/P4kkRK'5g`ir1Y3UW
%CM0u;BG59#"]CuWeWf5l<\VMaEnTY/Mq(JpdK"&gdstdQlB['clC$,Vq$N7UVaI(<6S)3hM?KUI]9Coh=)/(o_9U4B+)^L!4-q,m
%WV[:PDhYTrpWcY/oQ._ooY[7Jf^!/G'*cSBZ%[1;Yektc;m"qK$>5L3^G*[)9_c[q5'aFsmmiuKKjig4I,o>DjPjbE8%rq+ngY#,
%[bR\,??+/F"'Vuc4tVig4V?V5)qjArl%A:em&r#'BBlWJjLsF$aOYX8'BA3HF_`r,7hW-iq%(fT:4s#OE?h;3]@T)sV1eEeaD)MX
%N)$0F2\Vk\hbu?"]q)pIo/+P&NqW4(_R][M^75OQ+-^ej=p0,YrCB9-CBd%<1i6UM$hqPAGl)2KGOraE+>b?cSr%_Bh[nOY^Rf4!
%:K@/qi$AZ4,nsT>VqLc=B$7AZ3-Dp@7WFs#5Q)MR1<rtLVqm83+^7%S%L,P(bYC(bh*0qhNs@74(W<#4cn4s#)m$GsR4$UgPJYd9
%hm-G=@kMiIrh$Fl0otbCPW`=)A#s#8c!L6U=Em).:?N!Bf?oKnUJiHGVu=KpJQ\DfKlNQ@>Z3<](`Ml`W`RTgI.],5kM@8"@gk,d
%6iJh;Q1B0dgO&YA8ggB=EMtfOC+ag<G`gEnoHl30X[MPEV[MV[j8Om_o>H:1Mfn8h)7BiZ-g(u]X)E\n1Wk]AjrRGlkA#MqS[fdT
%OS+efmP-(ZV)tRkm@o!a2&q@VgjVAdCfXX',DVbY0'L'THA+8$HN>X;_2iN>ps0Yg%GuXNf):ueoba1+-h?Z\FM;m"gV^B@4ZU6)
%4&i*JmF-0kKe<mb9FH1cc]lTG9YQKT-h8iE/UCni9^@/OGPRPFjBhbtlsX)ETtS.FT=7bp2F!=Bkl=;SQ1-IZ/5L2f6oXq.HomI)
%/R?02[tEM9Hs8'*HKh?,Rr.CE[^+;%Qkis>Mse(GCpn\&c#B$cf8YP7V,:V9hb#,5k%9Mkag_XVNeR43$D'1_5#YArfn2XC^5`.R
%Rk5V)HD_El@5e,W^9+3oV0=u*<#tl;HD_>O[@(1oBC0?qSPH9"DSAJVF!I!AXsoIQquj^>1^-]9k+PjQEo3;?\M]lF0nZ=U#Yd+H
%s#jte*qg[chI\*7n08_9S,"n]mkBAq8C+1-YY\SPEadCFD'sC\A\3JNhTM\B'RKdO9H_LJ)`q3onU1@$8?@Z1NOA"[ib:$Mk,U]F
%V=$<;XKec@5G@Dg&8OM'l\Z9Qbg$i:J#f&cLn.&;c)*Fp:DX[?5:"flXgIoBRM\'?R4]gu9^^\FD%:0Fa'as5ApkuEcg2(#=K<_I
%bbDSPG;<rS+8:3&">A>T8149@YpMr/-e$#P^RJ==,Q4\An*UTj@XZ5LpWt6ZCio@L@(KH=DS%^h^$X'2i,0WS*=EXWL;kcDD)Kt0
%Nn`$A=Da<Ipeq0ag5BIn_qXt=p(#e5)3D-YX#UT8Luk#Q[eHK)1+s2iTiMijrBVQ8af_E&:N(@k]t(>;l'%%/AB.&5U,S=M>?R@h
%07B[2`7>n^AHKP0K2.TM/.V=Ics*,;/3p4!^sl.9_\,,nFUi^:hdH^.LULRS=-s#=/rSTKmkKG&+T;sbB_`6uTtQ@:[`'V\7b]N'
%fNoAdgi5lMc0lA-2FIH.'AXn.Q^$ifR:4O`HH!i@8986^DpEBaTEiF[G0-c1j.R8V"b+7X_rUTUI@cL(PZRb8D^ipPMZf4sIa*JE
%XmT,I)2%d7'c=;_hqukGBPHt()EulHh_G/oe*s>=Rn>?"-N>F>jqre:VDQaY=n-7/T>%fC$o?>TnJelS3_?opfLK2B&dJq+q:_ha
%UcAg+&:=EB758K\(O+AcX-T4$(oCu0UOMl8W+`dbpOCs!rY%)(=HHe"6DNb7!*ptX/nteu<aOTt1LIh3-_XH##1hS&De#'gR$^d(
%jalG>RuQ4>jsEe]FHTf?NQ]TVTBFAIPIbZHZ5GI26r1_,&tR'`BP=L\aSicYneNq\::?=.hELO+^\FM4]j9:W^PMTo4.+q8#h6eg
%)4:"FSCSE?U8M&X.!pPX+W._)j\Xq#X*,K"fj#s]1pZU'<d];IN+X(GVcWS*:)n)*$NW9DC];.HX79Ndj3$$rbnG(OLi6#s,WuCR
%/+%b2b%MJf]4Y>-!5`od9S_IRjA,0Pq'`s[8MD/qpIqKI&Q@MLO#-e]mF!k&j$E`f%h?=2]CPEOb5(>2n;\eafQ9p1H?$XfkC%6_
%E4<^GN*ebZDD4K+;nAat\Q8V65"4j?RW&61<m'YGJ\q$J6*^$`mB`,8Z\3Bp<j8S0#/JT%B23d@;EF0WQH;]MT=sD;k1!S6+dZ2h
%@QAG5Sn[#OJU<ZZrj)](4Ja_cf4CjjQPl0V`F>l6p>CeikVS24Fl;$$dQEY%gCqi^eF6+8EILXECV,Y.\\`Zglt"p3O7C?3boFFG
%`%15PRu\01fkgF/Tlao0WH>AaPGdmS?oA7Xg.c#ElerasF02`rWW-,D2(q`W-M'f&@>,fsDhrGE)rr?*eh?ApXQ:[=kUDc.Y(I_F
%BkO/ZV;GSS*2!2#B"%Z''^Z$Dha1B36_e<)"ROJ_g!&^!$6_W4*b=N-)&5I\1A<MO0j:])Va]BIrCUs5,mN)kQ1B]HU:$<)6S&\B
%F&^*%:O!g[&Ii[H#YPOD7.)27Zt/X3=P2Z]^YFQD[j:sNQ"\4m:BkJjKk+'9Zramf=bN*A1&;.N7r(7s5"G>nD'fafG%$_!#X43/
%c?j+^Ni:,9msrn!fPJ4R+m`@POP+V]*Ss%[4usP(/A/+qgUTfKHmL"/SPr5DV?Ke(:Fg6>NDV/ST,+@rJ6\0^X>@_kK0[RLK@"42
%D1)KOCn)-CQ5sF_7[=cu<EJ>JAbd[&:urH6,Gl+PfW2J`PPC9#@B)<?./&!aqsMHQ[c.0%<FKf/F#&-sF.ti=nRH&e5.VE"f7/"1
%*`J^o6s.<uVAZpc+I9O#))"f`:`c[N62'6DnoT)ok=gu_1tHd3Xh(..7T93P662YnLCU&2?+J+"(KtY"XcjY$8#peHX-(E@Zqnkc
%i+cT6\iK5m5NJm2iFdtNUq&"/fcs(W#!n;NB^:_ik0qJb]5:_T6X+Jk?R+<7.JU?pp,)3Rl'"fM5WGm[6<)LK+BS)-HqHnC&J:+r
%5fk#Yri$V<!&lSDEag'lh/'T##-o<%P>.c)5(OKUnk(a#>gP,eO&[B@$a3f"biQ22YhD"+MffeMoftG6oRjV"eF(qVlCYT5f)HFj
%Skk!mc24+OV+u<M5>Oc:EY!k/7,-]K@ACAf@SM8dKCF<M9!.l#.^X=B,`a63'sAVM19W@O&".V;i?_ho]B.2mfX3i)Jm(=mZT&DX
%)GI7MW^2XG'[/)jB_K=0e-&&UV-`-%__4+`LY?1&W8S@$i,--;#[E/.+m<V@9*X$GaO;mT`n'Oc$(DBlb=d/'/eKeZK[PX5*!qi@
%UA18IebPXQUj7qV>r7;2&+$#SB,[mqn#5f\`aJ$QELHf5+TI53]"'@a`j2D?j?eRO,P#H9fR$a0/KY"&n@Y;5%!1giYhebJ#6.ke
%@pAd(k\<>k*+,SVT1SLing:&%GUD7g:E_:`nI1XG0E!+HVr:GI^R"j*O5OB`hA'LOTGrd$gk#`&($Y9B\2kc4H6[;,[B(o$0Aeu$
%bOm1Pg\K8^WZ3g;9jC^n/LHRK]1`/pZ51ngeKA^Dbg[&2=V8oG/=Qk2-*,J"-:fjNI>t[kU:sl:q?IrG%EjV]`?^-o@Z,&[bHbTq
%'Gu_7/5)-=dnEbrHPBV?Bo8V27RL7D,u'CkVIhmF9L>MU4$CZ%-6l`Xe<hEl=p_*a!i$\R7>6+-Ut[S;M_&YeU5X1U?-$,CRhde:
%?)!km%0eRsZD]7#M]!bce`hK;R5-%P20N5ajBbE/d7B11Lie#251]so-Vl(A8L!tZ'&V>]2:>^>"rJ?bKbffuT^+?R9=0!G@H8q]
%=<i2#]N$:c_<GM?/p^'=YmeNE&mhm`%)[?bE\TaHP$rYTE<qcCN?c7'm1:CujK%UDmX/bP&Rr&?ZPGijQXrmdgh;1M\5C_r[2p"'
%H]]A&Pmp+##9/8gd2!c!a?iROTC<nmE\K>MZ7#ggUljL\X!U#f%7Gr*T=>[)i?huKlV2mt75X3@ZJSAR'TQkK`!PHBl'u,`;In#h
%fA]K2U8U1-dSJ.G3Zh1`#V/QZ4K4H,()nYBC^G&4c=9jG[dGB"VG,$nI3,&Kgrh/K),F>9f2,s4H))bmgcR'`7(3kmh'_MC>p1`T
%l)"ft@l[gOM=?48+CV.h7`S!8/?5\1[A\O5>%Eb48C5J+"80sQUsU<$^l?ZD3&9-G8A7MDH!=-DBePtrK<UDKE3DVuPXL-9@?@$R
%@uZ?kiAO?^#?k(I[UP.nTS<$82d3j[)GNRq.J;K0VCo]S)jEFXJaC+8/GhWJq"EK1UFZIj;!OAR&&n`Nf:@6obK!#AY#[;2c8@^$
%h[NdH77<l@(3i2^b#(]k7T0j5Hck=?lpbc(]Kf*1Kg@V52m#Kpi!VLrRRe_=hP8!/0gqL3]G>%54h)8mIO]0],aHc7f=6N217`2r
%5XQ*m.>8NXj;B7b=Z4csTc+9iK07nAS]u%L"S*F([`6CeMC:Hj8M='@Y;L_P]oM?WCg(r6f5(S*rJ:)4ed^4<;deFEL#K83,-*+@
%S1][?dpu0sXY=Qj<+cF&?M7QChe/'E^6G^_]pW58fP!gq1,h=2iM^-CndA.="M38Gh1u]<0]l[g)FdC8XU-k`b(5PX5h-bj^*'l"
%Ni>n[K=.Y4Zaqt&DH(*Yfk'R$V%Y;4NNb(qppbNP/^AQo(=gC.$@-bs1b"hBq<g#B[/I<\M<$5kdl$6od4h(N`ti'0Hd;!oIa2@8
%(JV_X&UJ<Xa<L>=8-rN<<1)?;WldrXg;NIu$C`ue6T&g)B.St-R`93WfV0:]Za/p5[^&l_N"IYeVN+s1iQ/X#1:Ka>(:LAF>pNX3
%aj6MD1eAmh\JFaHU1M\CYlp0E8;%\$+j'(;Q)LXf2."i>&f*Yp@126V72Ld.C._5[>70tsEK(>(#I_E#W"RV][hGp*(fN<@TJt"m
%-\k/#p='Rf"E)2*@FC!q5_g]0S8&Hlh^7Af(s#TGCsl0nJTUuFT_kBoU[%2(VGgV.@Ul1Q7)tTiF2/"4@?Eh2[-qLG/Q*T0odZi&
%fi3#Ep@+MdhGEsQWJ4^/edq0B5W)Fr>p!9+fMie4#Ot-T_Ll/+Wi5-heQ?Wd-o4IThrG!IW0Xt8$7PTdhr;j5.MY#)G$,sb.bIb4
%b0`fQD,Du<63Y9Xh*nmUBd1no)C.U=H46"+!;PQR8Z%*<7CMks;,+H%VhGO)K38O:Kpm>5]V$ic(u/Y)2N2C,CrVhK,AF%HV6Iq1
%-MX7`OE/']LDa.dD(ldYU8]IuZG\u"c2ec&6meAJ7lH19&m\.1[799o[+,B(?D`-iq7t"#*2:l\Kl'6kfd=N&Z*tYG[3drdW:dr<
%_nH]:mr5UR[A^ZXM*%Bq^1O_rD$nb:lisc7ig'o\35K._Z$8keX%tM'[]P19:6ZbnB:THqh(`2eDbP>(9qYCB=>"+a:.11@6ma%l
%>d;A&COrI).UrI?8&4cJgnM0]aMS4HBX1'u#/\;rZX0"4K\Tk%Kc8n0;:#q3!p>c("\1i4,?s`,9c"PjMERjk@jq+HN=l\=6$39b
%!I+bL7YZJr-Mu3;TV:)U8@BErOtF(rOf[K\CFML!^t,p9h*Zt&klX'VN-Y:0,\t(JR=GX67/((E0WkSk%3BAb9]&4^QOO>S[REL6
%53Rra>2T]kcNJ!*K9!dD.sl-1A?nj-<QSP?#=*,A'fPo;W;fK>qQUeP[\4.EEXes+0MK?[,E)7\-qBg#AN-jtk$4tB[35&Kbgud\
%#0T99-6(28;c,,ai1$fnEZ2`p@Q"bbBT*mLA?]bV[NcW2o62`-`kf+BA'k_:ZEl!qLI2`uH7tdA0Ykb82Et"o:$3=`D9H'%bSbU=
%+gS6gab]S>m3l\;75?Dpa6"Y+-Eq:9Sj.D?XZ&(J9ebfLrFkQ?%SuR00j>E:P>/10@$:d()IXOs]qIu^"IWV8[*9/Km=EA:!&aJV
%fek_'L`CqsA%r%p$a<OqQaC->GdpM8L5eD8Jq["+"sVlB>NYC+2UOe6P&M[eYtjFg0c5oWnd'dkSTVfi.h'U"CsC)=B5IWK<S6R@
%N"n9S%t`!\A2TL)2gqCV_U:[-.u#4f9H!i=9`?4#)VJ$1VFe-t13EZOF%nqErtWYN%JY]d.O'.$1)#hRW8_j.imEib-g2`mjBPpQ
%&63cd1-Q%$R>P%l<)@Ir"tHfNcl_b2aL3?L[1-[Yl>_&W.$g%?PRYuVSOS1a#YkcTeO5\E)nO*!/LH<r>pr*@5a;fu#qZMC1NoB[
%M/r61m%PH-3`#4.d:DAX"Ni"8IC`/W*CITP7bhoV95>\&WW6.O`jLU:kYVJJWogl*'1#:1?DrVm!sIRCC]S<O,oeHlS4#9;/^nI!
%$%YhZaEl@oEIOV#<,H"Wha`m4NRcJKaV8Gs2I['.%,k%k:Qndoih6tN>ZhXV?-n0K8;8u9oV%0X)l\s6:sBPUO9PkjT3gRLa;ufc
%kt#^$'IhH9J;4Os#ZhBP#cQV$oIF-:2>337AP-,od(k2S&M5dij\XGU,Q[Z(Ra[&m"E%JIDReTV/YLb5NE.:.ZN1^AL5*pL&/u5=
%QRr"F=p/FqclKpeA!mcQW`idW#h/i>h,)KIX.[!(n"[[^)';EOq04YC%qH8FKW+s[:dL-b3t'_V))\GPGWj,/"0mAnY\ArK`:ORR
%!O%PT[O+TiZloBV'<3sr5kd0QZ#gqlFR0dr'W@<&2lc5V5U.aRU7sY"Wc!)a>V3U",O90\[]LD"RK.0O6,!GK/^#PY6qOW$YR/H/
%kpGV1Ht\(T#4"^`)P@K)p^5ItaSc*m,?P'i"#B>$pAq(C\q;,&\<$HjaOJ<5kl[;0\OcoU5nGH%:Td]M$$5u0137L[+=LVFJTaqi
%gpP4eLbWKJ5MK\F&X=EM>gO@i:J!jL<0uE)2(F'"f,KP@N^pD><f8R06iiD^fOo.X#Sc]^4ubNa"U\Yad%I$u7)#'S%1&*`C9lra
%+Yne/5J'?"/IbCX&O!$((lj&\M5c.PL$,]KNWaF?P^cP-\42G`5EVn1:(-Ds,%2S]7]Q#f,;(V>E>?iUm;<8V&6^/N+'#Zk7+#D+
%%#m6ZaclelKt8;P\FEWf2f.4i(CF#NAR*r^[0*R!?B-08QHE!(^M#+BIDFVF=eI7,pMcTfbpo.K&Yqi]C;:l(Caak'!bApl==7j2
%=mUhVRKh_EMFirDQb<JDTBH?C<VGk-%3-7aFmJ[gg!SGA?:-#G*B,<:Z1_a+6qA2A(^L6U4ofL-i[Q.YH(bZfK=W@3Ym%WIKKO/.
%gjOo'/Vo'K0a`4WlL69+Ym-S=d)'l;M2ohu`!K9eOF[K#VX#X-,V$<s"iW4_hi'!m%9#U0B`U[=;)oM;-X2n!ADq6'+-_-kl__Js
%MiuEO"u?BQ+LWCj7T<EN)Z"uD0i:Tt'HK(mU.GXk:P*'!n2-XHllp0S3(Mq0N?[M8_kAG_<C,gs'U`GXZq7_9G,%Z0#Dl&b]Fj*'
%ndbk5&^nR`d0tn8^l:D:#&(p)$#@_!!:n3kiES2)#hs;2#i"AE`"m;+Jej#e_R14=S4#aX,Je*t+iK*j(i0Qc.aBEKkY+(E)\!":
%+Hf@I6*`5?@]@.H!mhXKJcR$flR>(_=@TM9_!4GQ*[m#XoG!#EPdgt8/XjKA(^#!bf/>#tfEYn?O:I%=?rb["0OPd?FIb4$=C<P]
%h8dBsiC9#`>u=q/!e]^PDhV@WKke`UC^R^BR<jn'(56W:j6FAq27ICPjoeo)AW77d80\X`JauS;:a2tQTB]l!i,#^;^kf6gf+#.X
%0c1Yc,J.V3qh6;15Qf(@kR&h4"c/jFgQ:`WekA<.IuEX,Ra5*#(r&T1e6$7S^BVnJN)-\A5a9-#m'msV8kR-H]5Dt!a2`;c)1*,D
%#Yun$81=gO&sg#cYTc'6#_J<1ZI3UVpZdb<AdoQornq.,6Xo:%BGHiVF^eZ1DhaS$2[bX[pl=S\>dZ#tI$3;J"?-eD^"2ad-BkU_
%7c!\8YQB6dd8f'I:&9RqQ%*49jVPp9Ipl%<(WOsS@8([T0on(@OtbdoA#s#Ol>j"t<a(L+6)ECg^r"Z(jo70'/%m".BB+XB[+lQV
%^<#Mtjfd;8ImFItADaW"Q9QNcoD\j<Efb&~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 19583 14663 a Fh(\(a\))26336 13058 y @beginspecial
-206 @llx 157 @lly 818 @urx 633 @ury 893 @rwi @setspecial
%%BeginDocument: figures/traffic.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.6.0.324 (R2008a). Operating System: Microsoft Windows Vista.
%%Title: C:\Users\Muhammad Saqib Ilyas\Documents\GitHub\icc13\figures\traffic.eps
%%CreationDate: 09/29/2012  16:44:28
%%DocumentNeededFonts: Helvetica
%%+ Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -206   157   818   633
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -206   157   818   633
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -2472 7596 csm

    0     0 12292  5706 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 12293 5707 rf
6 w
0 4581 9526 0 0 -4581 1598 4797 4 MP
PP
-9526 0 0 4581 9526 0 0 -4581 1598 4797 5 MP stroke
4 w
DO
SO
6 w
0 sg
1598  216 mt 11124  216 L
1598 4797 mt 11124 4797 L
11124 4797 mt 11124  216 L
1598 4797 mt 1598  216 L
1598 4797 mt 11124 4797 L
1598 4797 mt 1598  216 L
1598 4797 mt 1598 4701 L
1598  216 mt 1598  311 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 420 FMSR

1493 5208 mt 
(0) s
3503 4797 mt 3503 4701 L
3503  216 mt 3503  311 L
3398 5208 mt 
(5) s
5408 4797 mt 5408 4701 L
5408  216 mt 5408  311 L
5198 5208 mt 
(10) s
7313 4797 mt 7313 4701 L
7313  216 mt 7313  311 L
7103 5208 mt 
(15) s
9218 4797 mt 9218 4701 L
9218  216 mt 9218  311 L
9008 5208 mt 
(20) s
11124 4797 mt 11124 4701 L
11124  216 mt 11124  311 L
10914 5208 mt 
(25) s
1598 4797 mt 1693 4797 L
11124 4797 mt 11028 4797 L
1353 4947 mt 
(0) s
1598 3880 mt 1693 3880 L
11124 3880 mt 11028 3880 L
1038 4030 mt 
(0.2) s
1598 2964 mt 1693 2964 L
11124 2964 mt 11028 2964 L
1038 3114 mt 
(0.4) s
1598 2048 mt 1693 2048 L
11124 2048 mt 11028 2048 L
1038 2198 mt 
(0.6) s
1598 1132 mt 1693 1132 L
11124 1132 mt 11028 1132 L
1038 1282 mt 
(0.8) s
1598  216 mt 1693  216 L
11124  216 mt 11028  216 L
1353  366 mt 
(1) s
1598  216 mt 11124  216 L
1598 4797 mt 11124 4797 L
11124 4797 mt 11124  216 L
1598 4797 mt 1598  216 L
gs 1598 216 9527 4582 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
381 -405 381 1481 381 -52 381 -686 381 -232 381 -249 381 1095 381 -513 
381 -270 381 322 381 253 381 4 381 -356 381 -546 381 -1097 381 -714 
381 -331 381 -453 381 -103 381 23 381 532 381 444 381 810 1979 2335 24 MP stroke
gr

c8
gs 1906 143 8910 4075 rc
1943 2335 mt 2015 2335 L
1979 2299 mt 1979 2371 L
2324 3145 mt 2396 3145 L
2360 3109 mt 2360 3181 L
2705 3589 mt 2777 3589 L
2741 3553 mt 2741 3625 L
3086 4121 mt 3158 4121 L
3122 4085 mt 3122 4157 L
3467 4144 mt 3539 4144 L
3503 4108 mt 3503 4180 L
3848 4041 mt 3920 4041 L
3884 4005 mt 3884 4077 L
4229 3588 mt 4301 3588 L
4265 3552 mt 4265 3624 L
4610 3257 mt 4682 3257 L
4646 3221 mt 4646 3293 L
4991 2543 mt 5063 2543 L
5027 2507 mt 5027 2579 L
5372 1446 mt 5444 1446 L
5408 1410 mt 5408 1482 L
5753  900 mt 5825  900 L
5789  864 mt 5789  936 L
6134  544 mt 6206  544 L
6170  508 mt 6170  580 L
6515  548 mt 6587  548 L
6551  512 mt 6551  584 L
6896  801 mt 6968  801 L
6932  765 mt 6932  837 L
7277 1123 mt 7349 1123 L
7313 1087 mt 7313 1159 L
7658  853 mt 7730  853 L
7694  817 mt 7694  889 L
8039  340 mt 8111  340 L
8075  304 mt 8075  376 L
8420 1435 mt 8492 1435 L
8456 1399 mt 8456 1471 L
8801 1186 mt 8873 1186 L
8837 1150 mt 8837 1222 L
9182  954 mt 9254  954 L
9218  918 mt 9218  990 L
9563  268 mt 9635  268 L
9599  232 mt 9599  304 L
9944  216 mt 10016  216 L
9980  180 mt 9980  252 L
10325 1697 mt 10397 1697 L
10361 1661 mt 10361 1733 L
10706 1292 mt 10778 1292 L
10742 1256 mt 10742 1328 L
1954 2310 mt 2004 2360 L
2004 2310 mt 1954 2360 L
2335 3120 mt 2385 3170 L
2385 3120 mt 2335 3170 L
2716 3564 mt 2766 3614 L
2766 3564 mt 2716 3614 L
3097 4096 mt 3147 4146 L
3147 4096 mt 3097 4146 L
3478 4119 mt 3528 4169 L
3528 4119 mt 3478 4169 L
3859 4016 mt 3909 4066 L
3909 4016 mt 3859 4066 L
4240 3563 mt 4290 3613 L
4290 3563 mt 4240 3613 L
4621 3232 mt 4671 3282 L
4671 3232 mt 4621 3282 L
5002 2518 mt 5052 2568 L
5052 2518 mt 5002 2568 L
5383 1421 mt 5433 1471 L
5433 1421 mt 5383 1471 L
5764  875 mt 5814  925 L
5814  875 mt 5764  925 L
6145  519 mt 6195  569 L
6195  519 mt 6145  569 L
6526  523 mt 6576  573 L
6576  523 mt 6526  573 L
6907  776 mt 6957  826 L
6957  776 mt 6907  826 L
7288 1098 mt 7338 1148 L
7338 1098 mt 7288 1148 L
7669  828 mt 7719  878 L
7719  828 mt 7669  878 L
8050  315 mt 8100  365 L
8100  315 mt 8050  365 L
8431 1410 mt 8481 1460 L
8481 1410 mt 8431 1460 L
8812 1161 mt 8862 1211 L
8862 1161 mt 8812 1211 L
9193  929 mt 9243  979 L
9243  929 mt 9193  979 L
9574  243 mt 9624  293 L
9624  243 mt 9574  293 L
9955  191 mt 10005  241 L
10005  191 mt 9955  241 L
10336 1672 mt 10386 1722 L
10386 1672 mt 10336 1722 L
10717 1267 mt 10767 1317 L
10767 1267 mt 10717 1317 L
gr

gs 1598 216 9527 4582 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
381 -277 381 729 381 51 381 -397 381 -225 381 37 381 398 381 -161 
381 -128 381 183 381 322 381 26 381 -214 381 -412 381 -464 381 -408 
381 -159 381 -194 381 -195 381 145 381 67 381 401 381 345 1979 3516 24 MP stroke
gs 1906 2355 8910 2193 rc
1943 3516 mt 2015 3516 L
1979 3480 mt 1979 3552 L
2324 3861 mt 2396 3861 L
2360 3825 mt 2360 3897 L
2705 4262 mt 2777 4262 L
2741 4226 mt 2741 4298 L
3086 4329 mt 3158 4329 L
3122 4293 mt 3122 4365 L
3467 4474 mt 3539 4474 L
3503 4438 mt 3503 4510 L
3848 4279 mt 3920 4279 L
3884 4243 mt 3884 4315 L
4229 4085 mt 4301 4085 L
4265 4049 mt 4265 4121 L
4610 3926 mt 4682 3926 L
4646 3890 mt 4646 3962 L
4991 3518 mt 5063 3518 L
5027 3482 mt 5027 3554 L
5372 3054 mt 5444 3054 L
5408 3018 mt 5408 3090 L
5753 2642 mt 5825 2642 L
5789 2606 mt 5789 2678 L
6134 2428 mt 6206 2428 L
6170 2392 mt 6170 2464 L
6515 2454 mt 6587 2454 L
6551 2418 mt 6551 2490 L
6896 2776 mt 6968 2776 L
6932 2740 mt 6932 2812 L
7277 2959 mt 7349 2959 L
7313 2923 mt 7313 2995 L
7658 2831 mt 7730 2831 L
7694 2795 mt 7694 2867 L
8039 2670 mt 8111 2670 L
8075 2634 mt 8075 2706 L
8420 3068 mt 8492 3068 L
8456 3032 mt 8456 3104 L
8801 3105 mt 8873 3105 L
8837 3069 mt 8837 3141 L
9182 2880 mt 9254 2880 L
9218 2844 mt 9218 2916 L
9563 2483 mt 9635 2483 L
9599 2447 mt 9599 2519 L
9944 2534 mt 10016 2534 L
9980 2498 mt 9980 2570 L
10325 3263 mt 10397 3263 L
10361 3227 mt 10361 3299 L
10706 2986 mt 10778 2986 L
10742 2950 mt 10742 3022 L
gr

gr

c9
0 sg
5928 5546 mt 
(Hour) s
 892 4830 mt  -90 rotate
(Normalized traffic intensity) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1581 4840 mt 
( ) s
11108  258 mt 
( ) s
1 sg
0 1044 1620 0 0 -1044 8713 2526 4 MP
PP
-1620 0 0 1044 1620 0 0 -1044 8713 2526 5 MP stroke
4 w
DO
SO
6 w
0 sg
8713 1482 mt 10333 1482 L
8713 2526 mt 10333 2526 L
10333 2526 mt 10333 1482 L
8713 2526 mt 8713 1482 L
8713 2526 mt 10333 2526 L
8713 2526 mt 8713 1482 L
8713 1482 mt 10333 1482 L
8713 2526 mt 10333 2526 L
10333 2526 mt 10333 1482 L
8713 2526 mt 8713 1482 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 420 FMSR

9181 1897 mt 
(BTS 1) s
gs 8713 1482 1621 1045 rc
c8
360 0 8785 1753 2 MP stroke
gs 8892 1680 147 147 rc
8929 1753 mt 9001 1753 L
8965 1717 mt 8965 1789 L
8940 1728 mt 8990 1778 L
8990 1728 mt 8940 1778 L
gr

gr

c8
0 sg
9181 2398 mt 
(BTS 2) s
gs 8713 1482 1621 1045 rc
c9
360 0 8785 2254 2 MP stroke
gs 8892 2181 147 147 rc
8929 2254 mt 9001 2254 L
8965 2218 mt 8965 2290 L
gr

gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 30565 14663 a(\(b\))4317 17541 y(Figure)426
b(1:)607 b(Characteristics)428 b(of)f(our)e(dataset:)608
b(\(a\))428 b(Empirical)g(CDF)e(of)g(the)h(n)-31 b(um)g(b)31
b(er)426 b(of)h(p)31 b(oten)-31 b(tial)4317 18869 y(serving)456
b(BTSs)f(for)g(a)h(call)g(in)g(our)f(dataset)i(\(large)f(metrop)31
b(olitan)458 b(area\),)478 b(\(b\))456 b(Normalized)i(tra\016c)4317
20198 y(in)-31 b(tensit)g(y)371 b(at)f(t)-31 b(w)g(o)371
b(neigh)-31 b(b)31 b(oring)371 b(sites)e(in)h(our)f(dataset)4317
23955 y Fq(most)502 b(callers)i(receiv)-36 b(e)503 b(su\016cien)-36
b(tly)502 b(strong)g(signal)h(from)g(sev)-36 b(eral)503
b(nearb)-36 b(y)502 b(BTSs)g([3)q(].)4317 25560 y(Fig.)566
b(1\(a\))g(sho)-36 b(ws)566 b(co)-36 b(v)g(erage)567
b(div)-36 b(ersit)g(y)566 b(eviden)-36 b(t)565 b(in)g(the)g(urban)f
(data)i(from)g(a)g(large)4317 27165 y(cellular)378 b(pro)-36
b(vider)378 b(that)e(w)-36 b(e)378 b(used)f(in)g(our)g(ev)-72
b(aluations;)398 b(one)377 b(can)g(see)h(that)f(ab)36
b(out)377 b(half)4317 28770 y(of)545 b(the)e(callers)h(ha)-36
b(v)g(e)544 b(3)g(or)g(more)g(candidates)f(for)h(serving)g(BTS.)g(This)
g(fact)h(alone,)4317 30375 y(ho)-36 b(w)g(ev)g(er,)489
b(w)-36 b(ould)477 b(not)f(result)h(in)g(additional)g(energy)g(sa)-36
b(vings.)710 b(F)-108 b(ortunately)g(,)487 b(neigh-)4317
31981 y(b)36 b(oring)542 b(sites)h(can)f(ha)-36 b(v)g(e)542
b(di\013eren)-36 b(t)541 b(tra\016c)h(loads)h(at)f(a)g(giv)-36
b(en)543 b(time.)904 b(Fig.)543 b(1\(b\),)569 b(for)4317
33586 y(instance,)406 b(sho)-36 b(ws)400 b(normalized)f(tra\016c)g(at)g
(t)-36 b(w)g(o)400 b(neigh)-36 b(b)36 b(oring)399 b(sites)g(in)g(our)g
(dataset)g(for)4317 35191 y(a)434 b(24)g(hour)f(p)36
b(erio)g(d.)6268 36796 y(W)-108 b(e)441 b(form)-36 b(ulate)441
b(an)f(optimization)h(problem)f(to)h(minimize)f(the)g(p)36
b(o)-36 b(w)g(er)441 b(consump-)4317 38401 y(tion)448
b(in)f(a)g(GSM)g(net)-36 b(w)g(ork)447 b(b)-36 b(y)447
b(sh)-36 b(u\017ing)447 b(activ)-36 b(e)448 b(calls)h(b)36
b(et)-36 b(w)g(een)446 b(nearb)-36 b(y)448 b(BTSs)f(while)4317
40006 y(k)-36 b(eeping)408 b(in)f(c)-36 b(hec)g(k)407
b(the)g(MS)g(uplink)g(budget.)569 b(Our)406 b(w)-36 b(ork)408
b(is)g(v)-36 b(ery)408 b(similar)g(in)f(spirit)g(to)4317
41611 y(the)j(concept)h(of)h Fk(fr)-66 b(e)g(quency)441
b(dimming)526 b Fq(in)410 b([7)q(])h(alb)36 b(eit)412
b(at)f(a)g(di\013eren)-36 b(t)409 b(lev)-36 b(el)412
b(of)g(abstrac-)4317 43216 y(tion.)737 b(A)487 b(similar)g(approac)-36
b(h)486 b(is)h(also)h(prop)36 b(osed)486 b(in)g([8)q(])h(with)f(some)h
(rough)f(estimates)4317 44821 y(of)549 b(exp)36 b(ected)548
b(sa)-36 b(vings.)922 b(W)-108 b(e,)577 b(on)548 b(the)g(other)f(hand,)
576 b(use)548 b(site)g(lo)36 b(cations)549 b(and)f(tra\016c)4317
46426 y(traces)383 b(from)g(a)g(large)h(cellular)f(net)-36
b(w)g(ork)383 b(with)g(more)g(than)f(13)h(million)h(subscrib)36
b(ers)381 b(to)4317 48031 y(run)470 b(a)h(sim)-36 b(ulation)471
b(study)f(assessing)i(the)e(b)36 b(ene\014ts)470 b(of)i(dynamic)f
(equipmen)-36 b(t)470 b(scaling)4317 49637 y(coupled)377
b(with)h(call)g(hand-o\013s.)559 b(A)377 b(k)-36 b(ey)379
b(b)36 b(ene\014t)376 b(of)i(our)g(approac)-36 b(h)377
b(is)g(that)h(it)f(do)36 b(es)378 b(not)4317 51242 y(require)434
b(an)-36 b(y)434 b(additional)g(hardw)-36 b(are)433 b(and)g(w)-36
b(orks)435 b(within)e(the)g(GSM)g(sp)36 b(eci\014cations.)6268
52847 y(The)484 b(rest)f(of)i(the)e(pap)36 b(er)483 b(is)h(structured)e
(as)i(follo)-36 b(ws.)730 b(The)484 b(form)-36 b(ulation)484
b(of)h(Lo)-36 b(w-)4317 54452 y(Carb)360 b(optimization)g(problem)f(is)
h(giv)-36 b(en)360 b(in)f(section)h(3.)554 b(Exp)36 b(erimen)-36
b(tal)360 b(setup)e(and)h(the)4317 56057 y(results)371
b(are)h(presen)-36 b(ted)370 b(in)h(sections)g Fl(??)g
Fq(and)g(5,)384 b(resp)36 b(ectiv)-36 b(ely)-108 b(.)559
b(In)371 b(section)h(6,)384 b(w)-36 b(e)372 b(dra)-36
b(w)4317 57662 y(the)433 b(conclusions)h(highligh)-36
b(ting)434 b(the)f(p)36 b(o)-36 b(w)g(er)433 b(sa)-36
b(ving)435 b(strategy)f(for)g(pro)-36 b(viders.)25578
70015 y(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 15973 19406 a @beginspecial 0 @llx
0 @lly 281 @urx 190 @ury 1787 @rwi @setspecial
%%BeginDocument: figures/powermodel.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: powermodel.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: zartash
%%CreationDate: 9/24/2012
%%BoundingBox: 0 0 281 190
%%HiResBoundingBox: 0 0 280.6587 189.8106
%%CropBox: 0 0 280.6587 189.8106
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.1
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.1 x420 R agm 4.4379 ct 5.1039
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 88 8
%%BeginData: 7583 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD13FF7DA8FD7DFFA85252FD7EFFA8FD6EFF7D7D7DFD07FF7D7D7D
%FD04FFA8A8FD6CFF84A87DA87DFD06FF52A87DA8FFFFFFA8A8A8FFA8FFFF
%A9FFFFA8FFA8FFFFAFA9FFA8FFA9A8FFFFA8FFA8FFFFA8FFFFA8FFA8FFFF
%A8A9FFA8FFA8FFFFA9A8FFA8FFA8AFFFFFA8FFA8FFFFA9FFFFA8FFA8FFFF
%AFA9FFA8FFA9A8FFFFA8FFA8FFFFA8FFFFA8FFA8FFFFA8A9FFA8FFA8FFFF
%FFA8FF7EFD08FFA8A8FD04FFA8FD05FF527D52A8FFFFFFA8A8FD05FFA8FD
%05FFA8FFA8FD05FFA8FFA8FD07FFA8FD05FFA8FFA8FFFFFFA8FFA8FD05FF
%A8FFA8FD05FFA8FD05FFA8FFA8FD05FFA8FFA8FFFFFFA8FFA8FFA8FFFFFF
%A8FFA8FFA8FFFFFFA8FFA8A87DA8A8FD08FF7EA8A8FD08FF537EFFA87DA8
%FFA8FD19FF7DFD04A8FFFFFFA8FD1BFFA8FD1FFFA8A8A8FD0CFFA8FFA852
%52A8FD06FF7DFFFFFF7DA8FFA8A8FD18FF7D7D7D59FFA8FFA87D7DFFFFFF
%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7D7DFFA8FD17FF
%A8FF7EA87DFFA8FD05FFA8FD08FF527D7DFD0BFFA87DFFFFA8FD19FF7D7D
%7DA87DA852FD047DFFA87D7DA87D7D537D7DA8537D7D7DA8FF537D7D847D
%7D7DA8537D527DFD16FFA8A8A8FD12FFA8FFA87D52FD0BFFA8FFFFA8A8FD
%18FF7DA8A8FD057D7E7D597DA87D7D52A87D7D52527D7D527D52FFA87D7D
%7D527D7D527D7D52527DFD11FFA8A87DA8A8FD0DFFA8FD08FF527D7DA8FD
%0EFFA8FD19FF7DA8A8A87D84537D7DA87DFFA8527DFF7DA8FFA8A8FFFD04
%A8FFFF7DA87DA8847EFFA87DA8A8A8FD0EFFFD05A8FD18FFA8A8FD04FFA8
%FD0CFFA8A8FD1DFFA87D7DFD04FFA87DFD25FFA8A87DA8A8FD1CFFA8FD04
%7DFD0DFFA8FD28FFA8FD08FFA8FD17FFA8A8A8FD18FFA8FD09FFA87E7DFD
%0EFFA8A8FD27FFA8FD08FFA8A8FD11FFA8A87EA8A8FFA8FD19FFA8FD1AFF
%A8FD27FFA8A8FD09FFA8A8FD0DFFA9FD04A8FD28FFA87E7DA8FD0DFFA8A8
%FD26FFA8A8FD0AFFA87DFD09FFA8A87DA8A8FD21FFA8FD09FF7E7DA8A8FD
%0DFFA8FD26FFA8A8FD0DFFA87D7DFFFFFFFD05A8FD2EFF7D7D7DA8FD0DFF
%A8A8FD24FFA8A8FD0FFF5252FD05A8FD27FFA8FD09FFA8527DA8FD0DFFA8
%FD24FFA8A8FD0FFFA8A9A8FD2CFFA8FD09FF7DA8A8A8FD0DFFA8A8FD23FF
%7DFD0BFFA8A87DA87EA8A8FFA8FFA8FD33FFA87E7DA8FD0DFFA8FD23FFA8
%FD0CFFA87DA8A9FFFF7DA8FFA8FD35FFA8A8FD0EFFA8A8FD22FFA9FD08FF
%7EA8FFFFFFA8A8FFFFFF277DFD2CFFA8FD08FFA8A87D7DA8FD0DFFA8FD22
%FFA852A8FFFFA8A8A8FFA8FD05FFA8FD04FFA8A8FD34FFA8FF7DA87DA8FD
%0DFFA8A8FD21FFA8527EFFFFA8A8FD08FFA8A8FFFFFFA8FD2DFFA8FD08FF
%A87D7DA8A8FD0DFFA8FD23FF7DFD0DFFA8FD04FFA8A8FD36FFA87D7DFD0E
%FFA8A8FD1DFFA8A8A8FD10FFA8A8FFFFFFA8FFA8FFA8FD29FFA8FD09FF7E
%A8A8A8FD0DFFA8FD1BFFA8FFFFFFA8FD11FFA8FD04FFA8FFA8537DFD29FF
%A8FD09FF7D7D7D537DFD0CFFA8A8FD15FFA8FFFFFF7EA8FD15FFA8A8FFFF
%FFA8FFFF7D7DFD29FFA8FD0AFF7DA884FD0DFFA8FD15FFA8A8A8FD19FFA8
%FD07FF7DFD34FF7D7D7DA8FD0DFFA8A8FD11FF7DFFFFFFA8FD1AFFA8A8FF
%FFFFA8FFFFA8A8FD29FFA8FD09FFA87DA8A8FD0DFFA8FD0FFFA8FFA8FD1F
%FFA8FD04FFA8A8FD36FF7D7E7DA8FD0AFFA8FFFFA8A8FD09FFA8FFA8A8A8
%FD22FFA8A8FFFFFFA8FD2DFFA8FD09FFA87DA8A8FD06FFA8527DA8FFFFFF
%A8FD09FFA8A8FD26FFA8FD3CFF7D7D52A8FD06FF7DA87D7DFFFFFFA8A8FF
%FFFFA8A8A8FFA8FD28FFA8A8FFFFFF7DA8FD2CFFA8FD0AFFA87D7DFD06FF
%7D527DA8FFA8FFA8FFA8FFFFA9A8FD2BFFA8FD04FF527DFD2CFFA8FD09FF
%7D7D7DA8FD06FF7DA8FFFF52A8FFA87DA8A8FD2DFFA8A8A8FFA8FF7DFFA8
%FFA8FD29FFA8FD09FFA8A8A8FD08FFA8FFFFA884FFA8FD2DFFFD05A8FD3C
%FF7D7D52A8FD0AFFA8FFFFA8A8FD29FFFD05A8FFFFA8A8FD31FFA8FD09FF
%A87DA8A8FD0DFFA8FD27FFA8A8A8FFA8FD42FF7D7D52A8FD0DFFA8A8FD23
%FF7EA884A8A8FD09FFA8FD31FFA8FD09FF7D7DA8A8FD0DFFA8FD21FFA8A8
%A8FD0DFFA8FD3CFF7D7D7DA8FD0DFFA8A8FD1BFFA8FFA8A8A8FD4EFF7DA8
%FD0EFFA8FD19FFA8FFA8A8A8FD13FFA8FD32FFA8FD09FF7DA87EA8FD0DFF
%A8A8FD15FFA8A87EA87D7DA8FD14FFA8A8FD31FFA8FD09FFA87D7DA8FD0D
%FFA8FD13FFFD05A8FFFFFF277EFD50FFA8A8A87DFD0EFFA8A8FD0FFFA8A8
%7EA8A8FD05FFA8FFA8A8FD13FFA8A8FD31FFA8FD08FF7DFFFFFFA8FD0DFF
%A8FD0DFFA8A8A8A9A8FD0BFF7EFD4EFFA8A8FFFFA8A8FD06FFA8FD06FFA8
%A8FD09FFA8A87DA8A8FD0FFF7DFD45FFA8FD08FF7D7D537DA8FFFF7D7D7D
%A8FD07FFA8FD07FFA8A8A8FD15FF84FD11FFA8FD31FFA8A9FD09FF7D7DA8
%FFFFFF52FF52A8FFFFFFA8A8A8FFA8A8FFFFFFFD05A8FD16FFA8A8FD43FF
%A8FD0FFF7D7D7EFFFFA8FD047DFFFD05A8FD1CFFA8FD10FFA8FD3CFF7DFD
%05FF52FFFFFF52A87DFF7DFFFFA87DFFA8FD1DFFA8FD10FFA8A8FD31FFA8
%FD09FF7E7D7DA8FD06FF7DA8FFFFA8FFFFA8FD20FFA8A8FD4CFF7D7D7DA8
%FD06FFA8FFFFFFA8FFFFA8A8FD1FFFA8FD10FFA8A8FD31FFA8FD09FF7D7D
%A87DFD0DFFA8FD07FFA8FD18FFAFFD10FFA8FD3CFFA87D52FD0EFFA8A8FD
%06FF7D52FD21FFA87DFD38FFA8FD09FFA8A8FD0FFFA8FD07FFA8A8FFFF7D
%A8A8A87EA8FFFF7DA8A8A87DA87DFD05A87DA8FFA87DA87DFF7DA8A97D7D
%FF7DFFFFFFA8FD31FFA8FD0AFFA87E52FD0EFFA8A8FD06FFA87DFF7D7D53
%7D52527DA87D537D527D7D527D527D5352527DA8FF7D7D527D5284527D7D
%7D5252A8FD35FFA8FD09FFA87DA8FD0EFFA8FD07FFFD067DA87D7DA8FFFF
%FD057DFF7D7D7DA852A852FFFF7D537D527D7DA87D7D527D7DFFFFFFA8FD
%3CFFA88452A8FD0DFFA8A8FD07FFA8FD09FFA8527DFFA8FFFFFFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFA8A8FD31FFA8FD09FFA87D
%A9FD0EFFA8FD08FFA97DA8A8A87DA8A8A8A9FD1BFFA8FD40FF7D7D7DFD0E
%FFA8A8FD07FF7D7D527DA8FD047DFFA87DA8A87DA87DA87EA87D7DFFA8A8
%A87DA8A87D7D7DA8A87DA8A87DA8FFFFA8A8FD31FFA8FD09FFA8A8A87DFD
%0DFFA8FD07FF84FFA87D7DFF7DFFA87DA8A8FD047D5252527D527D7DFF7D
%7E7D7D7DA87D8453A87D7D7DA8A8A8FFFFA8FD31FFA8FD0AFFA87D52FD0E
%FFA8A8FD06FFA87D7D597DA87DA8A852A8A8537D7D527E527D7D7D527DFF
%A8527D7D7E7D7D527D52FD047DA8A8FD35FFA8FD08FF7D53A8FD0FFFA8FD
%08FFA8A8FFFFFFA8FD04FFA853FD07FFA8FD0BFFA8FF7D7DA8FF7DFFFFFF
%A8FD31FFA8AFFD07FFA87EA87EFD0FFFA8A8FD11FFA8FD17FFA8FD39FFA8
%FD08FF527D527D7DFD0DFFA8FD6CFFA8A8A8FFA8FD0EFFA8A8FD30FFA8A8
%FD31FFA8FD1AFFA8FD7FFFA8A8FD31FFA8FD31FFA8FD1AFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8A8FFFFA8FFA87DA8FD14FFFD6AA8527DFDFCFFFD49FFA87DA8
%FD7DFFA852FD2CFF7D7DFD50FF7D7D7DFD2BFF7D7DFD50FF7D7DA8FD2BFF
%847DA87EFFA8A8A8FD78FFA8FD047D537D53A8FD38FFA8FFA8FD09FFA8FD
%05FFA8FFA8FFA8FD29FFA8A8A87E527D7DA8FD37FF7D7D527DFD06FFFD04
%7DFD05FF7D53FF7DA8FFFF7DA8FD65FF7DA8FF7D7DA87DA8527D527D7DFF
%A87DA8FFA87DFFA87E7DA87D7DA87DA8A87D7DA8A8A87DFD5BFFA87DFF52
%A87D52FD087DA8FFFFFF7DA87D7DA87D7D7E7DA8FD067D52527DFD5AFF7D
%7DFF52A87D527D538452A8527D52A9A8FFFFA827A852A8FD057D52527D52
%A827527DA8FD5AFFA87DFF7DAFA8A8A8847DA87D7DA8A87DFD04FFA8FFA8
%7DFF7DA8A8A87DA87DA87DA8A87DA8FDFCFFFDA9FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2012-09-24T01:34:03+05:00</xap:CreateDate>
         <xap:ModifyDate>2012-09-24T01:49:52+05:00</xap:ModifyDate>
         <xap:MetadataDate>2012-09-24T01:49:52+05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>176</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O6jq2laZCJtSvYLKFjQ&#xA;SXMqRKT4VcqMVVbS9s723W5s547m3f7E0LrIjfJlJBxVWxVAWXmDQb64NvZala3VwK1hhnjkcU6/&#xA;CrE4qgfPNnd3nlDV7a1uzZSSWsoa4VeThOBLhNxxZlqA3brTFUfolhd6fpFpY3d2b+e2jWJrxkCN&#xA;IE2VmUFhy405Hud9umKo7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqwfX30jS7y91nzLp9hd2Sv6cF9PNA08cQQHgI7nhGoDMdo3qepUnclU28ojyjfW41ryw&#xA;iQ2lzUS/V4jbxytseTxFUqy9mpX3pgVkWKvHvy98k61Poug6tdi0SDSZ7m9tbO3s/R1GaUNOiRTX&#xA;csvHi3OuyLXYE0wqztdcfWvJuq3jW/1crDdw/C/qxP6aMpeKQBOaV25U6g/PAqdjTLYQyxc5+ExD&#xA;OfrE/IEGvwvz5IPZSMVX/UIOcL8pq24CoPWmoQP5xypIfd64q0NOtwJxzm/0k1k/fzbbk/u/j/d9&#xA;f2KYq46dbkQDnN/oxrH+/m33B/efH+86ft1xVv6hBzmflNW4BVx601AD/IOVIz7pTFVv6Nt/Shi5&#xA;z8YG5IfrE/ImtfjbnycezEjFUgv/ADFb2eu6pYjS9TuJraxF9NNFPF6DwvyUCFZLpCjlomH2F3HX&#xA;cEqozRJrfV9KspltL+0tJ4UvIHnuT6n70khHaG4lcnjRqElaEb1qAqqx39m/mm50wxXSXkdpHc+q&#xA;0p+rPFIxj+BBKaOrJvWMexxVGfou2+rfV+dx6fLny+s3HqV6f3nPnT2rTFVX6nD9ZW45S+oq8Qvq&#xA;y+nTpvHy4E+5FcVUxpdsIHg5z8JG5MTcTl6j+V+fNR7A0xVU+pQ/WI5+UvOJeCj1peBFCPij5cGO&#xA;/VgTiqmNMthDLFzn4TEM5+sT8gQa/C/Pkg9lIxVf9Qg5wvymrbgKg9aahA/nHKkh93riqVw3unv5&#xA;iv8AQPTvEuTbR3sk7TuYmjlkdB6JErPGQ6MCAq/diqZnTrciAc5v9GNY/wB/NvuD+8+P950/brir&#xA;f1CDnM/KatwCrj1pqAH+QcqRn3SmKrP0ZbenDHzn4wEsh+sT8iSa/G3Orj2auKr/AKjD6ssvKXlM&#xA;vFx60vEA/wAi8uKH3UA4qsOl2xgSDnPwjbkpFxOHqf5n582HsTTFVT6nD9Za45S+oy8Svqy+nTpt&#xA;Hy4A+4FcVQF6dDsoFtLq8kiMjepFG13P9YcjaiESes3+qv3YqpfWrie4W4sNPupHUcEkuppLS3oN&#xA;jyictJX3MB+eKqa+XtSnhaK51Ka2idvUMdnJN6gP8puJ3lYrT+RUxVNdKljl0uzliaR45II2R5iD&#xA;KVKAgyEdWPf3xVFYq8r1vytNrHmjU7nSfK9u+oJcqP8AEuoXZEaMkCL+4giDuePQqQFLdz2KvQNA&#xA;i1az0+3tNc1CC/1UhiZoYhbBwtK8YuT/AGaipH3YFTTFVO5tobm2ltp15wTo0cqVIqjjiwqKHcHF&#xA;Unv9KsNL8p6lZ2EXo2yWk/CPkzBQISABzLUAA6YqnmKuxV2KuxV2KuxVgfmjyNd635k1DULrRtI1&#xA;O0fTFstNa/kLSxzo0j8+DWsyxgmalVcn4Qe9AqxbzB5M8yWWlTS3WmWk8dxYaPps8di1zdyPLp00&#xA;haaSJLCbmjRyAfHDKPhAZGU/Cqpaf+W2vz6XZS6TpFhYpbwW4sjeXM8M6XFvqBumuOA0+Ao0sZK1&#xA;MSMoJHHjhVMvPXlDUL3zBo9kYX8xXVza6jFJfapbhbe2EyReiGuLGyWMem6O8YcBuX7SkqcCq6/l&#xA;Fd3OqU1U2d3acpTPrB5NqF1BLafV/qk8bR+mY0ekit6hoVWig1bCqAt/yY11rO7jurnT4p7mxUK9&#xA;tFxEepRxta+slYwQkltTmdzzLGhGNqjfK35Y3uneYdGnu7XT5LfTVu5LqI3CTSxtdSRS2zQRRafY&#xA;wrHFNasyLxXizMy7jcKu1z8t9bvPNV3qsOk6PPbT6hBdj17mWOSSGO2a3nikVbOVf3/KrjkQ1KNX&#xA;FUNpP5VeZ4m0v67+jhNY/UfQ1KOaeW6sksJSzQ2paGPnHcR/C4ZlpyaoegwqgB+Tvm0xmP8A3FxV&#xA;tbaG8lilZm1Ca1md3luluLO4i5XCycnLJLRlAowNVVep+U9Im0fy3p2lzszSWcKxMWm+sH4eg9X0&#xA;rbmANh+6X5YFTbFXYqlsnmLSQ7xwTG8mQlXitFa4ZWH7L+kGCf7MjFVv1rX7g0gso7JD/uy7kEki&#xA;n/jDAWVh/wA9hirv0NcT76hqNxPWtYYG+qxAn+X0aTU9mkbFUXZ6bp9krCztorcPu/poqlj4sQNz&#xA;7nFUTirsVUbL619Tg+t0+temn1jj9n1OI509uWKq2Ksb80eXNAumGoXuoXGjTbI19aXr2JfbZZCr&#xA;Kj7dOQJ8MVV/K2leX7SCWbSrp9Rkc+ncajNcteSuV+LiZnZ9hy+ytB7YqnuKuxVLvMf/ACj2qf8A&#xA;MJP/AMmmxVMcVdirsVdirsVdirsVdirsVUL68gsrSW7uG4wwqWam5NOgUd2J2A7nFVHRbaa20m0g&#xA;nAW4SJPrABqPVIrJSn+UTiqNxVK7/wBey1BdTiiee3kiEF9HEvOQKjFopEQfE3Dm/JV+I12BpQqo&#xA;61vbO6gjntpkmhlqI5EYEMRWoFO4oa4qrYqpXV3a2kJmupo7eFftSysEUfNmIGKoD9PRSmlha3N9&#xA;/wAWRR+nFTswlmMUbj/ULYq4x+YrkEPLb6eh2IiDXMtPESOIkU+xjcYq3/h3T5d78yaix+0Lt/Uj&#xA;P/PAcYAfcR4qmMcccaLHGoSNBRUUAAAdgBiq7FXYq7FXYq7FUHo4thpFiLUs1sLeIQM/2jHwHEtS&#xA;m9OuKozFWD/mjDcyW+jvZQxXeoxXbtbWcln9fMoNvIr8YmmtoxQGpd3AHjU0KqYfl6LwaPcLfRw2&#xA;94tywntYLZbMQt6UZCPCsk6huJDVEjAgg17BVlGKuxVLvMf/ACj2qf8AMJP/AMmmxVMcVdirsVdi&#xA;rsVdirsVdirsVSWxiOsSRapdD/Q0b1NLtq/CV/YuZB3Zx8SA/ZFP2uiqdYq7FUHe6xpllIsNxcIt&#xA;w4DR2y1eZwSQCkScpG6HouKsP8zeW9T1/UrPUNENxpM1nMl167hLaO5kj2X10IklcBSVAaJTQn4q&#xA;YVZR+j9XuP8AezUTEv8AvmyjEQIPUNJIZnP+snDAqra6FpNtN9YS3D3Q6XUxaaenh60peSngOWKo&#xA;/FXYq7FXYq7FXYq7FXYq7FVCw+sfUbb6zGsNx6SetElOKPxHJVoTsDsN8VV8VYl50upXtbeEabdS&#xA;XrXbR2ZtLyG0uFCxO3rJI0ijgyqwKt9K4qrfl+YRpFzClnNZzQ3TpdrdXK3lxJNwRjJLMrOGZgw/&#xA;a6U7bYqyfFXYql3mP/lHtU/5hJ/+TTYqmOKuxV2KuxV2KuxV2KuxVjP5i+YBoXlS8vHtbi5ikX6q&#xA;5tBzljNx+6SQJUFgHYDbffFU6ivY49Mjunt5bdAik2qxmWWOtB6Zjg9WrL0ISoHyxVdFcXVzaPJH&#xA;A1pMaiFbkKe3wsVjcmnsSD8sVdaW14scgvLr6xJJ19NBCiilPgALOPpc4qltlo+lQa5dxRWcKxpB&#xA;ZzKOC/3qyXAElSPt/wCV1xVKPNfla7udb8t3GmXselx2V884hjt1YSytBIz+qQyfCyIUIG+9a7DF&#xA;WVw6bp0BjMFrDEYQViKRqpRWNWC0GwJ3NMVRGKuxV2KuxV2KuxV2KuxV2KuxVCaSIRpVmIZTPCII&#xA;vSmYEM68BxYg71Yb4qi8Vee/m1beXTHpM2qW+jJLLcNbx6priCSCBfSdyPT5RGQtxoqlgAd8VV/y&#xA;38z+TXgfQNJutIF3BNJSDRuCQzqEV2uEhUuyD4uLVY7j7R2xVneKuxVLvMf/ACj2qf8AMJP/AMmm&#xA;xVMcVdirsVdirsVdiqFvtQS0CAwzzySV9OOCJ5KkU2LAcE6/tsMVdc/pGSBDZtHbStQv9YQy8RTp&#xA;xjkSpr/l4q1PpsF3ZJa6h/pSDiZeXwq7LvVlWgpXfidsVV7a2trWBILaJIIE2SKNQiKK12VaAYqq&#xA;Yq7FUug/5SG9/wCYS0/5O3OKu1T/AHu0j/mLf/qEnxVKLTzVrUvm4+Xp9LWEqJrp7lZi6ixDGO3l&#xA;+wAJJpQf3ddlBNe2KsoxV2KuxV2KuxV2KuxV2KuxV2KofTef6OtecItn9GPlbqKLGeIqgA7L0xVE&#xA;YqxD8xbq7ji0q3tp7qE3N0wb9H20V1dkJBI1YhOksS0p8RIrx6HxVRPke3c6dLJdNezzpcN6c2qw&#xA;QwXQBiQUCwqiBdzTio/iVWTYq7FUu8x/8o9qn/MJP/yabFUxxV2KuxVBnU4Te/U44p5JQaSOsTiJ&#xA;RStTKwWM/JWJ9sVdOmrPdL6MsMNotC1UaSV96kA8kVPDo30Yq690jTr51a9gFyqjiIpSXi+ZiYmM&#xA;t/lFa4qjMVdirsVdirsVdiqXQf8AKQ3v/MJaf8nbnFXap/vdpH/MW/8A1CT4qqw6bFFqt1qQd2mu&#xA;oYLdkJHBUt2ldeIA6kztXFUZirsVdirsVdirsVdirsVdirsVQulU/RdnSc3Q9COly1QZRwH7w1JP&#xA;xdd8VRWKsJ/NWKyfSdPe71K10tIrwMlxeX1xp6FjDIvFZLd4nZqE7VxVd+VEsUmgXhiuY71FvpVW&#xA;7huJ7uKQCOOjRz3LSSSCm32iAajtTFWaYq8b0HQPMWp6tdXun2rW0kXmS+abXzqMwP1W31KT1IBZ&#xA;AFGDRr6QDbd8KvQ7nXdN1nytrVzYOzwQRXdu7srJV4oyGoGAPHwPfAqbWWp296zegkvpqAfVkiki&#xA;Rq/yGQLy8ajb3xVq1XVzO0l28CwEEJbxK7MDUUJmZlDbdvTHzxVuLSbCO8a9EZe6NeM0rvKyBuoj&#xA;5lvTU+CUGKovFXYq7FXYq7FXYq7FXYq7FUmh1HTx5jvkN1CHEFnAVMi19VpLkrHSv2yOi9cVSbzX&#xA;quvNrHlxPLzWN3bzXzxXTyuWMJWCQPJ8DjmFRiOGx5cd98VZVDqWnTmMQXUMpmBaIJIrF1U0YrQ7&#xA;gHY0xVEYq7FXYq7FXYq7FXYq7FXYq7FUNphJ020Jg+rH0Y62w29P4R8Hb7PTFUTirDPzO1W90zT7&#xA;G4tLqC3lM7xxicK3KRoXCNxKSsyRn4nVAGIHXCFRP5c3r3Wi3A+uzahb2900NtdXIUTOixxkl+Kp&#xA;9qRmYCmykDtgVlWKqcNvbwKywRJEru0jhFCgu5LOxp3ZjUnviqT6lpdtp/l7XfQLH62l3dS8jX95&#xA;JEeVNhttiqeYq7FXYq7FXYq7FXYq7FWiQASTQDck4qlp8xaa5K2TPqMlePGzUzLy/laUfuUP+u4x&#xA;Vr1fMVz/AHcMGnRk7NOTcS08DHGY41PykbFXfoCCb/joXNxqG/2Jn4REfytDCIonX/XVsVV7O2gt&#xA;ryWG3ZI4FhhCWUYCrH8ctXCjYc+nT9nFUbirsVdirsVdirsVdirsVdirsVdirsVQ2mAjTbQGf6yf&#xA;Rjrcjf1PhHx9/tdcVROKsR/MRWNvpj21xqEOpx3LNYx6VFby3Up9CQOgN0rRInE1ZmoOg6kYqjfJ&#xA;JuP0XOLq7vLq8FwRcrqSQpdQv6aEROLYCH7NGBTYhh33xVkOKuxVLvMf/KPap/zCT/8AJpsVTHFX&#xA;Yq7FXYq7FVOe4gt4WmuJFhhQVeSRgqqPcnYYqk1/5y0e0gE4LTQF1jFyOMVvyc0WlxO0ULVO3wuc&#xA;VRCr5gvFDGa3sIWp/cVupSp35LI4jjU/ONxirY8u6c5DXofUZK8uV43qry8Vi2hQ/wCogxVMwAAA&#xA;BQDYAYq3irsVQsZT9KXAEJWT0IeVxvRxzlog7fBuf9liqKxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ko&#xA;XSih0uzMcJt4zBHwt2rWMcBRDXf4emKorFWMm1l8xXWoRXM31a1066MFlLaGSC9jlWNC7tKshXiw&#xA;kI4cKFaE4qreTbW0srS/0+BjLJZ3jx3V28jzSTytHHL6kjyF2L8JFVt9qUG22KsgxV2Kpd5j/wCU&#xA;e1T/AJhJ/wDk02KpjirsVQ95qFhYxiS8uIrZGPFWldUqfAVIqfbFUH+mZ59tPsJ5+wmmX6rED/lG&#xA;YCUindI2xV31TXLne4vVs0O4is0DOPZppw4YfKJTiqpBoOlQzLOYfXuUNUuLlmuJVP8AkPKXZPkt&#xA;Biq3zH5e0zzFo8+j6pH61hcmMzxdOQikWUCv+sgxVC6Ki6K0OgyIkdsAw0mWNAiPGg5GFgtFEqCp&#xA;/wAtRyHRqKp5irsVdirsVQ6er+kJqyqYfSi4QD7Styk5OR4OOIH+qcVRGKuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVD6d6v6PtvWlWeb0k9SdN1duIq6kdmO+KojFWJ+Z/JPlfVtUguLq7utN1S7rEslheS2&#xA;clyI05cHWNgJOKJ4VAxVPtF0TTNF0+PT9NhEFtGS3GpZmZjVnd2JZ2Y7lmNTiry3yJoGuXFv5d1x&#xA;IY7C1tWludS1X69cSz3UIWVPRa14iOjMVJLMacdt8Ks2Xzle6nbQN5e0i6uBeo5t9SuUjis4njle&#xA;JluVMq3KkGKtFiPUdN6BVDT9e1XXfJer6nfWiWUMlvOtnAOTScUg4ylyev78SBaD7IB74VT39J6n&#xA;cf7w6c3DtPeN9XQjxVAJJq+zouBXfozU7j/e7UWCHrBZoLdSPBnJlmr7o64qiLPSNNs5Glt7dVnc&#xA;UkuDV5n/ANeVuTt9JxVGYq7FXYq7FUJqmnx39lJbMxjc0aGYfajlQ8o5F90YA4q7Sr1r3Tba7dQk&#xA;k0atLGNwr0+Nf9i1RiqLxV2KuxVCRGD9LXIVGFwIIDJIfslOc3BR7g8q/MYqi8VdirsVdirsVdir&#xA;sVdirsVdirsVdiqE0gwHSbI26NHbmCIwxvuypwHFW9wMVReKsD/N6CZ9H06dRMkNrepNPcwSXSMi&#xA;cGRlP1R4pP3gcry5UX8MIVH/AJaqo0a8eJLkWb30xsZ7x53lngCoiTf6UzzANxIHI9qigIACsqih&#xA;ihjWOJFjjXZUQBVHyAxVD6VpdtplkLO2LGISSyjmanlNK0rbgD9pzTFUBqGnwad5OvLG3LGG2sJo&#xA;0aRuTmkTbs3cnqcVTrFUPqF9b2FlPe3PMW9uhklMcckzhVFSRHEru3yUHFVPR9XsdY0y31OwZ3sr&#xA;pfUt3lilgZkrQN6cyxuA3VSV3G42IxVGYq7FXYq7FXYqgtItpre0kjmFHa5upAKg/DLcySIdvFWG&#xA;Ko3FUDq+tabpEMM+oSNFFcXEVpG6xySD1rhxHEremrcQzkLyai1PXFUdiqgn1n69LyZTbelH6SD7&#xA;Qk5ScyfYjhT6cVV8VdirsVdirsVdirsVdirsVdirsVdiqhY/WfqNv9aZXufST13T7Jk4jkVpTauK&#xA;q+KsY8/XF1b6XDLawepcJIzRzG9+oLCRE9JHkPwsO3Btj32xCqnkDVptV8tQXk2ppq0rMwa7jg+r&#xA;rUfscasG4/zrs3UYqyPFXYql3mP/AJR7VP8AmEn/AOTTYqmOKoDXhcNol+ltbvdXDwSJFbxmNXdm&#xA;UgAGVo0HX9phirBI188v5P0bRI/L1/ZnToLOPVCt9aW8twluI45IbSW2uWZS27cnePYUrVtlUru/&#xA;J/5mrZQNaXV9Jcy29ywSbU5g1u9vc+vYRS8J1SV5oP8AR5XWor8TcupKo/ztD5m0X8t768n1kWKL&#xA;bG4uEaW5+upeyyc1SHUPrYCorsqLH6ZBAp0OBUDLovn65tzNbpq0mj3L3j6baRatGL23aWG3+qTy&#xA;3QuOM0HqpO3p+q9FdfhalAqu1Dyh+ZcOpSGzvLy5iMiyG4/SMyxn67aC1uVSJp14pbTg3KDjtULH&#xA;4YVUdc8sfmet/q/1OfVJrdQy6UtrdhVeMPF6HKafUYyskQUlj9WHP4ubvUYqyrznpOtSW3l2LSbf&#xA;VpoILpm1VLTUBBcfVHt5FZJJJLqH1H9V4yCHPHieJG1QrEdJ0f8ANRbe3jv7TV5IWg046zE2pwCa&#xA;eWAzpdrZyx3dYfUDwPs0YYI1SGO6reo+V/zJlhsI7+3vtW+qzafcWvp30KrGltqJnlju45JoVuJ/&#xA;q6xgSHkOS7Fe5Vk35Y6T58sLjUG803NxM8qRjjKVe3Mys/OW3c3l3IFcMPg9KFRQUQGuBWZRG2/S&#xA;9yFDfWRbwGVj9kxl5vTA9686/RiqMxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoPRzbHSLE2oZbY28Rg&#xA;V/tCPgOIald6dcVRmKsO/MuygurLTjdMLezgujLNqX1UXr2x9J1R0iZJUUktT1HRgvzIIVTLyVqF&#xA;1faO0kss1zbxytHY31xB9VluIFVSJWh4x8fjLKPgWoANN8VT/FXYql3mP/lHtU/5hJ/+TTYqmOKq&#xA;F9PJb2VxPGnqyQxvIkY6sVUkL9OKvD9Z1+Sx1W2lg16W4vZ7HSb6VDrFykvr3dy7TfU9LDNBcc4S&#xA;tIG4KF4kda4VZJc2NiuveZbK280X0F7p9tbOnq6ldzrHJd+qknqW4lIRTzjoVRSnwlad1UZD5wns&#xA;vItvqdleW0Ea6lHZXF/qE8mp2axPMIGlhuzJbPLEtQyySN2Ibf4gFSif81fOcssVrZWtiNQkthIt&#xA;nJDcM8oazluRex0lT/RfUiERBFQWHxE0BKoWL84/N02j39/Hb2XG1nt4Y53gMMXp3sfr29wzT3sM&#xA;axlBwPKVfiYGv7JVZb5Z86a1qugeYNVkudMeTTmlitraArxhlji9TjcXH1l4noXCEgovwk1APwhW&#xA;Myfm35nu5pItFbT7grpsl0qy28gkNxEonIjRLthLG8CyBSrAFh8LOAcNKitS/M2+tL1pRqukwrcL&#xA;ZyWj3IlRBZ3eoSwLK8Zu1Xa39OXnQbddiOKqHsvzc8wX9zCLW60RYW07606SSxK73HoFisXq3sDE&#xA;CTenp8OIKmUNXiqy/wAm67PqOoGT6y1zbajp1tqYQghYZJGeJhHVpeMcgjBUByKhipo2BWVJ9a+u&#xA;S8qfVfTj9L+b1OT+pX248KYqrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVGy+tfU4PrdPrXpp9Y4/Z9&#xA;TiOdPbliqtiry3XdH8yv5zutasvLt5fXlpeQHT9TXUIreMWqRxetbrbySICkn7xWYr1Ne2FWfeXt&#xA;R1i/tZpdV01tKuEmKJas6SngERg3qRko1Sx+z8uoOBU0xV2Kpd5j/wCUe1T/AJhJ/wDk02Kpjirs&#xA;VQ1hp1np9v8AVrOP0YOTusQLFVLsWYKCTxWp2UbDtiqJxVA6toun6tFBFfLIyW88d1F6c0sBEsJ5&#xA;RsTCyFgDvxO3tiqOxV2KuxV2KuxVK18t6SusvrAWb6655sDc3Bg5+mIvUFsZPQD+mOPMJyp3xVF2&#xA;2nWdtcXNzDHxnvGD3MpLMzFVCqKsTRVA2UbDfxOKrIhbfpe5KlvrJt4BKp+yIw83pke9edfoxVGY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FUHo4thpFiLUs1sLeIQM/2jHwHEtSm9OuKozFXYq7FXYq7FUD&#xA;rkMs+iahDEpeWW2mSNB1LNGQAPmcVWfp6x/31d/9IV3/ANUsVd+nrH/fV3/0hXf/AFSxV36esf8A&#xA;fV3/ANIV3/1SxV36esf99Xf/AEhXf/VLFXfp6x/31d/9IV3/ANUsVd+nrH/fV3/0hXf/AFSxV36e&#xA;sf8AfV3/ANIV3/1SxV36esf99Xf/AEhXf/VLFXfp6x/31d/9IV3/ANUsVd+nrH/fV3/0hXf/AFSx&#xA;V36esf8AfV3/ANIV3/1SxV36esf99Xf/AEhXf/VLFVBNeh+vTcra5Fv6UXpyiyuuTPyk5qf3fRRx&#xA;I27nFVf9PWP++rv/AKQrv/qlirv09Y/76u/+kK7/AOqWKu/T1j/vq7/6Qrv/AKpYq79PWP8Avq7/&#xA;AOkK7/6pYq79PWP++rv/AKQrv/qlirv09Y/76u/+kK7/AOqWKu/T1j/vq7/6Qrv/AKpYq79PWP8A&#xA;vq7/AOkK7/6pYq79PWP++rv/AKQrv/qlirv09Y/76u/+kK7/AOqWKu/T1j/vq7/6Qrv/AKpYq79P&#xA;WP8Avq7/AOkK7/6pYqoWGvQ/Ubb6zbXMNx6SetElldcUfiOSrSM7A7DfFUu1r8wdO0rU9Lsnsb+c&#xA;ao8kSvDaXBeNkCkMYjGGZKE8mWvHbbfZVlOKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;pFqHmhbPzPYaEbcM99GZY5WlSMkKWD+mr09T06KXAblRgQG+Kiqe4q7FXYq7FXYq7FXYq7FXYq7F&#xA;UPqF/a6fYXF/dv6draRvNPJ14pGpZjQewxVuwvra/soL21cSW9wiyxOO6sKjpiqvirRRC4cqOYBA&#xA;am4BoSK+9BireKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsT1XyJ+kfMy6tJdL9X9axu&#xA;jCYiZkl05pDGsUwccY39U8l4n9r+c0VZZirsVdirsVdirsVdirsVdirsVS/zDprapoOpaahUPe2s&#xA;1uhcVUNLGVBPsCcVYRaeZfOGiR2+mvotqtnp6wW8qQvM70RbJJDHxjCNVr5iu37B+gqp+XvzQ8wa&#xA;ne2NvPpKwJdXX1e4lpMRDHwgdJCQHUiR5mhWrKQ4BYD4gqr0vArsVdirsVdirsVdirsVdirsVdir&#xA;sVdiqE1XS7HVbCbT7+ITWdwAs8LfZdQwYqw7q1KEeGKvIvqGkeV9F85+atC0XTk1fy7q901g5jEK&#xA;pF9ViRov3KhigWZiI6gcu464qyLWPPPmzS/NFhpTmwuYZbqytr8QW89Yvr8sipylkmRFKKF4hVcy&#xA;UZisQpirz6Xy3qep6jaahf3WnXNzqHmq+0a8Z7KcieGNrhuE6/XOEsCm2X04mXknw0fY8irL/KXm&#xA;XV49P0zy3oVnpej3ksurRRmQT3FqTpc4hEYb1IppZZeXJpGNaAtxPTAqf/mR5dh1zylb6tJZW1/q&#xA;+ielqlmoVZo5DCUlngjZx8Uc6Jx9/hPbFUkj1q11fzfa655bj0+G81q0lh03W76BpUeKxSN5UHpS&#xA;wMXkkuSh+P4VhbY4VSm6836rDq0/m6zjggvpfLlnc3NvcGWe331BoZPSpJFxVlFVYfMg4qnEn5l+&#xA;Zz5ml0C2bS5Zl146QZuM3OGCS0+swSPAJTzbkkqMeaAlKADfiFSyf85PNdhpNlqN5Z2Vz+kbO7eC&#xA;C2SRClxaXsVl6jvLNxMT+sXK/DxA+2euFXofkrVvMuoWNz/iKyjsr6CcpF6ZhAlgZQ8chihuL4RE&#xA;1pxMrdK98CsixV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpIvkjyWkFz&#xA;bpoGmrb3pVryEWkASYxkshlXhRyrEkcumKqsvlLyrLJHLLo1jJJFHHDE7W0LMscBDRIpK7LGQCo7&#xA;dsVQqfl75BjKGPy1pSGJucZWxthxfb4lomx+Eb4qqjyP5KFgdPHl/TRp5k9c2f1OD0TLTj6np8OP&#xA;LiKcqVxVOUjjSNY0ULGoCqgAChQKAADtiqXXHlfyzc6bFpdxpFlNpkBrBYyW8TQIdzVIipRep6DF&#xA;Wp/Kvlie4kuZ9HspbiWH6rLM9tEztBTj6LMVqY6CnE7YqoSeRvJMvpep5f01/QNYOVnAeBAVapVP&#xA;h2RRt4DwxVZF5B8iQuskPlzS43RWRGSyt1Kq4IZQQmwbkaj3OKpnpekaTpNqLTSrKCwtAxcW9rEk&#xA;MfJup4RhVqcVReKuxV2KuxV2KuxV2KuxV2Kv/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:899E6003BE05E2118227C7BD0A0FB2D8</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:70A2A0AFBF05E211A0B5F3485C80EF56</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>TIMES.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -189.811 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 189.811 li
280.659 189.811 li
280.659 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.619912 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
152.434 43.8271 mo
263.661 10.7412 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
.625583 lw
43.6641 112.439 mo
153.172 78.2212 li
@
.581109 lw
152.981 44.4561 mo
152.981 78.561 li
@
19.1719 109.924 mo
21.3911 109.924 li
22.1211 109.928 22.645 109.792 22.957 109.514 cv
23.2661 109.245 23.418 108.854 23.4224 108.357 cv
23.418 108.003 23.3291 107.698 23.1489 107.436 cv
22.9653 107.186 22.7271 107.018 22.4302 106.932 cv
22.2349 106.881 21.8789 106.854 21.3682 106.85 cv
19.1719 106.85 li
19.1719 109.924 li
cp
18.0361 114.432 mo
18.0361 105.842 li
21.2739 105.842 li
21.8442 105.842 22.2822 105.87 22.582 105.924 cv
23.0039 105.995 23.356 106.131 23.6411 106.327 cv
23.9263 106.525 24.1572 106.799 24.332 107.154 cv
24.5039 107.514 24.5903 107.904 24.5942 108.327 cv
24.5903 109.061 24.3599 109.682 23.895 110.182 cv
23.4263 110.686 22.5859 110.936 21.375 110.936 cv
19.1719 110.936 li
19.1719 114.432 li
18.0361 114.432 li
cp
f
28.0322 116.831 mo
27.3442 116.831 li
27.3442 112.463 li
27.1763 112.624 26.9609 112.779 26.6963 112.936 cv
26.4263 113.096 26.1841 113.213 25.9731 113.288 cv
25.9731 112.628 li
26.356 112.448 26.6919 112.225 26.981 111.971 cv
27.2661 111.717 27.4692 111.467 27.5903 111.225 cv
28.0322 111.225 li
28.0322 116.831 li
cp
f
29.8521 110.792 mo
33.0903 110.792 li
33.0903 111.851 li
29.8521 111.851 li
29.8521 110.792 li
cp
f
37.4692 109.061 mo
38.6719 109.061 li
36.3252 113.995 li
36.3833 114.521 36.4111 114.975 36.4141 115.378 cv
36.4111 116.471 36.207 117.021 35.7974 117.021 cv
35.5 117.021 35.3521 116.792 35.3521 116.331 cv
35.3521 115.725 35.5713 114.975 36.0083 114.068 cv
35.9219 113.506 35.8013 112.831 35.645 112.038 cv
35.4893 111.245 35.3291 110.674 35.1719 110.331 cv
35.0083 109.982 34.7783 109.811 34.4771 109.811 cv
33.9849 109.811 33.7231 110.182 33.688 110.917 cv
33.4771 110.917 li
33.4771 109.628 33.8599 108.979 34.625 108.979 cv
35.0669 108.979 35.395 109.245 35.6099 109.768 cv
35.8213 110.292 36.0391 111.424 36.2739 113.167 cv
37.4692 109.061 li
cp
f
27.9932 12.2368 mo
30.2109 12.2368 li
30.9419 12.2407 31.4653 12.0996 31.7783 11.8267 cv
32.0859 11.5566 32.2393 11.1709 32.2432 10.6738 cv
32.2393 10.3105 32.1489 10.0098 31.9692 9.75293 cv
31.7861 9.50293 31.5469 9.33105 31.25 9.24463 cv
31.0552 9.19385 30.7002 9.1709 30.188 9.16699 cv
27.9932 9.16699 li
27.9932 12.2368 li
cp
26.856 16.7446 mo
26.856 8.15479 li
30.0942 8.15479 li
30.6641 8.15479 31.1021 8.18164 31.4033 8.23682 cv
31.8252 8.30664 32.1763 8.44385 32.4609 8.63867 cv
32.7461 8.83789 32.9771 9.11182 33.1533 9.4668 cv
33.3252 9.82666 33.4111 10.2168 33.4141 10.6387 cv
33.4111 11.374 33.1802 11.9946 32.7153 12.4946 cv
32.2461 13.0029 31.4072 13.2529 30.1963 13.2529 cv
27.9932 13.2529 li
27.9932 16.7446 li
26.856 16.7446 li
cp
f
37.8711 18.479 mo
37.8711 19.1426 li
34.1802 19.1426 li
34.1763 18.9746 34.2041 18.8228 34.2622 18.667 cv
34.356 18.4209 34.5039 18.1709 34.7109 17.9238 cv
34.918 17.6816 35.2192 17.4009 35.6099 17.0811 cv
36.2153 16.5811 36.625 16.1855 36.8403 15.8926 cv
37.0513 15.604 37.1572 15.335 37.1611 15.0728 cv
37.1572 14.8027 37.0591 14.5728 36.8682 14.3848 cv
36.6719 14.1978 36.418 14.0996 36.1099 14.0996 cv
35.7739 14.0996 35.5122 14.2061 35.3169 14.4009 cv
35.1182 14.5996 35.0161 14.8779 35.0161 15.2246 cv
34.313 15.1509 li
34.356 14.6279 34.5361 14.2246 34.856 13.9517 cv
35.168 13.6777 35.5942 13.542 36.125 13.5376 cv
36.6572 13.542 37.0791 13.6855 37.395 13.979 cv
37.7041 14.2837 37.8599 14.6509 37.8643 15.0879 cv
37.8599 15.3105 37.813 15.5298 37.7271 15.7446 cv
37.6333 15.9629 37.481 16.1938 37.27 16.4277 cv
37.0552 16.6709 36.7041 16.9946 36.2153 17.4087 cv
35.8013 17.7559 35.5391 17.9946 35.4224 18.1157 cv
35.3052 18.2407 35.207 18.3618 35.1333 18.479 cv
37.8711 18.479 li
cp
f
154.551 166.357 mo
153.426 166.546 152.864 167.311 152.868 168.667 cv
152.864 169.37 153.004 169.913 153.286 170.299 cv
153.567 170.686 153.891 170.878 154.266 170.878 cv
154.649 170.878 154.969 170.693 155.219 170.318 cv
155.469 169.952 155.594 169.443 155.594 168.803 cv
155.594 167.881 155.247 167.068 154.551 166.357 cv
154.551 166.357 li
cp
154.293 166.088 mo
154.098 165.874 153.825 165.607 153.477 165.307 cv
153.094 164.971 152.836 164.706 152.708 164.51 cv
152.571 164.318 152.504 164.104 152.508 163.878 cv
152.504 163.538 152.665 163.268 152.989 163.061 cv
153.305 162.87 153.723 162.768 154.243 162.768 cv
154.754 162.768 155.204 162.854 155.59 163.034 cv
155.973 163.21 156.168 163.452 156.168 163.76 cv
156.168 163.909 156.122 164.029 156.028 164.128 cv
155.934 164.225 155.825 164.28 155.7 164.275 cv
155.52 164.28 155.309 164.143 155.067 163.87 cv
154.817 163.596 154.606 163.404 154.442 163.296 cv
154.27 163.186 154.075 163.131 153.848 163.128 cv
153.559 163.131 153.321 163.193 153.137 163.318 cv
152.95 163.448 152.856 163.607 152.86 163.811 cv
152.856 163.999 152.934 164.174 153.086 164.338 cv
153.235 164.503 153.625 164.803 154.266 165.232 cv
154.938 165.702 155.415 166.061 155.696 166.327 cv
155.973 166.588 156.204 166.905 156.379 167.28 cv
156.551 167.655 156.637 168.053 156.641 168.471 cv
156.637 169.21 156.379 169.854 155.864 170.413 cv
155.348 170.975 154.743 171.253 154.055 171.253 cv
153.422 171.253 152.891 171.03 152.458 170.581 cv
152.024 170.131 151.809 169.53 151.809 168.78 cv
151.809 168.061 152.047 167.46 152.524 166.971 cv
153 166.486 153.59 166.198 154.293 166.088 cv
154.293 166.088 li
cp
f
171.899 56.9561 mo
173.102 56.9561 li
170.754 61.8848 li
170.813 62.4126 170.84 62.8696 170.844 63.2676 cv
170.84 64.3618 170.637 64.9126 170.227 64.9126 cv
169.93 64.9126 169.782 64.6816 169.782 64.2207 cv
169.782 63.6196 170 62.8657 170.438 61.96 cv
170.352 61.3926 170.231 60.7207 170.075 59.9277 cv
169.918 59.1348 169.758 58.5605 169.602 58.2207 cv
169.438 57.8779 169.208 57.7061 168.907 57.7061 cv
168.415 57.7061 168.153 58.0728 168.118 58.8066 cv
167.907 58.8066 li
167.907 57.5176 168.29 56.874 169.055 56.874 cv
169.497 56.874 169.825 57.1348 170.04 57.6587 cv
170.25 58.1816 170.469 59.3105 170.704 61.0566 cv
171.899 56.9561 li
cp
f
255.86 171.378 mo
256.012 172.311 li
255.715 172.374 255.45 172.404 255.215 172.404 cv
254.833 172.404 254.536 172.346 254.325 172.225 cv
254.114 172.1 253.965 171.943 253.879 171.745 cv
253.793 171.549 253.75 171.135 253.75 170.503 cv
253.75 166.921 li
252.977 166.921 li
252.977 166.1 li
253.75 166.1 li
253.75 164.557 li
254.797 163.924 li
254.797 166.1 li
255.86 166.1 li
255.86 166.921 li
254.797 166.921 li
254.797 170.557 li
254.793 170.857 254.813 171.053 254.852 171.139 cv
254.891 171.225 254.95 171.296 255.036 171.346 cv
255.118 171.396 255.239 171.421 255.399 171.421 cv
255.508 171.421 255.665 171.409 255.86 171.378 cv
255.86 171.378 li
cp
f
267 174.721 mo
268.477 172.62 li
267.11 170.678 li
267.965 170.678 li
268.586 171.624 li
268.7 171.807 268.793 171.96 268.868 172.077 cv
268.977 171.913 269.079 171.764 269.176 171.631 cv
269.86 170.678 li
270.676 170.678 li
269.282 172.581 li
270.786 174.721 li
269.942 174.721 li
269.114 173.463 li
268.891 173.124 li
267.829 174.721 li
267 174.721 li
cp
265.696 172.686 mo
265.442 172.796 265.067 172.881 264.575 172.952 cv
264.29 172.986 264.09 173.038 263.977 173.088 cv
263.856 173.139 263.766 173.213 263.704 173.311 cv
263.637 173.409 263.606 173.518 263.61 173.635 cv
263.606 173.823 263.676 173.975 263.817 174.092 cv
263.958 174.217 264.161 174.275 264.426 174.275 cv
264.688 174.275 264.922 174.221 265.129 174.1 cv
265.333 173.986 265.481 173.831 265.583 173.628 cv
265.653 173.475 265.692 173.249 265.696 172.943 cv
265.696 172.686 li
cp
265.75 174.221 mo
265.497 174.436 265.25 174.592 265.016 174.678 cv
264.778 174.768 264.528 174.807 264.262 174.811 cv
263.817 174.807 263.473 174.702 263.235 174.482 cv
262.997 174.271 262.879 173.995 262.879 173.655 cv
262.879 173.46 262.922 173.28 263.012 173.107 cv
263.102 172.952 263.219 172.818 263.368 172.717 cv
263.512 172.62 263.68 172.546 263.864 172.495 cv
263.997 172.46 264.2 172.424 264.473 172.389 cv
265.024 172.327 265.43 172.249 265.696 172.155 cv
265.696 172.061 265.696 172.003 265.7 171.975 cv
265.696 171.698 265.633 171.503 265.504 171.385 cv
265.329 171.229 265.067 171.154 264.723 171.15 cv
264.399 171.154 264.161 171.21 264.008 171.323 cv
263.852 171.436 263.739 171.635 263.668 171.921 cv
262.997 171.831 li
263.059 171.549 263.157 171.311 263.297 171.135 cv
263.434 170.96 263.637 170.827 263.903 170.725 cv
264.165 170.635 264.469 170.585 264.821 170.585 cv
265.165 170.585 265.446 170.628 265.665 170.71 cv
265.875 170.792 266.036 170.893 266.141 171.014 cv
266.239 171.139 266.309 171.296 266.352 171.475 cv
266.372 171.6 266.383 171.811 266.387 172.107 cv
266.387 173.025 li
266.383 173.667 266.399 174.068 266.43 174.232 cv
266.461 174.409 266.52 174.568 266.606 174.721 cv
265.887 174.721 li
265.813 174.581 265.77 174.417 265.75 174.221 cv
265.75 174.221 li
cp
256.61 174.721 mo
256.61 170.678 li
257.223 170.678 li
257.223 171.245 li
257.344 171.049 257.512 170.889 257.727 170.768 cv
257.934 170.646 258.176 170.585 258.45 170.585 cv
258.747 170.585 258.989 170.646 259.184 170.771 cv
259.372 170.896 259.508 171.073 259.59 171.292 cv
259.907 170.823 260.325 170.585 260.84 170.585 cv
261.239 170.585 261.547 170.698 261.766 170.921 cv
261.981 171.143 262.086 171.479 262.09 171.943 cv
262.09 174.721 li
261.407 174.721 li
261.407 172.174 li
261.403 171.9 261.379 171.702 261.34 171.581 cv
261.293 171.463 261.215 171.37 261.098 171.292 cv
260.981 171.221 260.844 171.182 260.688 171.178 cv
260.403 171.182 260.165 171.275 259.977 171.463 cv
259.786 171.654 259.692 171.96 259.696 172.37 cv
259.696 174.721 li
259.012 174.721 li
259.012 172.092 li
259.012 171.792 258.954 171.561 258.844 171.409 cv
258.727 171.26 258.547 171.182 258.297 171.178 cv
258.102 171.182 257.922 171.229 257.758 171.331 cv
257.594 171.436 257.473 171.585 257.403 171.775 cv
257.325 171.975 257.29 172.256 257.293 172.624 cv
257.293 174.721 li
256.61 174.721 li
cp
f
.6256 lw
[5.0048 5.0048 ] 0 dsh
43.6572 78.0488 mo
153.165 43.8271 li
@
28.75 75.0259 mo
30.9692 75.0259 li
31.7002 75.0298 32.2231 74.8926 32.5361 74.6157 cv
32.8442 74.3457 32.9961 73.96 33 73.4629 cv
32.9961 73.0996 32.9072 72.7988 32.7271 72.542 cv
32.543 72.292 32.3052 72.1196 32.0083 72.0337 cv
31.813 71.979 31.457 71.96 30.9463 71.9561 cv
28.75 71.9561 li
28.75 75.0259 li
cp
27.6143 79.5337 mo
27.6143 70.9438 li
30.8521 70.9438 li
31.4219 70.9438 31.8599 70.9707 32.1611 71.0259 cv
32.582 71.0957 32.9341 71.229 33.2192 71.4277 cv
33.5039 71.6279 33.7349 71.9009 33.9111 72.2559 cv
34.082 72.6157 34.168 73.0059 34.1719 73.4277 cv
34.168 74.1626 33.938 74.7837 33.4731 75.2837 cv
33.0039 75.792 32.1641 76.042 30.9541 76.042 cv
28.75 76.042 li
28.75 79.5337 li
27.6143 79.5337 li
cp
f
37.6099 81.9316 mo
36.9224 81.9316 li
36.9224 77.5605 li
36.7539 77.7246 36.5391 77.8809 36.2739 78.0376 cv
36.0039 78.1978 35.7622 78.3105 35.5513 78.3887 cv
35.5513 77.7246 li
35.9341 77.5488 36.27 77.3306 36.5591 77.0728 cv
36.8442 76.8188 37.0469 76.5688 37.168 76.3267 cv
37.6099 76.3267 li
37.6099 81.9316 li
cp
f
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 66 /B put
dup 72 /H put
dup 76 /L put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 118 /v put
dup 119 /w put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
24 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9A
E12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533
946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA0
49D36B9B13B7F6C8AA7A4A5EB0> |-
/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF
58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63
BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B54
0A016D558248DC4A3E8183F5F> |-
/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-
/B <1C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F940
23374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AE
A69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC24
83A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B41
2F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF7
5F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16
E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E95597
8F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |-
/H <1C60D8A8C9B6079F62C8472A58E49E4C65298F7DBB13584B0C608B103B8F
2B0C72AF215D43C457FE4678B9114F992A1CA0DD95AD962EE67821EBE89C76AF
7B7C203022FE3C67E29F7C9AA5921E4D15A2645D93C73845A47B6C4F855F057F
BA3B47AC2707354E73F37A88912B11BC586C19F99285C7E09F7C6AE400A135AD
2578B2C1702C267512A0254A355FAF242A3E032C2D5773AA8E4D90998616B06D
E2126832E624AA95B6CEA6DE0CF980ABC5058497B243E4F1F614D2E3330AC509
CE2BF6F280235C57C7347C7DBE389D9DA8C428E4F439ED717BD43889835C90DE
66BDF27965E2CAF6D3F8A236> |-
/L <1C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA09
270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3C2
21DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF12
A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD68748B
847D2C24AD687E0CDB56> |-
/S <1C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49
387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D
7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD
7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6
B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518
CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE9049
07DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB4
44BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE
13D22435E5FCC1B5A000DE> |-
/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F
6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD9755
6EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58
110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D2030
65B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A
86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857
EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB
01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104
E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A
36815EA1CE5876FAC4F83CDFE1BD4A> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F608
47F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF
4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AE
A8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA7
07BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8
585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF
9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA4
5E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD7
0E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC819
1E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D30027
81921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0
BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46
F1C707> |-
/h <1C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E0
27FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0
134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9
C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E
2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E
36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E9
7FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F
735A795EACD82F245D81FB43B5> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D
24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E
9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2
556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD
574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F24910
7C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18C
E6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE9556
17323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D98
7ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFE
C679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82
B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B5179
96> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40E
B48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048
D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC6
66023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F759
04A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B84
31B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E
94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF
1C7730E7CC0F462D79552DFA> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
/v <1C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D2940
3E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF33
B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0EDAE
DA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D98
258ABD433E9E> |-
/w <1C60D8A8C9B6079F04262E67C9FB6DFF2B2A2909EEE6C74AA460646E6418
023C6B7542892CB61B617E90DA8C58C94D261B2066526778FA77F05506A363FE
5266E7C038D05568B67F867A9FF97988CC575C0A7C1F4DE18568CA203BA52391
7E8148BF72D6E4FEA4245E4F8E144E9C4F6DDF7EC6DAC323FEA1568E1A6C8D85
26507DC2E91B066C274F65DD58F049FFA3E606BF021DDA3B6174F51DB721A6C7
E1197FF1898AE92ADB1C1DD84FD7DEC1> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DYGCPF+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/DYGCPF+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 20{/.notdef}rp 
/B 5{/.notdef}rp /H 3{/.notdef}rp /L 6{/.notdef}rp /S /T 
12{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h 
/i 3{/.notdef}rp /m /n /o /p /.notdef /r 
/s 2{/.notdef}rp /v /w 136{/.notdef}rp]
DYGCPF+TimesNewRomanPSMT nf
DYGCPF+TimesNewRomanPSMT*1 [12 0 0 -12 0 0 ]msf
59.6411 129.017 mo
(Low-power mode)
[7.33008 6 8.66602 3.99609 6 6 8.66602 5.32617 3.99609 3 9.33398 6 
6 0 ]xsh
98.6416 23.3511 mo
(High-power mode)
[8.66602 3.33398 6 6 3.99609 6 6 8.66602 5.32617 3.99609 3 9.33398 
6 6 0 ]xsh
DYGCPF+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf
60.6411 140.017 mo
(\(BTS power savings\))
[3.33008 6.66992 6.1084 5.56152 2.5 5 5 7.22168 4.43848 3.33008 2.5 3.8916 
4.43848 5 2.77832 5 5 3.8916 0 ]xsh
.5 lw
[] 0 dsh
115.641 120.352 mo
115.641 107.638 112.641 106.352 104.641 97.3516 cv
@
102.636 95.0957 mo
103.974 95.8076 105.816 96.5273 107.252 96.7109 cv
104.904 97.6475 li
103.699 99.8701 li
103.685 98.4219 103.186 96.5068 102.636 95.0957 cv
cp
f
163.974 47.0176 mo
164.016 74.7676 li
@
164.021 77.7852 mo
163.492 76.3662 162.59 74.6055 161.637 73.5151 cv
164.015 74.3716 li
166.392 73.5083 li
165.442 74.6016 164.545 76.3643 164.021 77.7852 cv
cp
f
163.969 44 mo
164.499 45.4189 165.4 47.1797 166.353 48.27 cv
163.975 47.4136 li
161.598 48.2769 li
162.548 47.1836 163.445 45.4209 163.969 44 cv
cp
f
[2 2 ] 0 dsh
154.641 78.0176 mo
172.641 78.0176 li
@
154.641 44.0176 mo
172.641 44.0176 li
@
[] 0 dsh
132.641 26.3516 mo
132.641 39.6182 122.975 34.4551 121.641 50.3516 cv
@
121.389 53.3584 mo
120.982 51.8994 120.234 50.0688 119.377 48.9014 cv
121.674 49.957 li
124.115 49.2988 li
123.076 50.3071 122.032 51.9878 121.389 53.3584 cv
cp
f
152.974 25.3516 mo
152.974 31.9849 155.974 32.6558 163.974 37.3516 cv
@
166.577 38.8789 mo
165.085 38.6147 163.111 38.498 161.688 38.7661 cv
163.632 37.1509 li
164.094 34.6655 li
164.554 36.0391 165.619 37.7061 166.577 38.8789 cv
cp
f
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
DYGCPF+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA34
5031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9D
EB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC94209715
8DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC739
9ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283
409DD22AD16B7DD28B54D5FC454C> |-
/P <1C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF876458
925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153D7
D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E886
C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18CF
B31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF120
86F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FBC6
28> |-
/W <1C60D8A8C9B5D6EF4CB383496C62617B8BD4FD4927BDE48152A6FF621642
8592F5AFA3D18F24C53020F77DA565222C98E1F496EC6F2EE4EB22E43F233D8D
98DB46EC3FFD79A8A395ED6571E9EE52C2D64F4FF1F26706DF3355CFC8C908EA
A86ADD43E05EADD0D2F7D3DC578FF752F1D87291BBD55E577C117CD30BA3049B
D39543241DD7DCD07617FA8A494E710E269F478E2E95BEC8AA7E710ACD0612E8
921B3DAA59E93D8AA4276CD08DDB3A9B4D762893C74EF3108E125B72E190D045
E652A0B8E8729169D251777FA84DD9EC852ADB1FB8FFEDFE199F837B9E862E99
2403453891> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYGCPF+TimesNewRomanPSMT /Encoding get
dup 67 /C put
dup 80 /P put
dup 87 /W put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/DYGCPF+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 20{/.notdef}rp 
/B /C 4{/.notdef}rp /H 3{/.notdef}rp /L 3{/.notdef}rp /P 
2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 2{/.notdef}rp 
/d /e /.notdef /g /h /i 3{/.notdef}rp /m 
/n /o /p /.notdef /r /s /t /u 
/v /w 136{/.notdef}rp]
DYGCPF+TimesNewRomanPSMT nf
DYGCPF+TimesNewRomanPSMT*1 [0 -14 -14 0 0 0 ]msf
11.6411 148.018 mo
(Power Consumption \(W\))
[-7.78613 -7 -10.1104 -6.21387 -4.66211 -3.5 -9.33789 -7 -7 -5.44824 -7 -10.8896 
-7 -3.88965 -3.88965 -7 -7 -3.5 -4.66211 -13.2139 0 ]ysh
43.6411 3.01758 mo
43.6411 156.018 li
277.641 156.018 li
@
280.659 156.018 mo
279.239 156.545 277.477 157.443 276.385 158.395 cv
277.245 156.018 li
276.385 153.641 li
277.477 154.592 279.239 155.491 280.659 156.018 cv
cp
f
43.6411 0 mo
44.168 1.41992 45.0669 3.18164 46.0186 4.27344 cv
43.6411 3.41357 li
41.2637 4.27344 li
42.2153 3.18164 43.1147 1.41992 43.6411 0 cv
cp
f
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
DYGCPF+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777BDE
67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD4A
5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712B5
02AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC078154F
7D9BB4AB2053> |-
/c <1C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC5
4400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A
6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C
2999730E7919239B324086FEA852156F456647AA0692084759C352D699897179
9F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |-
/f <1C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF3209
2BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274BF
E5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40FC
628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C5573
F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FDD9
41D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D
244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527
D6441CE02F5A28D63A618F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
DYGCPF+TimesNewRomanPSMT /Encoding get
dup 86 /V put
dup 99 /c put
dup 102 /f put
dup 108 /l put
pop
%ADOEndSubsetFont
/DYGCPF+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 20{/.notdef}rp 
/B /C 4{/.notdef}rp /H 3{/.notdef}rp /L 3{/.notdef}rp /P 
2{/.notdef}rp /S /T /.notdef /V /W 9{/.notdef}rp /a 
/.notdef /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /w 136{/.notdef}rp]
DYGCPF+TimesNewRomanPSMT nf
DYGCPF+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf
112.141 185.518 mo
(Traffic Volume)
[8.05957 4.66211 6.21387 4.40918 4.66211 3.88965 6.21387 3.24707 8.30566 7 3.88965 7 
10.8896 0 ]xsh
[3 3 ] 0 dsh
44.6411 10.0176 mo
263.141 10.0176 li
@
263.391 155.518 mo
263.391 10.7671 li
@
152.891 155.518 mo
152.891 79.7666 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/DYGCPF+TimesNewRomanPSMT*1 uf
/DYGCPF+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.1
%%For: (zartash) ()
%%Title: (powermodel.eps)
%%CreationDate: 9/24/2012 1:50 AM
%AI9_DataStream
%Gb"-6GC/njdQ%1(^":5I#U,`A9SZT)+X+O\?7@34\q*"WT25JcEKMcW/`1pD^?7[m8V1MF;`1!]NE0,=U\V.E*I\eps4pt<V,L%W
%>])!YbUb&]>i:[neW]F'0\&+>,Z<;8C`/(NTOfl!iF85I;DO_/^VKU=;0+o4L9kZ8e.ee/d\oACVn5U@I_FDZT3"M")>Lqs*=1+e
%iBOfH6%+!+G>TU>gs*n"ITL49Zn56UT9X;$W/SY\IC9:@J\I)^5E#,N^NDOY1^%fB.2g1`-U,q2m\f_r@<W%V/q%(I2Z**3E"1qY
%[&O5tI#=M+51(Hr_JBDf!G2pr1FufoT90\:YGM89]\X"Qh<@V7caon1qkhkk9c/idopL=aRGcMUe5@KWJtM>sE`2rJ7X,pP56\:9
%-'pA)pd8ej,$F]I/,X%(l+2NKX&UYb#qH1!G1Z[W!+d'jP0(\>YA`TP6+e:_+[Y^C3W/0]W$V)tn'LBcIN8L6U&W*]:T6db/q+0a
%^a5cT*5];!Pi^t=!:T+D^B@EN(EDLN/.?<h#;k6RQ]37'M:>EQO]tF/j^KYEhblRr#"`Bl1+>$o7O]_XO[=K3*ot$kO;?Gu4BH"d
%]0"f5-^XWk(:u/`AsrEl(4RG,,$Ep?SG]!9:B:'(-4K!m"&:=OW',-*jPioQUXfJ$26;$!OAso0/GMH":D(s'aOb'I0Q&A0=?7&n
%]2\]DLA6T-rt5Y5R81ZG>Rl4K9(KFk.1,bUT-b3?Bd/,#,.bq#V:2YO3Xu*]VdZoR)E(6d.i#VD>Rn3aj^=PtpkN2%j^>E"%Q8sS
%_,&^b<.`@e-2;5S"J:oNYYCqqT2mH+1jZi5JIO(Dr">SXShclL*YUblYKG0)$1L"R!LlBbi$W=FiKBnRcQH'R'=NHW_+t3GN"5b@
%KF<7G^E?AB'6](lKtE()_+t1qquqNYiI[h6SDkF%Ae6fo$/8E/n2m%1B_!"h(mc(>n.WQoTuR/kl/UIUn^6E/;TVZ&5M-C]#X;a!
%R#i/*r(J:Squo!20ZoX"W51,S(uZk?$Nc.[!.IP(LL7knfF5V&5;=lI]3s^Z)8It<?9j^@3CtP<Sg)0;Cke'"is%l3!C2jh;o9j?
%^1FV/-LsCR"p-4E-j1*pNZlH(+cPn(2T*0;@DmE,0>gT<"p,':Qap@e,`FoL#3L#qSRn[\q$p+?ZOCFQ=\*)W@dN.N@GKn*1%N]P
%A\uOXiT\6lo(]_Ag];kas%/EpJr2Q-diK_>G>U[+0Is3PO5BuAbL3H6R>`[s%PXg(18&Y3H<oVZ=n5R-bICTP!Tt`''>:QC7%UPD
%AU.hA0n(tqj3U$c;c8l8l!HQ5+/qKp^LRuWXo?9=_!@s6r_!-Gs(*t\DtPLWQd+O)ZWUl3XRr\m^lR!;pg::^s&OX/J)GI@a'Yf1
%n\9)^s/l:=s#B,4Uurm1i?tKUr`f@0s+E)GPGMfi_T)X71OL?MiA5kX;TP`pWAs[d%"GJMkq[Vns&\0iN;Pa_&C2Y2'@[:!-CZPs
%@5k,.+AF>Gs2O*8G49_R2d?E*phT]+63Vgjrm"*mW6]R8_q24eF8R^>rskW"FKakdY<*Rq587R%pa\TAcXgZ-?u1@c.0t9TL[_@K
%j6tr&8>)3q+0YK'A,)&e"auG>f/2M>]$k%Qr`aeVf)u`pFb)eVInq@E0>Qa+m!L>h=TLi`FMl.VdSH.f4BI]$8Au1mTeFmYFn?2#
%$#Ua+arH^FE/o1(S@fmqX8d-?dYos(lOYuMCB]Dp9JclM&W`plQ,=Vnf.hbB80I!''DMi_!^ra>nP9Q/r]Qa8?C)bOYs?WL'htsC
%$8:\Y8FR^5)iPc)Rm:UtLaH^*\GR!BJpC1a+W=X7+?'D_`cT_nob`gZ[S3Ct:E)VI6S0f!plch7"_((IS;]^`&;@$XEQb:p9'-1Q
%W3E]Z.86Jo?#BXlMl3q4`(CXb8HcX4=Zi`O.'nXp"o0%q5)<SJG4]g0Hl9UA,I"7_3.rOKZQO=[oV1'KK'SpP7+/a+Qms+%f]-]-
%Q%BFJgl2_\4JkjoG9R\qL-)LTQ]N^8mr:eJbH8"GKoZpR%i5ei6qAtB8<cF:X$bgeCL2_K'YRNkVQ4_<Y94aQ^8aFjX,DjHoK"f4
%oLQkQCY/iNO<_.BGVu>A9-nL]U.?&\?In=ZoIle%ga5g(;4b?:`$JD40*B,oW+m=V1Pqp7Ue(&B&5K&R^hoKA:U9&_:b+kS&`N5T
%oS=Z%JXA`l&?<#mGu`Roh`9M[$6A+dP5?N5+\.PAqFp`I7a;!bQU$AO.3c[kPf3Vc+uDPWm0qB5qPKokTVVfWSQl2*31D2UPp4#e
%WGId7Lk:<-MM*JPZM;M(NlOYbCNVRm*"u%>XRIrUniG3,D6I[SJe+*";H4NQ9@hJ8+AIYCZ,.,'$7cQ>LD%T/\U9Sj6jL?HlZ!B'
%@Ls74.1eV.QK2>C%f'J.+t8MGMAs3UO_R9f@3mb,AQd'N-jb*ff?CL_;3[>sQPDD*be\*n7B3Em'6qPcTL_R"fW!A&q(<9.9]!i/
%nVe6Oagbpg6<W<qbA_J?[a9tAU(:_U.RSY:;qo+\7?Z9<I**;J=C_[>JSZ#n8=dc.)BT?iAsJL4&Y!HYoN9NM?)5J?NR@rdA#-,U
%M4W_f\R=6j>E,qOSgP4nKq,YbjK)DIQ-$'tP1MY&BYi)[np%1M8g8t=l6K+J:^-0WA;V?ECI2%/+hJ4IQ5<uXQ:\neRAssU&862b
%GX2sE-mGsaBE_N;7PW.%,9iOP@@*lj<Y0nBA*#".8Fc6oZ^7s4Jn)u5MQKD(NFKNkjQe9DR-Q#=a!gW'-QcDr9G3;D?VbI'-&"mp
%MYWVhng&c4oXI9kA4'D)cmi)0_L2u=1g0T2(.5IcBFI^HGu.%iBs4VBZAG<EjO1,-o(H;`%_'R%qf`Js/'q^i>h2Z99?ZtC4=DXn
%XK"!RP+)sVNVlaV=R\PZ=bm`\&Ziqa.2$*HN+E`934ccR'U882D1GSh_QGR3OgC0/7-$+W0TSd,Vk_d\SACNAF,+0/XY*K5N20NY
%f_(q)#[bo?`5=&mh+K+U_?!"BB!O?b0tEPYWQGIG.OF`"gd#0Ue5*,ZbK?%$9u,/_8S.k'OCR=]5Q].,J6O-j/!#V_NoW<%J^nb8
%,W[4;MR=pPJDp6aSFZ@m)U!A9Bt''.-[euAG0"@&'%@h:$YQB[+,&HXEap=GPos1!=s@O$ebUn/-!ZR>5iaApMik$B@oA'g_C3[O
%XsJoF,[.!:=u/GZg]XP%?,\;%<@`I:5]'d7KpaeVXn//G^Q&5j[0X#Z?!S@Z>m'I%JAQm`msG:"RJEYQN=bAck6<h(1%nP!?p_b1
%qe\VS=2F4U,SidjC!OeQ8kS@UEE[tH:W_agem!r31K>^DWeVoeBEKe-'uKX+_YgJfNqfGm9)_;G8W3gUA/06\0#r2UU,H(sR92nR
%'^lo[pF4N`pk$TtLj`!$F\8J;ZF\t*ZN.0Y=Ck.n<Q0"ucUdqLZms.##E9eNaQbK+HVWMo&csB%.!h!1N_6'^f2[g9PZXb)#E)X+
%_\S3d9#$Z]!uPUA.T,#;ERZ(Y92F)&d'GfB2BN2'GRaS5a@.KJd7fpNLYmMg.@6'DMtK:<(aP--kMg/(QJdQ7NVZV1[eh;S42g$b
%)YcCfhsZT'>qgZ5<WE%67-Or$*c6)>k'YPD$ic3H"``*2c):5C.sfgKMka_QHf".b^AC6D(;21N`KD\*2uEaLLOL&Ohjp/j,\eh/
%JKHc3i7hC6(q/_Y:/i('+1#k",t)BT]d4*P@LmQ=eI@CC*XU6FB\!use*^*bQ&@i8\q121Sh<I0j*DB3,FscOkFs@5Rt#uRda<e/
%l3Y?t>n$WC94t#?qe1%-r_)NTCpes_GM!pff/)qF^jigrmghppB]lR=7i4]aP^EL<CdeU%-Cbi:.j.`3gn.BYS+C?9p7K`S%Zo6^
%M:#Hr'EmO$H?27`U4`8>/=VHimoiFNJ(.\$BQa3#^_tPI:jiF>BMb<ZkC#1^C_f4)bj-Ht#QEGVpY0p$l-&<h//O?_&3k]J$@'Jj
%6-TJNDaArg!!.lkb0cA/KkM@;*\F.R5qcg/os4-p't:4&+f[r"Wm[b,lU3DRJ=rA^r5'1tiJMm=$I@s/H#GD*car09?dYog+7d@`
%%+%.dq4;j,??tiS5HJus,2a5&)uu"9oV^(t*k3i?;^^G)j.Yd2-Zt*&\e&`$kRd7L!q'>j?NsdBb'RFLWf()(M'9H&)ZcUAL^+pY
%js,.H,N=E>e3nScebuf^^VIpXj&bDgUq()$F6/t-nDbBQ`aA;gJNmnjoi=e`:-WOCq*<S<\cds+^j/.8d?KF2&PU@$?2?Bg7%*.-
%]ge"KU;f-3RSW;sJ49V:9cdrH-I.>!?Xl3T'V<5jR+4&:`=,>ijVU/(IU;d3i8Lq#RZFMep*fFN7\M\S#YWeB=_F_d#F]27\KlTY
%s'3FEJ8`cGJ')+flJ;!mJhHNk)Djq^mW>+D8:I?3:=E3;"=scX]k[HNbo(b1qEk/JDVgoj1gOD)j<8Mf28g&ao4_j:2B)7R8P0Gf
%7ge_hEJEBHD$EiURgf?=rk=qil<rQR69+CTRqDVg4BD`mGaE$p9"utcC/=%hn?WRR;DE8,;9`psg.09s`]&@-E?Lt/h-g](JcnT_
%r+Id=.A][]Sba1P%9lkhQ8J3rL%\%W&A3S./J%jqqP,c2!9G0(bUbp.`A*Wkp$9N,\:bnOI3[!Y>mK(YVle<iC:>Xj2G)0'Za3J@
%\p5ZYT>:r^fjB/p=;X1?NrCh&IkC%S@"om[alm;a+=q@s6_cXDo2VAPAO9A-I7RK88uVoC=i*o&f:-GBLe;Nmc!S)PeXO5UY8-BP
%DH$-:[.N]lMPEE4=/+1]p;;*D0[[6[rjB*@J/caNKdO%>KGJlk)bMf9c>E`6E(e7@,:5![:Og3q:;Lj593`aMoUhu@d`'Z#41E]H
%J>_</f^c!FLD&<6HV8oSQ8XP:2rQ`C95#A>Hf/?))H_-Z+I5L7(1:f+kj2Z2J1j0e/Lk4&d39.MV2bAO;#XB1?F<sMl3O.7K$;RS
%1I2@\7#KET2+m4$PVdfh"gks&qG0V[6d$ULKlTQX*!mPI'8[i*qNff]6f/D.DnsYN!`9pSmoH@h<.Rc&":`.Q'hJ0*m-CtfHe!L,
%X*=HZf6$A0bSi,[NM7JaduL)hg4M!)i.g7+65-2;j+jQ@EuhTO8B1\-BE"fArhjE.Ve:D.1Pu.rRK(%e)=E!#`e0lArhjD-oZSi\
%^-;#3hFU.Wf,]hIWhSI<Xt]mks7P<R\+8F]V)'XT1]mk%CdUmPpQagXcjgTQ$An`;if2qT+SQ;U.cK=;%6T0oJODK,.0N_%:@Yn%
%r[Y!Y.6T`HNLkbt2:s_eKU]L,r5L_o&:=1[=9"oj4m5T>Xjm^*Uud5n;UFS_.XqJU%K@\u(k(prEIKo_#o8TrQ8\_(kRTt3Sbd.L
%FrU%@0Lab')?YPns3bd%NC(!fG.RX<-k)qQECkl*O5\.GYH]35hH1^l5Q@gCdlegN@+g)`<__=5li"BB(d=<j1`QR:PhJ^8R;2d"
%a.j!o3!'PTqP.XuBMkHpDS#dN!8-M0PN4G:+9BgD$+!8-%0`D8F-]MY*@W^iUsPg0>As-;.`n?Wo\[q"cBZ97TCck![f&?+*l?U#
%:M6H=DkR)WA^T=J*?%Lg%0^cCc`+ZGDSUpS\,#s67![MccYpVVrr>bWm<>'"*]5S%J<>#EQ;ITM7In3B';_gq\6/scJ*Arg2ZYG#
%jW`qgFtpE(dr!>j<1lf7IgbaTfj#dAj&-9$lNf2&N!_bZl0eYGm/OAEX>-.E6fVEbcYt0M.N"-urAHP;;O2O%\_%Tm%BA='VuUVh
%D_[<(0WV[5[DcN/3R<lq[3V(F(!dJod8u3@[nt=$NU((?>afg@o02_;kn"&geAYR#<#8b39j"_oT#9lJd-Am]95612ket(TG+2k@
%ntZWC=DUS!n"=dY-)oN1)"h&HVS[/+fL6usW\e[R>A>Z_`B)3sh>'u_c:6ekUY`0bRt;4nbr_]r%-<;jK`B?i;QX^qL,0GA'UD4<
%$K;o6XelK_B_K&JJ.QCIs*"c]^lB*2C=.F+-lQLE3jp;tC8j-321+8@V/Mk>A(S-s-r?NB9+C*U76,I7l7'\.%EWi<9KPnV#`mgA
%6aS1R-bY[<V%P4MdP&ST&.04#3)0-Ko@XsSfBWFoU0pgFYi/9W&#\GKc<U>a].Lh)s!Q1e.On2]<'2&E=uVG)&2%cl:3L&UFUg,8
%)6[W.WrYCi._!!qHDB6`cMg^u/k^j`QHng6ms4k9=LoQ5'e[lc(aX/Y/r2h7I4I2.Ol]emLk9to#Put/Od7FZY.%S\AfT<u4[!?)
%n]7A@lM[m0oGO((X`69D,>e4Di(I%7=/!3)R*S5/?`A?'9#`c2P;^?C(-e/5**!g5kg-1>!RlV:APg\KG%3cA^n]e=:4qid9mb]9
%"/rE[VZ"$!!*%?FJ2>]J"*"_X?_!,p0TBrV_I[8ZgsU/;C9sc)&1O[-[&\^dTtq&c*FAm#[oM#_,GW7)W"hsg<kQsr`Jc:>\1ORk
%oDu#bU.1tpF:2u8%TOlM;h_3)85p#?7AKAA>K7p]@is^>YQiUl[29FZV=O:"2'R!T)b_(f?V)ccSRuFU0o"H9ThGhVDGL;H(=W%9
%$<0qp'CM)qlfNFC7`\koFXt^C^e@-m/$p_GA2II3HBBDq,1A1A@UoIF\"0&AMN#LBLckl=,M=_BKS]<G:rlc'D.1=HmA>qJNVgu8
%Cbu]@e/V5#E=3]0^_3GF&n[-Chh,6GWe>t@)?I04BJ!uK":L@:]\C>,Ut+'pa0a69hG@TQQjks5oRUWAgWa@LBlkM2gUA%-hfWDU
%ZtRu0%;.*7ACmb%K?C_g1WlMriNuO%_,Dj6VG*IFRr]uO%>ogTp>9jXCIXee*AiA&Y0H<!Mp]$p>1@"rLB5o!20ZF6d(R1Z[)J=:
%YVI:Yl')?d?69Xl)od9Y8'Q"c_+s%qUfQ0YO5*0i*eaf#*.V2>>'er5Hb?q=gKaS2DEfSscWD0p]8FDCbm+?o^!Kb;H^YWV]AA+,
%,9W8S?.KE/9P=;p$[7G$$cP/0J5c67oE%<0R[;#GLqiqNIU;%MIJ9+Xl79Yf0G>q?g2pb#l3KMYWAKUqde9eUMH5pU9&$ciM+'(]
%2-0iOA*cfk\<?i(e8A'9ftqnQI61B.ZmADXha>gj@+>n;\fj(s(:PP,gU:O=g??fdFZZ,sgYt\shJTT%pOSb;[djiE>O83pRjpmM
%"4gO\Y`+T1BR_VN(Mqb/HF>UBs%g*CdPjN?]V[UqqZG'J?QW2`.T/VqdfQYu_@Qq#-m]8)kt&/e_U?("Lc9sSGOfi"nW^!m^pZMb
%U"ue+.F"b$pLdd9?WtrS,Z:ub)D,oDhl)H34!^jb&<JSDI8I:OeH\NQ;/7p?C9Gr+k%Y=5LBl,&\sZL(<bG1TR%-0*F1p_BYSP8g
%HSi)EB4RVDTU(rtTJeL;KUL,e8oPQcN+c$LBQIe:oUAH?5r/p".'5/OVBL+</i&9j12Uc$@adp&qbF%IK-LI%qm)ZC^MGd&g2]%9
%-l.Ibk/#KQd):NqUpXRl,3rg1e/"IBAM_R@F9<@W5gcs))Lj@/+u&l4"e#jATQS*bNgkXUcGF^V4W!6E!R@]Jc,^_o'>722ZZJI"
%pEI#mGI(qfmjD"IFa9R_+.N<<#E^+FEs:J&q%`NL'^eTDC,X$=&Ab=.Q#*JK.lX*>'OM`,54PhS[E_B"R]ff80l_p)SgD-%)l&m)
%pon)m,fa1Fc3qJYG2[=FCDU_%X^nsp^94X"m`SD"afs1PcVE6PQ//j#h;iId\AH4SKf(Omh]?^U$FS@9HmKX:Xe9=#aXG`CCu3)<
%q8qUn2DjWH4Fj?Q(!t?70RT8E$Lr^MS<q,0kE#Po8YR:FHk1SWgNi%X_P`Dp$FN41%_`m9:k)jie6k5$%:4c"DUY07VC3dDgCGCV
%i(eGC)[nYMGJVP-Fr#O.%W6d);SgUqY92Pi(%:(mAMC%KH9$?o3PdM>SmT4K&QY+U:2MQt/FL3g@A^[6O(bW..aX]NYOhQNC7dW"
%'_-fD0q67]?daRnrLL.7..`ha=u('12h8X>NP_pi4dCbaqLdh3IdiK#c9<(7']ZO]i-)bR$"hl:"iL<"9lT^p,o>A)F9-?;PKdM1
%AV1N]SE?CfZ(67]%?1Q#+''#E3cbUhDX0`HIkV9u''Sl#5-@VqA:I@i0G+,^&Eg5.Uq>R)a`JL$Bq5"8:=O%@A\adf=3.%Bs7J7!
%WI2uPi4#iZ1LImY4@dcBZ99313oiJm"FtcBbSFGG]faS)XP^.Q-6rs!Oq"$Jo)%[XH@BcP>NS`!U"!L_j/&P?$g?VdPS_<PBh`u%
%fhUIL#MmV39WDM=nJD$20p9K%O==YT89C:`NmF?4)L.PZ?g/M<o*74:(`!%I9FQ%BM<H(rF45O@c"/N9o<Tt?!q6Q)JFnVU!lWg3
%gQDQV%)4'SA*5-Ueu*Ghrg"B6"L8%!9mj^#gJbok_cT7*"#G(`k_Uq-r)gL_/78d`*LNZmqY'7=N##)@N!/BoE'p/8<o5;2WWhu>
%R9M98m(q1lRKD_qIJ[Ko3LJh(/$cJ.#dreU0JTKY&iBF^`)X=LN)MFZTp=tN4/^/Z'7t7ig*?&+9JF\4\ME#I^$:"=*:dt;q27<E
%]c=QocZEk!oK7EXJoBOql=hi;Hdq&cr0US\`UYLGZ&RlDd:2Wn(>n/M=e0eDj^Jq`RB0t[q\h/tHW424A%uIacTO>Zh#0q&[oQ7;
%_,SBpDd!rAelMAf60Z2/7,)qOp0_'[V`69@-es5tSbYf?I=IK(?rDgDrpn'N4gXkE'[0NhF1itAlc#'FTNidE5'.8](=2Hnb&*d>
%398iTo/g$!5M;q7djUfg^#;E%3T"ktg[e'^ijjH\("S*3Wot#<rErTpNj"m4nU*BT;_0FhQcXk=%@GO,%@H=Hij1p5pM'DGq*Z(a
%<mOn4TKK(_cf@`j4+H@),XH.[9SYC:<oq4?9FLCO0"/^$)_e=Vh>GU[X/?&`B(^Q-jR.2FGNWA*$$Q\N0:m7g^&'qGEt0N0ca+;D
%o(@:35YFoWbS'ZSrj5?"VGTJE3]B+[Q4D,oo@V+s9RH:l:TWDSN\2CnK6bI"N"]DJ`%rE[pcMlS\H)6kW3PG^4>.2fT-)\FTF::;
%960K&G9,joqt$=m<SWGoq^cdJ#0b8_n_bmDHL=*^h^[FEc",'ZR,[C:39X+"b<J(&GN,%(gfY-Lhi9l+83`[u-]==V,B<_X1*sc<
%QP248R6B5N3Nm@8#au[[JGHTq]:oK#OA7pWq<-(7/QSDN<&!>_dmnC4Qk=?7?#AfDF*a%E+DC8Hrjo'01HV<2;k1R]EX)'X;t4_$
%\tc$4r3b+Hd>6uJI<b5A+A!.:LjRH!">eT]*[`VU1ghA"kepC6]18>o0T.c7:U)%$FNQL]OBrIG(q63jBr^^797iRIAf$&e4]rg4
%?T#NADUDRc@(qWZI<_T9YKiIJ^*\.&;'?;Ir16%.`!-_jr6gQcY6Xg4lK_m0IT/"[)-(0N"b+_lW.5%%gVME,qOJW!B=T.#!IKr#
%B4IPkmAL83An,JD*j2'(X3(VU4P_D`N1.;[m_1\"'au;t4I]nl#Q8H$ULlU\O*1=s&N$BIj)"1c>"rY"O*Vig*lW8s&usCra_0ka
%bPYd2msNWcj_!O@*QAD"Z^3>Mc&KUa@<->Sogm2F</<ABi;7J;mmfJ)&J_D1l*^EbbMsg-.[T5H;.WKY29bj"cKe"_C2rQZ79k1>
%7thjb40[hFO)OsaJX]Li$BW_c%Q;Hu95lIQrL$rP:M<7`<MsYF4oGd%@c>Q,W.SF<nAB9GHW0n=rEAZ_V&ORM1nHgWdV&Z-,_&Q1
%`7G(bk'0iBoEqa$hmV=%<d;3Wb^tgKMGXi;W3t+Ld;mIMW2kt<XbZTFf9=md?l3*pie/g(D!=J`A,M/B6+g=5]"X6)=o]":bZ>Qa
%0djB4j/moVe,mUf0X`n>g>1Cbh+Oo4i)5QgffFH$?S*2hVdJ#WSl,i0%2h3^K9&4#ST5O1nof0pa^(OqFMl'0pL4nB`$$jOR"9_V
%Dj/RhY7t>(pk%JTaF*iKIq[`s'l%r\-D!%+i$s1lTTGB@%5?o)f^3aL1qC2cfDJtBAr_t":uco-;DELoaG5Gt4#kG]po]q=$*MOh
%Do^K*k\Rq3H$Xnq5kE7n$J]3d`cm%rb],B*q7CU0\BC2P4/K/$huaM"l.6j2/.!I`E[=.NoTi30=S\K#RDdZ5ZiMtt.bnn8<XNK#
%2imM^!R^SN?HBeO'.?\PR]RK_-I#ddd"@r[[G9EV=/+OL=]$'q)?q*]ETfk$M5f52%As6*f2Eb>oNgJjd>R@a9oSS)5!P/R3@gj@
%q/qC:1e'0LiSgIai]gJ\LS;XI3<I.bfjd$q)*5'u]WPAcNj4i(HrI;G6]n*ZW3DKrL$m!N!X4m3-rN`]"\W*sR*Kus&hnBV@Od6X
%Vn'gqo7nWXF=74.fOKcji]=o=%Rnb*3'J*N$aFgJ:areJZ^)Vge(sN*AM8_9^8Rf@W$CZ@S.8f"#oOlf)m8-,n+H.U\mD2GVo+Pg
%pBJq$d`N$8eN$Ah,NmP7.VJXjWn_j`L^:*7oE(4-(3DC5*I<GJ1%b0@hE-=LDaHPoL=S>L]J)0D^3knp&CgT00,=u@Q-8ol'C?-h
%VU:=e#XZg9o4BZ=/Ot^tCqE`JW,gA3>S]emqb8oYeagFEX-+cW*6Rr]lco!AntQ'1S@$Z,B"E<Z_>cVZd+'C&+@C5!Ge['*%#NC)
%g1>IbMjb302qk[-H@E?/>.<.dV.UaP@kcs$h=9F&>;nkB=#mqDMA34&8!!KEmX/0..bP<oHe$]u090gd+/d8*#b"lcm@00lhJZJI
%iKo]'9`'.(MdJ@iiPWfC%%"EshhVNB>j<[Y$gq$Vmkd/)+DisL;SUTl'Mi\O=Q<QbV7YLI#I:RjG*C>)9MPVN^=2l+oR*EF<,?fK
%4jZrZMg_f&$hp?I)\nim90^/uGQ"0?<G+==)^V*?TRjF3bT4Ih>\h"o,p*QQC6d6+q55O-6'M1]%5^,kP_eieRYD=`bH'(3p;P)]
%<H<c6J1C4f@Th0S8iLKDo+&2e;a,SR]jB)M\B41]NZ,j_HK#"&5^K(sGm*NY!7L;=\Wa5)<U$:X'[^pBmapNG7FSds?cLVp/)lk"
%ID%OY`76Wk\CaFCRY%TNe(!Y4qM9;*)NP);?8eiflsNFfdma_="o$"$/*h0^mNX;&JcT"qT6@]P5Ys&CYEu<DF.Y)E+Yt6(pO1?=
%j6Hpdg[Xq]/j]2_\aOWC0:j(k\Dk65-23NQTV&T4mR&(.U]SHT3A!/#_AT>5@V=jb;Lr7)FG4?rTd5cTl3^Ug>$k<%V.tR8/"d\I
%Tb1'n?/\4LE'jNp?DjL]e@J"FIEl9pK9"V>b:''11LfSIe2!e:<'YSGg40UF<S.[@2c^o\$<f?rJjlpG;b.X0eeB-Lr1MNJfM9qX
%:Tq0Ql!uc\V%0W:4.neMdKYY,N-5>Q'n1feFJ(Rl1,(Q5JYQ?CI2X?XkJ13*7+sRuA''[/L.J"M\N52/YT]9TO[anL5=hUg`bN%&
%l,Rg<.Pmmr5Uq1cK&(HiGhe[t,aBCu(m7LlTs]J@baa'ReSa3e"(,mcXD=)<0=,kDFU_,&`DQ-A`oOqH2-,/VNLcgo2/%t-2([Z-
%WjGr[An?JKG-S;PGI7e+.#]k=3jPXCC'MhX9OSm0/E)q-9=Sk0i7'YsW,/&LJmQNmZ@I;VR+<sg=#OVGgR+:+Fuoc#D7mDkfL41?
%f-X'))R>#YPJn)m@P05:J!ri1Nir\ZQ'`%CP+AIK@VbJnQD)\9L&j^A.!*84pW,h`c$0L4[pIb/Neb'`aQ1g^+"0g>gFLNB(>BGA
%B58h5&$MH2YRpA&?)Pc?l:Ma1aapFpe&=3cb/'uh.0hb+a9A<2a?cC2B(o0EV/,Ms3]2-e^$]TcCpZit=#]OP9(BF&M/D.j[aBkJ
%2'grfG8fl25\);03D%oF-CpY/NeZ,QF:6a2^3jh394>U;2"mGgJ)aP@1ubB-295jc,h"MFJMSHd@MS=,[1Y[W.%_CT!\BVNR8Zfn
%q?GH\#Vd[V"L3Z1$c."+6S_l^#E4"uF.mA`21l8W=+HqY?ZJa<i'Pf3TWs5E]ACnN/:YrE=Ij.L!5LaVXngu0;RB7+.;\2g"@$6f
%etQZ/$PBhr>0!nMiX\OCoB=lUYX!IQE>nV/5>7WKo'(?S,1G7/lEZ/DofD^##oQXl=QZF-DfLom!(]Nr1SZ7]R1n!R;OO>>OJHUo
%I<S#4TE<O\__+5Yk^`eF$-So+ZLL3A<TD@\pR0!r9o[`TEVt5k9Y'4JML5GYnN:c_L'9"!8:X[Q($DBEWE,&0\oUc;qJ<*$PrO)g
%A]P+"Ua#BYS-7H7P"I6rNjl?F<"D&)DB1,a*b&`gffcFF\Ar!8HT-&S^L>38bdY*a@l*iilNk+V_jB$83qW5O@T1thoWk20#UJJc
%S],+R/]4m6aC<ST<m9cY@NCIu;?_epSic+?Zm7a#f\V2?=gT;.r`Xn7:/dt3`.?uPZi\Y^8RK=`RUI0?"Qa^tBP?+J)]/d#GOaq8
%D=!LY"anNbd'/%rLh;Fn=]o(,2#n.@0?=Il]Jt;V,JU>S1*O=D"Wr!XBo(2a?*d=K_+]/FQ`%5cn*"5n[`sh5N9cHVfjf&CP*^D?
%/ZBj#\;Fo[b8s$uW6b8TlQAs8pq1DOXK_C[l'3(&o[2@N<$.W/,i(@7Kh8/FI`(SKf^0)hoj,6?m>V77pp\GQYp=mA+!7clR$#/s
%s+*B_8au'jVan_@7D=:F'%g>Feg+Y4hW[oP4d(=FYOf[s6^g'>dougj/?]_K`DlnkAR;96<QcPbcnGsU$^%enc3r;I(6Tnr@%mIs
%H9!WhY<e8@[MW"N9`mbS9bldt*O@X5FPA3(\(ob7-C5K*j'-kO_;OO?/;Eo``4Pcs`&gL306\(\[E[nrg*jSTkV=kdm4u7X*pb]C
%5,r1rWf*3*k<ALQMNcM(<2<F@7i,AK!2MK=Us_8Z?(Y.Zd>FiN\#Q>8`J4&`lH#[%C&rLUeZ<kbW?7SKY,sb-1">PQ);)>4go%KP
%*H*ls2Y\/DX_SPRo7L#D@K]\Xqj1<A?id5Dk<L1gRFoFY=SmZO)p!t;Z=Ur+hb_kVahN5@mRIa$,SdVK?0"8]+VeeEOG06Abe."N
%ATCqI1mR11@W8?RPOUut8)CJ)X#2U52@'*nY!,kQAC;Ii,I:1gj^tW2@V74k^4a\YIq->A+P"%b5IA&(Fec6N5aL5q$ge%ng"eOk
%BM?j"glUH9DX"OYYQ101&!ft3Mi@sqh`S0,S&B%8+^.Y4HMG=>LWICg3i2/blNr;cSGDU4&<P0JD7(.fA'<2Y\%%bcS`]6@13j^0
%;/gZLfN\oVH>[$"#VC6'"DbP.:X&Bk/A3uDTAAo,4L%f**=ZkR5%*>F9,uck\k#Z*'L<Q71cOY$pAVGTRt(2>aYS\7M)>_?M\9F!
%aKj*G/36PtiB/j.Z8qMsT%HLpRBHWl@3Rt&9nm1%C#b8]W;)]gCM1AO-WW)AR01G+4>EMup^C_tlFhg6D*UrN#NPEoJ;8`f&i0I^
%"Z.R6KamFdU]q38b$?GMFsaW+>`LVo.(1jsK@s[2ddCPM>6Cs<+2qj%>I-+_X_G\Yl6SLd?R]e#'ZAmp3gl0dIs*_!Wg2>@=J,db
%I"Om'qT&`i3g7I.Q5.d7p'%IFq[GWgnj[]5_rHL-;2dHl]d>"8\(q3LXak,r.Hg'+C0Z&+J>f=A_8V$(FD#=;fgg$bppc\Z$DGO;
%"EdE`KhOp)@0'FRZYAm+e%nhM=CD_m;%(afi9CI9m?Kk)^_?tf!#s+9KY^B25`uE8>(@1n.KC5j%LduZ'Las@/rq\gSGG]/0Qbl[
%B]F.tT:*ee/0ULF?fW$-/:uo06RNDN&o9"!d\pl\'(?Q)_,j@d'/!"eJ"pcbk+K=IJ*f]fi<PQW71.T@,A_W@=^'?i#o?a8Ls`L4
%iGr"(`VHh%$EcfE#Hs.[51!&;1@2CVR?(`D^$lUW6$9JC&(I?E.aYlhVAcb0$C?d1h!=sH3Z)@8-/Z>X0>>s)4adZefq#m?e]rfZ
%Ek2b"P=<k28)cPr`E]^<dk"LcSp((hPA7EAgF?GiMcIk'Pg9qO'/,-;aI"5Kr1g9Q!g,bpli4d5%h&QpnstH)`Z>>Dg^l0Hf-a?&
%@8Ht1T]0*<_4Ui0U%+R;5p6Xbio([^>^LZ^GE.4<$!]j"94LYaFnIk^2Ek)Kd(pI4e_khVSu9%$XK!ro5JIbSE-=%hnadTo`Oa,5
%Fq^XTark;c(0cBt.DJkgS;VKrhFca,59d.(&*e&c^XQT7DV7uO):pVDlir2Q\7)gV\%j(:2p>=T</R*Z'eR6_)$,_Ibglc>@gq[6
%"Djfuhqg[(nRO7-87!RPnNg\Bfb=qAG^(sLRDs.d/FViN4!C$/T[#Od#87pi--3BLXY%o5!LK)J&.J2tn7Xqnrb^=.H9!$OeclC>
%X.nf9S()9C8[j@41@N<7e&BRAZjo3hqgk:?YK\A='r>:T8+i#'/ql?6Y;Q^6hnA<oJ`g3!+!!B28/>SIju,#J/<VP8f_B=CdXgT&
%&+/5)k:ZB9fZfg%,X^T9(X7d=cWbj%.99enKRQX9'$Y/&E.1b-Ll>gK*nJ\eMMq_:=c/.S#N"q.KS2%`E8^\c:.P?e@gCkoG="V5
%r,U`o&gubp"?F&(+.a,_ILer84`1+;i*k?lgr&.i0!n<>g&dQM]MHdml+hk*]H"`.G?"^%hP6f);]+DDC)6H)QX#l$78U(pdbtSY
%'iPm)V`nW#!Ot>UI\'d8#;0I&Etc[WKb4fU/i'Hj9HX"VE`W[lNQL.j(f\:jkt.O'&hA<ABh'WT+,jWS1r5.6bju!OXE;706YZk'
%2kLPe^VbC^1skZKXknT%Ar7PNI:8gSQ^bkJNJO?7@d!R6jBZ%,pW7[Mg"=*J3&fG^Y.=_F/DLb0I8Rtr<c/oRU.Q"\%"?`UT_1`.
%E-FNFpnBm--Y]YcXaI&56P0=$7cM>p/k/?&(;V<a#[F/b07qAYQ$Bd#<NUKUr/%L5VC8PB.g#OpNkjPn.T.-^/k=X1aJrM:Sop@4
%fr+qNg_Am;&,C>@/?!VS3!`tQ,*e1^AHhPdi"H8%.LoqFl=l$0'D\JLn`c8/238pIN5>h*B:f'1(#;3LfZ!nDlG?3$E6/]8"IagZ
%Tj]L4,86tW<0gO6RuG4J_X/aY0D727KDdLEIn5>dAO4;1.d!C_5q_"FXRY]JAunhRIU8t'F7I/iTQ'U,%Z03(<Tgml;#fTDXa.I?
%>KM@oC5:F&Huuf'Wmm%achpGt\]2CKpESTXY#6`=RP6b$</dE&0`t0?bB6"3=eD"X?\qjI1V9&j?J$_loC]`5o?*qTnt\CXXF,G&
%Y>hsiLN3,OJt[Pg4'Q^'"U`j/[HhjXRTLe?8K-IK@dC!(^0Tb4d>R@aX`A4R-%14T5.F=2`+a$fAf="Jl*\<;q!_)snK0:?_bag5
%*.`J97eiEaYG7WY3^H,2+*9;?KtHa/$@(Un0toDk'NN[DI'+8@0E$PPmOtb4@QXCoSo6IPfh3Fb1ofZW:;.A.ma$d5#RIW7Om"XP
%fk:B6WD$g\je0CeGX)2@B8IoTMNC'I$;8R-NuaQh,#OSPL3l]3=A"?LL@L2)@9q51)[\-9Q1j;?/XCK,Jr;I:V;ks@$'naU'UbRq
%l(s`=P8E>Ik+lSFd=-%u#1lI#0Fc=%UN]3K=nK#4JU0%jVE!li\bSoR*LJUfYTrUUJRK\CBP+Vj3mY!q]kAsd`>uLC9;g7%c_!nh
%Wj?-tjKlXZTd*7h\n/e+qn[,=%/kS6:qMI&4l&6:0PH-lG-.PYUPe3YSns^!QBs0\Y>OZo3T:&uNV<gg_@UHqrTNP;5#2k-dssn6
%Y@u:&pJ<<H:U=_JNN\PqeQ2uA8%Ml^Nm#:QEkeR`9pcoRG.BLUL2%a/hf813^/O;B-Em8;i2oVcH=*i,;^!Yq+Q!-iQ^c=<;n70Z
%99XfX/%6Bn]u4"fB452%c*;!KI"A>&`P^p<fX0$lm-mV=dXU2b-=gqnY\T[iCEJ1LGfP]tV<(KCUbeCS4mW0E"&E!7W?CF=a/J=R
%d%%mOR3=gmJG,7P<L8=h>&TuuXA+/U(jS,@9FO;I<s0Xk\4OnB$a9fV=U+CHmj^crr`[W^^Jg"6&?'Y_nTX(7J^^FY"biR"C#d(2
%rQ<U/F7g#P8,$B>F.`3B$381Z*@UV(R3a>p!m*WjCMp/=*TV%qfYa#'U5j@OXGa#=Dg;lV_@nG9"A0"73Er;X8>XGWU^n,a+r-4H
%ao#BhY9(p8DK4?9Jj\0\#*Zs,M.D3/7@im9N6s')pEN$GYlV>D^0N"eW#_DXGJ3.A^^%R@$iIi^7%t0;!L`L=YEMTW\Ikb^NHin$
%6RC9I_lJYYOA>C+V,KR<m5+DI8=2:WA^@dZBX:[+eZg@k9_n'jk"9bWaXnac)\#;/S7O\.X`B6Hre8Ct!O\M)>djL@e5cMs,LcBg
%jDk5t1!/Nb+>(7?DA\8gpiTf*d=Ce&/<qe_@d>9*I\($BZmko$e"5#CfP1>Tq/W(*r4G19mT+=qW9eWV#j=p4=c.g/KG)I&+kspC
%CJM2M%l[Q)"fQ@Ud[XfdR[7To@Ft"De*<jg(F8h;,<B3LW\QYqpr*1^MJ/(1AV4HS6#6_Qh#Bup?EX8cLaN@-=.GoV#e2uBlgV9:
%V<=/%<7GR*od5HP1j,5hFXCF;QZ2bI_$1obqUO&;YqL1lOb7/bLAj23_0)&m%q)nkGK5Rck7?q\/OhACf!51q&o/8UoTUc_$/6;N
%h,+gJk-O1&8#@n=CJm_V<Q:M&5UrlbL[?q<QW4trV+l]@XBOq?<78%l^X8n#*$erQi2.2*,tN=Sgd_>d0)'ITPM-,h3d0WMTN;i[
%V<U+5l0<Eq5crn#0;Ob/i`Vkb2'\C3jH+Kf7I\V8WQ`X"pcp=@>Rj$!#8b@HbQ8M?/\oSDelg5..'C,.Hu'Z$Uh)im7@NboDeI`6
%X^cR?>-@K%Pf&,_,h(CW?C>B%:`.HjXQ[_9:Lr4*>DDN6bKbX4>I,Aa.`WLWi#IIPksUGp'CseiKV+eKP+g9@?tf"pTNNBK%)Y'7
%DCSiTlKS9V-H3\nndENaNRJismVo[S.mAA`45-(,J:1<?j8D^BWF_NN`HH`@$5*_X;gdlWPWJ?EPI@!q*Ahlen$r^a"e:h]%E6*A
%+#3Q\j_222kde+J.GlM5N-go7RaZVN]Q;ecAfpa$En^-Ug+VA@b3A6S:.@@IYlEtMJiBf#&MU3_5iK1b;5nJW3-CKUicH,NQ:/Z#
%_u>)DdKHI*&tl#C.UgE!m<8%ZBA5.CUs2\o6T^9IAt9h6lYQ[C3uu-8'O_M:1Pej"EoYhn"qk@66MCjCLk"6Gijr^G@2@ZpPudYT
%PS11Go(S^gs&5cH])0Ur-d3GHJ7P/,iAl?S#EiZlK.E$7eW,C5=N<E98Op`n=9f#dBDQAtaA-6WR$hR^X!WV@aVcb-;NK'63s*tV
%.?aQ:FrG^h>ilO-!QdGsPrVC^:30G3gY&;KVo1[3(=GpZTrNNqTkAq>Z;g3R4"M"_[F(rIBu`r9Tu@cl(ksZnBi29;a4mPf%=[I$
%Co8-oWOGa]"Nk9DWEMgYC5;+BG]\\9@tCrXF\4`uWlpo#SNrS[:t2XG#6JJX:NKQq1D(U`F(K$5<<;burAG"Xl4fm@=E[AdB,1>m
%3/J;&3VBM+jQ]WU7h!YNTKd/D!'LuW>OeQ\S5+2^M[iZ#4?rL:5b"(g4;Q:%,F-6f6Qsu@)cG>mnep<XVp0e0AFZAm,g,?Aoa25k
%K]H"sFO%JKUboqA3Dc#Da\Cba\"/"=A.0>]SirUAAf(EnD$iEJO^[="(nB;e"(U@e@sLJ^6ZtDQ".up3S_!A`>;e*:CQU&YAdc+W
%XTc-1X_>U)Yrd>tCM#FY!_3OuM50rJlC0^h_`0]GlDX!1a1*Js.K%N+Df'mar:k`Vn[UMY$&klZF$Z,9qQIG;K=Z5dGH^l<N1tKU
%WE5Yh&]9-gP"'sQ#Fhkg)YnSYXZ?k2$3'0JqZ1Inkie$?9-,j0WHp\+8lr_IXs6MF98*1dLUlJD4`b^^ZZGdRnG2!,O9=^31[Lpj
%?;;YN$P9PR`51KY!'7gq_a)eqr'N,Wd%(m%d)P(LnAj10f_XhB\`S9O!SK>Cg_BT^GcHGfCq_)GJfTkP-qQQ"OA&1\\IL.S9_%Z,
%(o(lfLMLD&#D%A9"W1oKpj8'WIu>0W)'CU.\Nr?GM[Yab8T&ne)8KU6dObC5TE;naQNP'3*i*)/X3S_pp:e:-0Gs_04ulOWk[(aO
%h$=42bKel!PC!23FPBs9?uqdWP*#gq2,dab:oS(.2bSt%Z@:m"al%bC.uT\L"6K"b7,_dhTV7@O9+Ze!_*q*Z>]6,L__.^31=BDY
%=08kCol\OZ(t[,5NC%/YWD6*rI(7t:B'EZ8^T?*gm:EXRZeU[o@?aKSk[@D5DkA]!-;=&I$TFD]>D9`SMYbZ(D!i`)a"TT)j7+`t
%'bfkmbZ1%O@RY\^=mj?HA.ZA`bL85!R-e1Nn0j>]2)+OGWX/u#k0EheUh+un>9hX<+eTPfc)+/>K*oE_)d>Z`36[okh'*mGL..Re
%91H5;!a]:h8P?:=JUtF];8OV(Vk-)O:PHX0VMtN&+A[\B4jh:,A6>.:)<JkPJ^0<*Km@=%&,l.90I,.S5."glqkAK%;QTdsFhueH
%PB]9q\c-DBU9`Mt4RRg?;"M$`\PiWh=npb]\a&;m?@.*`nA!8NB:le1&igYo2k%r8$I_N^^[XU#oF.j:1+E[XOa2_EjqA.Q!!.32
%+2QmtCt.nda@?4mO8mo'Rg5L0pJ6b*4BS%rm(FC95'I^&Zu`jkndmpEFZt"@4P:d42#?"8k6TijMCe8-X#`sp]=5<rY@?%Mcb1?'
%2QaS.=BN\^REs^K:a0KPVKYEOaj_%-#gemdop3%"OZr'I+U#kq?*hj0WK1I9"F?_'S9ZkI+mR7CH7+hNV]pTK;>I+[Gj=Nun*'<e
%2,-ine/M3m7)l=.//ZB>O\of06=b9+:H_is4BQ5H]2'V@0[Q]>H9ST#QRZbk=L!LpnTAHh'E!9kQj1Idk$7ecDR\a5%!35L&Ibi1
%8Yk68PBT8oS:>Nd#!&?9rS85)E7*PjblTL:\T+!:dE_+lbGELsZ`s[EI-kg]WRRiR,Kq?cF;CGmo?OiW==dOGc71\5(Jgs\[[=lG
%E."Q"KZi77^"gM:RF+G.f<7/il/9c%)j=cUA&5,UEt.L`C^WHYCPB";I^$IDi?.G'p_7idY()p-Rqo&@h_sY^<78Gd)A_fgF25/_
%Q1rPPPF4Y!l))fg)FnZPh<%qp_'QVt2+`5q_.@5Vq2e*Y#^RqN`m5brT[=*RcakML^"^h2*gp%k)'A9DX1A6;('#E\YIZr5#9Jht
%XRtoa0'KsWF]#Dp9B%d^A8Y#T;ns.C)_VX%de,8p2$DAf-k<2^#o:.f5?=VN5,6:nCUgARYHjgdUPm5s#dZW4)Z-QiFa9))?uib;
%$c/Lu4U`i04We2n:Pi`P;)(;<?iu`WDjT;km1WaEh&;PKji>;i+b%VIQQ+?7TJ13MN!cQ`quW_gief=nQGoWYQU32>I=U/-Q-GdX
%bRpK)&l;@nWul`MWj=@9n`b7:B6a"cgj]#H#BpN3O5S;tXrIilp>G3Bs*,#kGCF;r,9I=Q,H&@prjDqo*[@q\HlGiMV/Y$*[*-^L
%Rus"a^%=tor+(<SH06TjT0>ngQ,;)P5?Q%ggA<s9nK8[G:sFGqkQoK\K$.:\E`9LsDnfXKMs9X(ZA^sVK1q"1%ttVqYnB5/-.Z')
%F#!+Y]5[HLLm5S8\g>:Y>ae3$l"7(*GMBeGnC#QkHtE.&as0%#$^m?16590HY7f>g)X;B(HKg'S7^_%(a]G4mrE2u8iL1Rkb,^Zg
%1ja8Q>9#I/Co$#a0".AJi7g+Q&\Z6qg8[QVN<_jgpu"'d$1BaT1'S5/MC!9A[2[Sga@ns"?n(pLA</#WMN@jMMPYE.-$-Eem1N&A
%MRZ9\\7b(FElq%uQ#X[4OX*#J!_Zm\YbXVu(e2KmHF9?:/AMlWNV<gg_U+_r6^)W)D5O"tG*ICNr\/(X]3`R/,Ujt%PqBfs>cH$2
%`o/UbVP0Q([$?,#0H(VE?D('"kpRQ-_mInWUu>U(/%9r@j11r8jMf#tAM8r<JYJoGUsjNJ*=YB>SI;JccZ#uolW'&N6a'g=5'u-(
%3ZSRA/Y@E:(=\UXr1`MJTttjADatl`g(i%*;QrL5I"Y>!B;Tsnq:<9MS$>fW,0M<t=OAP@]8'"XI@A[s9e>a7+i2R[*e8GMf1N&k
%Ip!U_mPg+mX1J/pgnCkTkg2@hQCj?Wjd5,*V&c#O/o.`WA7-O7@NDK+9h(OOrh3Uro*'qqi8)PC0/p(MBleBWP%&liV\2UW-Gd=S
%n]IG.L>&Z?U&KXcLY5n6[0,\>G0M_JDA`%-C0Ft5JH"c,drPrj1NdAuS.mKfIIiTUqs@!0r%bR27bWB!YDq<X0)'g+e&!f;nVd_'
%T)*bMlj+kJ]l=,%K(+t\a4)I.:#Z*0BoA5qP/pd3j.liMT9eCFUdj@^*[J&t]+6$Pq?>Z*A9[geo!eaZCMIF33aH?g#'[a=p]"DU
%97]D18[eAm?rAH,M1i0CImqR7%'8r5M0=X\QYo)EHI\F9,ZPiUn(&Gc<cPpT]V2T8Z/qU"jUG^(KtX]D\)%tF)`h/uS<Jg='Cl'-
%:o"C23N=XtLf>:6&5`gub4I68(K/@m44]g/7L-2pe]702,&NJHh$$5ISUp/+!:q_ek(4e51aXO^K:j%Lq+N\Hd*'$d3=)]OJ[.JY
%@4tI2ou=I6P3$,B($4&?MIt$]CB9B[nls4QFU)]ErHhNlPLJTBkHWHr17MNgb:#FB5e/Ae:J2I%:4)IX7tp"\B9h)]kAks7g#P9Z
%/=Z)ObG,AU8hhG'TOiA0>Xt)eEe*t\N"R$#afmrLpO^C:j#a!PLX4^b>p=oNaftc7O9@\a>9@XbalW"u1/"142b-r;[R?3#3U+"%
%2[)UcYpCkOCQtQ4FecO@J(\fF+<Im;N*IE*E1.<tn@4(V'1Q^DRm\4].l0oP\Dk.^O>@Yk]brO`eL;cMii'-ml%*;M4&P*JrHdLk
%WuHn,MTprs;ong>MD]8+Oijgr)*o3B.Fo8)jVasu=3UBUrgeqn^r>HSMOJpjI:/-U0)!!40AM<mC)Z3pkk%.+QtrhUUDd-+<u0<5
%ea>?M(UUqcZ%J/Q!5(%6rSYd<$W)/&Xi%d3_&,u$k[pVgO)Ctfk4-l=HVt_*Ko@pZ)H)!n]9:$no,a#$-!C"^E58F$&@Gd="mAO3
%r;tR<;aqnOYr)rQLZ@Fg+DJM/^:?:`*[ngS*>a';HgW+A:bGX3BLubJqGp/Kb15J#H-_^S$dTCb;@U;i$=h#l9NQHcQ!%^VeI([.
%GfQ)@2GB*BS])RfHm6=l'eM!F>Ie0T=nlr?.6KMihf`0m-F@gR//uaJ<>uA;Cl[?/k2Uh,[MLNYTtOZ(Q8`g<LP_BEgE=folO29o
%B^*O2G!^Kg/TSbsLF)_WE-EM`SS/nB:/gEJ]PfSYd`T:`<;I+!D;Q^%mHP2i(sGWnJ)__<D\(8Lg#%l6YuEVhqH!D)/9fNS#!\#=
%*555((7K5"rE9VZr0fr.n`&$9Zlfb*AW8$sad1C,NVe20VjUOYABnmIe$k!bDYc!QFaZ*hNSg<n"of6DleN$KhaX#'BNT*'MbgKn
%@:bU=kL"H??B3^te5Zr9(9Seb\jnWWs,ILsY</9gpU.W(B+%qT]@gMF%OFGK:+\_T$^TBh3bm4Wl`t"c9%</XIV3`Kl!^[`[;LKS
%j=o04#!_u"mK`&O@m_gdYMn$,NH3BOGh!=d9\afo5["^R%TnrSA.4WdA`F,nOLqS;G(-Upo=F3eZf4_f)"om0(lLHfWma[j-X0K:
%,`_]5)X-NEp)pL;$J1@JOtQ1e%nQWB,Xp+A"V0[;=p,.7(A,Xec^u]"Pk.a";[`g:+jDpIM9.3^!-)\OlLJ7ML52'WhOA8cNI%4?
%gg$r"nBd>6JMQXV<LI;5FgmBX>"@CS#a?6e1>QpNJ^RlJj&2P/"r)3OTG)n)-c9,h]8+E.p!rJB![T)9?QTES0lAEq65.1t3*0]Y
%SIR,`JQ%<t7ClEgbg1X-dM=-J%ME)d$obi/e1'Me-$G"m^j*NrJAUR\80qK.L88WFNH%rs1J[P8Wi;"XA2FWjCY]e)JRKC%'ksKY
%:EaS>j8$EN"d&o9`YW>LSZA;Bo@^W;*MX#'HZZ)1<cSlPL%7E4lXn7+%!"@'h</g_4rkkn3?1,K#H*l5)eKq1H&f])WaV#IA17j<
%c\:Y*DB7T&TH_fJ!F=#c[&iBYXLYtg?us/<a$WMF%Vm0JRTXcHFBBIj6X+"NEHJt\p'@d;'URX\I-\S*,tMG\WNqW7r&AktdjhpC
%78q/\54a/(gK\kV:Q(KP6V!Hd]'l0Ol*.UF;b4.tN6e#,0]O.OhrHCP5aI&I?W2p?dp[+Z,kCJnbJNj_CToFX_u2?,7M3fa_<t%E
%F5_C#*eH;W^M!Q-3`'c9=`@H.am76rdD-k'm:spo^Wf8%#DP>[Y;m+Y%SR@J;h^'uR\Rk1(_gTij.l^s<uH3j,'Oi2RCQ:F\7E^C
%32Qi85K4V&S[1tTm`\pWXBE?U2&D@t)`#-<$1M3<=Ei+^a`O.c@7(fg"6YRTr#$M7pEdZUpj/Uq^8NU@M]W+O==*`h$p*W0%Q#NB
%?ZbBN>02^0r[^Ga5Q<V8Yj7901M;S<OTGCAkJ;Wd_phTh0nOtVMPT)EpjFX-+;c(&Q!HIMS8Ag2EhI5VTW5rJ@.3?'PHuCEMI<Y;
%KL%*sMt3RTh\rB=L2mT?(H/ua/CJER%AU:4D*1W)n+mfKQ4#07*T-NAr!:'uY&=Qc3\Ar5;m3dOEn+>D\HoPAk,tDURWFU6XZA&m
%1>TKc>LmPrrcJFg)@]qH9b+)#cl\u_ff7fPh)icGE#C!CRP/*EdqD--[KUTiqaXjKpPu8(WO23'$CHH"Oi<4S0[ag\=P(!ffTZsV
%U>:qLD#lSbZ>%WAi4V*OSR"6HNHi#IR60]'LGc4XrsWU7::&M^2OcHPcM=#?CBt,'V>Yn=L^/OJ9r>*3&bLX%T*eJsX![q#lV3cn
%,6`md7_T\h7PM@*PgS'#K+SWgMP#/HY?ToV!nqn"f"[#!H2lfS>/7+k2g+P0QegI/?P!-I`2`'s^1P;u?)hSKqT%4#LLbC>iAi[^
%UdSci-*&H<4)M2=C49=o:Xd6VYaE_QF(F,F')^iqb1A"Y%XM6FG8^S+^U.)uM7hnViVS0)4p!qUh`ns5RS+%7Oa.c<_abPCoBr4h
%a@@p$be&@,r8tiP]_b4;D]WT:4/8.[EFBn,T=[\5_i9H0H#2qj[gGR63)=ARF*F/fn''r)QaJ`<jAi9B]7[R5>Geqgc*4904^:?u
%CDnE5Gam@;G-Tc\1/;&\aAo-X#Q_5-hn>iqj?#QsoF!0SQ=BOKcNR&f<i7-j@4AFY8)52^^*LMHV.^(GhQ?iHL8#`V8U/dH9OFPf
%Pu;.9*$+)f+s)2F.m$9G7khGHQ$%Ob`Drr)i[?F2_+eVqLC*r2dX<]kCCg\/(N5`uOtP_AYEWTY]W/j,9D*XS-ggOI+D.uh=9@B=
%2EnoFb)O<?MKWm(=>'!c43aX!_Un41pT080ls<r$Dt0o<kZP^SeQnJ[g#[5cE-YGFp8X;o>Sb>]-!\4E+K##l?S5'5h$n"p653e)
%+.#ln.N:<I3oH"SJqC\;Z6+Oh?f4ki[r<4&$LQ+?>LUS<W?+b-mfE,Pjin.#l7u;nCn@4H,1bU/L"+L0VOPFM9,F:N\)n?/aA2?m
%E0!%_0T6ubr!YUs1b/9H[Z<2t\F!D\OYIWti_rL";SbR50`#eM-naQGr?,>ci`s05%f1RdT.Zn^+1QX?L(c)=UFUi37;+rtre7b7
%?lB:9gVd+BaeHS+4U^P_JAR#dbA.MhON`/]IMTfakd%G-)H/O!fo;[2R^`cY@Z<(C'P2]S?"I\V4Y#UYUEj)<]Np74JNn,<6P3??
%PogYALA3@l?>`0#K>Ok'1Ff3so*]gV7!KFWN*cpo@.XJCCKEE4i\3lMIS15o10XY7,?LFa;2ih%K&OUR.CaGfHOaq;IVS?s*t1(Q
%Vnm6L[KJf9,I*ee>=u2G.GXS#m;hgWAu$_Q0E%%t5M=qChDraIVpCN2V6Dhm%otHrpAW?<4BSOo5;.*mjq>Ml/0DF%>a2_T0;DpB
%@X:,M/>GhT%$TYf6Xdo_XFq*OM00Q&>`=%//t>'+$=kfNP]-u/a[ikU(MjfR[X0O_V45O#b4JPq7sM0Q1,&TZ...=I&`@t]Bk4uF
%558hkbDi'?-/.1I'pTB6H!q*:Xq6FbZR:O?`Bhtg,8q0S@dC!(^0Tb4d>R@a9oK)B)EtZ*GJ\^OX,MU0%*E0:QGiUNDN"Wi3YW1"
%#R*lCk9nSX![pZr<\cU\hhi3=J0h?r/+/g68V\M2!qs:6>T"oZ@nDG"0FYnJ(E4p-=6o[=)'`j;)TPS4rBdV?[-B&d&t5WVm0+JD
%dYjn)LlRWoh]G>\\$.)_08GaV/OAdC+u<e=8#aer`o/UB3us[jA_#1/ro%88,@'IE6F3'ndV23%[sbu#h[;7G(O*6T]Qj5A1**IF
%5Y&LYVsbM+[<#c!kaeDuA-hL$OTe+U??JGYT&C$j/Y@E:BB\^(atS:lp!1ol7esNg%gQm3O>EMA.+copodQ>2S8[f<W>KfI=&HR[
%)MNJ2:areJZg,npeO_=\=!>DB8rdc?8ua%a=Vsm$2g%J4pB.[p]q%77eGpi4KB;:W7JWc?Bk`?WHV[YRXMq3'JUnYq-)c8O).d"I
%LN`(60F>BD)=utPFY.HE$]L6XIXe7.8r"b0]ArG(Sm6<iWg'2(!+?ngZ\j+<edbe/X;a'Or`kR;&**<+6N)i[HL^Ab3krK'g5'lO
%I5JP9=bG@nOJhWqOoj(as,-poKUU[:__?/g9<Jc]?"%d&4AEM5d.Q(#H]TdWHW?.GM%e2Xfm>`HJJ=cf."HMcd,[f/5ael)_n4<e
%a/#ojjt6h[5,lk<lrG@&N]l%-AL=.b(3"aX+>*>UVnpc3jIdJS\ZGT4P.(]Y:O<Mh>NS(k?".=;KC`W0fN)E6m/MKL'IsmH&0>a-
%SR*/M@sD#8_CEuo8Yo3$#lO7o._V6@`1.O*:\A-0rj6$S<TVSgbLg0I<:eTN-M$>k=$tc,dG\<#5TtmUiV^)YTYN6fb-KJ';ui5U
%P[o[J`.i>a$N)'*PK1;"bQB/G9LpK,Pbc$G]9FEYb*E>S$r9=E/_i%scB`b!B)@jD+#Sk6#<g_8_*)]i\@U7+O_0!DM!6*h[S1RH
%If@>L\H-CF`ck>_:=J*-9=[T?XU/NQWk0L6S`S-DUMF<"H=BD&6<_C97uDEV#JZ95fk`dpD8#KZ:NO<MLLCne?s?gWN/+@e%qX)K
%J?2XqIp#@<O0YOmPjIMIda@1>,n<`c4C?iP-3o+:oe[6p%l\)>I9hkHB,!OkO!_)'+]F.n;d?]"WT>EYp:]05gkQC-#ja3>crJ=V
%bf9;_f35@JrF:CI(V>"I?Q%<_&P0"6>*mXUlnTb*1Y?8\;&lp>N>:^(hls+?l_:g.i'*>D5TD6#"b,[9S&I*9RWNjKPJ\"c=%/kV
%hEddl$CK=:nPjN%kE==gEbl6p@i=-%AdK6I?<6^(caL2Ah,d'";qRC+8^)%Aj7)%#HH!F]LRnZe(EWI[$*fla4_`.'??X.s;`A2D
%/]!R=d4)'-3U`#C"+1='l,Y5B*=ZN=([0t4r]BT9,3BM/<iXU`8G`:k$5+eZDF%/<c]\0uA]*riBZtlOXpuol'IEM,-jmh:chOZ6
%?>da</Qa&.L!^lN:TE6?$f@NL=A^2b[pLF"<Dk"'4]m7U'j?`hd)T;90Kp>u+k-)g)pRk#Xd_W`NjFIB>X)Z:Jd+u6QRc,@Te1mK
%L;Yh+9UcQL@hqOTlPPr;I.BGHL/IVB@t`[d\92p,k?_fVqKk6*;^Wh)XTeCbbsVrM]7%'i2+Vdu#s*lPC/]JMKJFR)<l"<`Hmi1]
%aZ"Ro1@]KBYq_bd4Ik4SIQ5#<$O[Us\,fQZG#>N_Gk(%9;qRP]&+/U>E>sY@!m1@j3X&%m/`6[U#*(=l3HXEu;<MiWkjgS/OIaJo
%O.6$0#8&(..Ym"jnW+ObpgUQdX3/?0V>>W"WdqR<F_Ko8oq?p1!`#5q-k#PAE13gPjc2?\h=NS's+GN4rQD?@SJ,Vi.*oN[g#5mH
%2o,`/r(Kg0);;,Wn9k?k.!i6W#]'S<hG\A2fP)^n!m'fs1e6?iCm"^=@6Qct<B'ZtZ)IU$"Fs2m8jbf7!Wc+EiN*:t9f*1_Kr_/3
%do-i:H0LQ%A(144V4\)HY,\9V#P2%eCusGYaO)[OUYa_9RSN=dq5Lr_H;ge\jQKdc]ZrjC1kGRsWiP]YoT`j5"j,9Z"<_u/S="k<
%)TZP%P',@&:R,Ae?<s_F?b$J$JJDlRH_9QKDRco="#LfWHd>D?F$Ecgb#KH3Vf"S7gug4?!J%Pe,.ndaqYcCL+R*qPWBbK1Jh"S0
%Gb!<@5M*nleWG?RZ#OQeg"';sNd#m>dghARCNSDh$V-Dkge8pY7iVBMIYG)u%XQq7l3,6b1W@>Y&."M#9%K`\HU\&?cZn*6U3.bY
%#-WK+l?Xr+![T97:H-X'#uoX1#eSdS,h4R+fBl(bi(0B%!D,cdPYV7,2j^/b(/utI+^#ks;#f&4Uaaf(ltjZ@isNO^;L%K*qPm1`
%F'<ulT.f,I7>m_=qgW`*mE(NAMeWQrN_0\X[.-dm*9R\L`D5U!;K8N1FkVh1a*VRf!\9+mgr,1ndtEKu3fV)Z-*#.A:Dr"jDW%m/
%F.)OUPi2Wh1H>`>oq>M/:t!Gd1?<S\+VptSbR-W@/<7lZ/Ot7.E.(^Bc%WPVCI+^+?#GCnCIh%C36F+blHkPDZ:l7oY6KEi(RHi0
%%0dNiWWFqHiK/W>r42)o@KFL#'p$[715M>+V9sjne^-uf75\VtXT+_.Qrd"#?tL,fd#eYDj%CtPSc6PgNRa;<)R:?!qKXB@ko.do
%R5-t4oM.#ZVYhdmL]V?Q85UMe`-MC;>U'U-O^E:0QP4G)5)O]!IlFpO*7-)+Gqql+A9S,Qn9WS?ZoG[Ei>pd^lH-:)Zt-:tQ^s.J
%SrJl?]];@\KSc4jo)'?Z8)4uc^sei!n!m#dppGf497Z1L0$[r(7[5MI=kj\nF]QV9fsqLUM`7gEY*)iAgf`tuC"5N/(pkYMQQ!n1
%ig:P>MPUQ8&=L1h%!A+<8!Pach7$j^R=[75<Okn/_j&s6puieDEhEsPDN9iV(tW:&Ys1E)"9@;'YkQV74&c'.6+-',hg;MomQK7=
%n>S'O:D[@1I(QJK'(=\VA\!8gl(FhsZLjjU/64P;Pj8BBeo=bC$`M[?$U;f<Pr=YmFl6OkJ(-Bl^:'S8PY[JLanWYqM/05YB)apD
%cr1CS:4q'mUcL*Vp>"M8CU:+mr:@*2Q8RfDTcKQ?DTuop-JEC\/GT:$M4X.gCs)+^6u4Mm0Vb>)B*4tg[KS>Tqr_-@pIIE7D9C)D
%Jp(Z*>Z$p:VT]Zo!ISbW"<!`$2eA::1,\[[LQdB7dk.`8pe?*o!o@+O2Xi6TXeJ0lBIGW[N!den6jCa@\IeN\1<<r%8&s0l%-3H8
%*uON50UV=MoUuPf0W6c;Gcm?_?s)K-2g5]cK#'aL5!'VFbr[jUjI-J4l$Us=BX>dmZ_.bC\6R.8A"WWt^K[JBn0#FdB[&Ull(\a4
%4+1MUc)*$mI]G)/mGD23*up\mXqR(kq:rXfMkT:20^mWsM\hh+DK=8ZDGso7,i$ojA/@N)Q:)3Ojt5ZZH7IJi'68BH$Y_AO5'P\1
%nc]46B*o4ZY'o`Q7j&ni^qf.4\&N>-]HgID&`IYah`SDji&Rk=j%gkuje\o+[6.N!d&CKk6-MMi`/r:)m'm_\k*!B7;@9&.)Y$'c
%;f(.+>p'jI;W.#U(DfW>X',];/,4HR!F^R]jm"Nj(7'/@W$BAbL\Y2"e.D88X9a!Y&863T+".$O'4;lP?a8lY!QN`l>_'o*3nj&l
%*Y0>\#0@5m#&5nH#G3PUd+'94$O-_68sT>i-WU3I!CQfB7PJLuY:g4]7NsPAX[*f*Nof$Ld-OYrFfAEE@%aG4A%Il$/1of<DC2g!
%M&0N>8JeaB"W,Sg5%I[WbW@M;ADuWnM<3/g<^h@Z@mL.eJ9f*gLKP?"br^iNZn!NOVeBf$Yn9cp"\bIoaA-6:0_D=toZ^Q^>/6sB
%8GW><Y;h=eTD:6Ff).N!KhRN_%;,o5S;W\LWa"A!cD8sH-MmhJ7rRM@A3]uY^VHbgg;:8Q'Jd;MO._KC>8EOPB=*0?`G]E"OKbZF
%q"3W?)DScOF:i1sYUOs/kTVk%f)1(lj1KRSB`&:e7N'HVWm@d<aNWF_53.jZMPn'iqCYpd_N3_JmH=X&Q>jA`Z;5s`M%O!Y&U%s"
%gf30d0ki!]"'f/kj#U<?r,8Yo"Of=Y:8bE)(,&q?AYaUs9s?:o:XFjp=U:EpGH6%$j*;$ZR$o%+&("QZkOpH[L'8E=*_MQnrBYTW
%S`X[6B'iI#Et,[6bJ`-=L@Jd.BjKTB=-!^F8LlO%Zc]P1#DX@co;)'T8J\iVAn;Wu8?hT]Gq#6([;4qQ3h/GG'K'(^GMNJ)F:@OX
%/bV0/&$Pu"fXf">RJ1_Hg)Lf]c(.]TeXp3iBgT+#a.k--=pQ"OrUaq(nQu([e38e=Tl>PI:J,(!ZuMd_d7T_jilaAa.;TI_FCb/n
%He%AZ?26ORY@H1<1kHWMj5S>#)W)TS`X6@>?WhZgTbWMsTGQ@Jc'rr$5<3I"^^"XgWaKZ]TLkd=;UJa%(Of+LL"]h0M'kd*<r@K7
%T3+e`\P3^DRsE9IeSaN3kVRFFh$L7/bE'V4Bh(Fg8V.+l]CG_Y0LL"YP$f.!B"3"i(PAc,iO.TiCo\+Ps#B6G,6pGenD<+L(Z+&]
%I1Fl?]b+<us$XEgcd".E3P47\b,B[4*T,q$\F]"I-[.afIre\>Tu5\l,][.lg3qoIV]Fu!jW:p7T6p>mQue<M%ia<IpAH?4hH7MO
%5!GRlguiN``dK/)f"%uBN>k_/b>E9U2VJi-Z/L<ps3,@Sf/%2\o#e;mcg3M2T@)F)mq[+X_+=>G%u(D1^F'QNrPX#RWt`m;>c$7=
%jc7f*\"`Y_gCU:9a6GMRO`!ikNRqH='INmkdDh:s-9#`!KBUTj,drnT,?/518#<P$5B@JBA#2Q/6DXlDoI@<oZtst$]=\P7C<e,\
%o34OE!8p'9aAljp$mUZ"kqop+q)JuR'VD6,kuMp6hug^(>Aodr?fc&/aE)TU+&Jqa3DOOY>T'3prV_C2hO`VF&*q+CpU,.UL2[TW
%R24Z.icMP.($E38f4eo'Co\u:NITb*'Y+,?AT@\a=kQt_IC`b,me)L=f6>95lX+kdK4Jle,-B)MWGi[M?AGoPXIfc:jdjUu/u&,W
%@db,(@VR\NL(A1N*Q1d1d_p[lO)<7ap=#sZ4)CE%GI$3\WAc(j.T4fP34YE@\$K!m9^_cLVMeHPWD"E#7!18e&a8tJ1'5fKd/hlL
%7.^(DH1I9X'5Cm`PsW5L5ftGMNHY;L[<(T\FH_0Sg!:%+`H(LdaT.9"%Z01BApnl?'Mee@SNPu.ZRnA29/`N`Er6%q2#-q,1uH$N
%>o$2`?^K_VlJSV(>IeU9hG6KdLQduT!A>E'43JG*YD]dsVLtno-c8E35H>"W'a!4]D=2[I**aM]^ihB'<HeT(=apCHrQYeF\6Tr1
%cDPpLBS?8D8j-C*.m=_qCY;j>mlW!JY?b2C5-H;egKOB15MascQ^bZ[8039SQ/@#Dk^m4c/\e'Of#*'W$m20C0TYsEV,Wi6oAaPd
%JO4EM^Wf*)+)Jh"f-X;ZjndTN&;_d_jCk,mR.N[UE`2282WoU$rQ!'03R^tIUn>tfBDLAadSK[SkBiNP5>&*L`Uej3d:=PeCZgjf
%4,!L"Mk0NQPrs8:?O:U=Gh'ugn9^V6X_aMIX*jSQ;V#<'YeQSj^FT#5lT9'Q,?]l"K&oI=5?-UNhc#fd_a9o4^HZ=frHpi'JS+ql
%J,!8dN)"O'f<)`PZ(kU0OEkch!$9FW$H&(0M%3o9&NcnUo#3u)'&:4'<'E5F/QnEF9_)XK!b9Yti*!UuHT3E#;o?k#KA4T5=<RR*
%ri$_%fCfaHH`%BUf'Pf9:Ntp_p-+l6;>Uu6paK@ES^,,lj.YG$[o-k:g,]O/<qUlO*\YO`$D2X$K1U!_Qb)k2=9a"[>f^fD];=r9
%B3a3Kf5^fZ"qD=/[o_aXNT8WF,]WG=*P`8hAc75u&-]d/3*:q)5P+9rHd;+uJ$omESL09.p#AZ@e38ckO>^.aL,jMbK*D'o#lS\R
%g:?#SHPa0=_TgZ$=R%.r9>p\S9T?@>Ai#\6X4=!B6LA3mSJSo_:"01mSko0qpG5[%.S2$I'7,es4*rt/)$""#r%?b^fB7jgoCPc9
%[f%fKm@DjEEgV/a.t/=*HZ0_-=9kG2oL]*$=3H!Pp3p5jg?.DL6GJo55>H`<HV)Dd0mkF*[iQo^NU"tE_Aq9V*j&cL?1G@0DX?Gb
%ap>HVqVY0.k&Tpmq#,7)TV$L=mqrRt!"</G:VUGK)M$9INb,Z?J!V+`K=f:\aghCgkc8Xi'^L,5l[/$pFU:[`.3EuLa]*H8OBkL_
%aX3#),R(Q'nZ3YAKWe;qrV\J&k.efH5b(@(+b:c4bMC>Shp1]('i$?MAB3HpBsG^^GE@+P_Z5P^ad\&_VK20T<fZb.3ua/G2P#\(
%pug?h'`0Z5jR'6p:an69S&LkdX34E#TQV^q9u0DKHd\l5:#@#/LS9,uTLmZPH`+jFU\[Z4O<&eb--D4:V[LB:W1T[<kP(#!1Hj(Y
%=)0b-0Ki%Nhe@/^H\l2iOkg[72VY''\oLg;B1)7[L2Q.BHrIY:R>eH;jm[PK3/bU!iodYjkOueGFM:&aL@gLoj`-^W3<5ttpTfLR
%;Xp2ohf-8jDAPJSmKLL`l'EDS>2P+8F8($kIP8#>egVj::$pN3\%hN7)3K\W_(#\O[QXfE_^gMf&J2tiPd:Monq<gMK2R1$JplA4
%X7_H2Mtq7^AoD_Cj%=c+W50[]5nhW6cpFs?X-LE6Va5igMlZq2+(s]pcE8iJ<V!Ba;<lADCZX^%5t1Yh@Y+:6e`4+\YhkXD8?/AM
%6_e$f][.\4l<9<EFuErdX5]d=1,&RnHDb*p=2Wu*+JD$p.cg<KFs%.uf/nT.1<TaG6)S)sNSK9+LQ2%&AX:Y=`%U]Ykq/q^'PO#i
%7cYa6RKW)>a".%$KcFcgL/d7qTim]u[VhFinTb'P/:"S4\ngHfU!GH$WF-AW&Ft5+hTDJJ5M^AO]"b4ASSrG^:-NA,C:2SJeHspR
%g_>6akL[?%;G$P6p:u]4j7&^\H'JVHaDh^Zbt:Xr.)1+SS25e5p[W[7$T?/<GI2=XcmCY'!:>q1=omol3oo%XT1=#-1g)8+@.buO
%95qCDZ=lamS'pY^ghtqF^^U1]`G[YHq;(:`V]>,F?XOs2rI>9,eLoVP(Aff!>+5%9(#au[[H?T!qsj(&mebOJ6T3JQRsjfFR.9F)
%@[W/(p0Q%"LWB@KV`/"t#936J]^[3#7'VJaF0=!i)V/dkBV:0<OB]PAg"I6b"PmkfO2!4@n,-DKDI,tNpu&JU8:J4A)]js$,%-L=
%(@8SX/!'pAZjT1s,[)^'ET;sDXY?i>k'O6M/?]T9D?*&E'^t+R:uQo8F_((GK7ENrUe1VA>()!\l-8B_kk8C[1CUS"Zair??+?A`
%kCp7/bq*S/IM?s_=7c*&V'O:$g0-!4BEo3skJ!h9^2Y7eHQ3&WHRm1QKnkb`\(8MY@#FCaZ._OnYHi0EZN9iJ`(<>BD[>\+E:%PP
%)a8Wj7>U&$SKcQR`VuO<$taM_1Pis1LSkg&0N4E,j0Dg*7(X[O05gsN*c%C*mV*hXJ=Vr(!Lotr&_Ip2,$kP.lc_Pl6+4`TEY,]U
%HXqJ]dreosf%kkNciMmljUTYkr/0:5oV!`hYQf"J-(]R&PoHd+#"%&+G,3dF\/h;<M2H#t/##!#+V"1tVa?nMS]T40g\pLUrXJ49
%dU=/Ri,7rGG5nhQZ1d$+2t"uRE)Ai#%:3ER"Cn:Oa79dZE]/`&e&U-:l281O.:/?M0;\Hdr@:.o[=0?O]PZ#G&q3UM\Q%VU8Ep&+
%(V]#bQ-WU2TAQcPf#*92LQg0,H*rC9+T%5acf<^A\-m/)S+:a)*A,#3ZSg!>,h'of,(P'qo:pjk'LAnJ\\]08?'cc4@4o5pm)9Ke
%3n?pLc=R<Hc[KDbCi.^3d]M$)o00q(h<KMRn2LQXk3G`JS6+8Bmm#tMl[,S,i>5>9pDX9Rs!C1n;1Zjo3`YB,.aXZCIKO9J*5B8X
%'=\pkZWFqWUsMR9^[o=k<ZICakLpkV]>0XmjC6m<Y=GkXO$R#[@nh2J,m)`1c[HuE6uFIj^cL.266SS\R0@]fCFugF*#rpq]iHn7
%1"o0^ZIb_f_=i+J!+K2?_qT9\;F;dh')K%Y0Bq:X2g6eM=`o!?Hk]r2`&GDK[h<JmoQdgU]mH[^$-c_(&e!IqlF4afO18+A%X&e\
%OqrTA3js0NBMR?I\ib4.!.<>k#pU9J,5Ck[\6&%32TKLOXZA/$Zil.JbjZ/^nl^4.`G9jBO>mFUDJ'W`X`[Q?BnF<[>)Pt[#sYl>
%djEF0jnnS*R4tRR#o[FML%3q`ZQ._[Q*TAdiu:7`j83?SoVq@g&!np@m2'#r@'LZ\2@_JBY$0I!/i\drac+@K##ThEpK"RkTp_Nj
%4tZA=V_;DRf_o2]Si/o`kc_\]L#@1p)EQc0g>beY57K9le/YE)k.]K+eXLsJmGb_tmX2\:B.&PMWndpcf%'N>LX`+<PQX%Pf3&,i
%n7<6$9tB96osbCl^:OU10_gOV76,fa#eSV[a:B=s.DO2J4)W3!Kc9tHXd!#H2c.K&i-M"ap*V3jO)pbD5bUa;@&(Kg"m#XmjsPjZ
%?MESso&AWK!*j7$&870j1:6BT0\l/JrU<]=O$"?blkH[L\Qu@S5$uW0hV=>Xpta/*WV_m>o%!$cSFEr#1^-Vg&&)(E?)^[=q'"I=
%%`UTWZ>&X^S2[SuF<caQ/4Vt]_e%)/"EAqS68m3ZhW2r)qPg&cCG53gLktJ$:`)NoI?Q2M?U^M!fq-'D3JcR?HFg]b>"n!=/Wk<Y
%^:<scEL;eTdP"#,"1jaC(4[1Oqg,6TI/TquB42$-(EY2\>n-h?$9%Ee).6?KGCVPt)+Q]9\u/p@bBKcTB)<j4R\908@!Sl[O\9VY
%s'KnUg6Kgd,l7J@jaRi\!<oQM!*!QM`-IpdE'P##GPZc6^\q_3A6*7V"mX[PhX/kL]8o6Y%Zul.AOL&Y3Vcoa4P/mmKG7q70J6Rp
%iL_nLIJHpTn#rlp&dPK+TP!)S<LKnQY;Y(F<g-Zt\J7K,E38U"CC8Xrs'&oEDW,Wo->1-)a\6?DF(P#gocp=jY;.-4[;Fp"fA'?V
%5Sa_[e^D?EEB^[.rbrHHH=!#sl8BL2fUXF,5OZ"\V8dBZY4.HcQ[1;4QfZf;>!&J##rWY7V-,q[jjjssp$1Xa\'%3#+(i:Cl>FiM
%qmZnAF$-f9`c?06?^O,X4YO"`2;SXHG`UCi<mu^O<S?dqX3/*ndNgB;:@d(rX%>cTW@f*Hr\3doHYg;1qGJDR`Pf>Mbj*IC@$?d1
%^1k!$^V',G2iD9.F]c?.$7;@^q.ugDO,4c\-a.0LCsTHN"0FThK9uHg+)L35F-B&Q81R6K<"%eWrigOLj*)'`mJ9+fR/0;>1u-5u
%5Ag6"-*/eg<+^%rn+oRO852rUfJ&08V3fhbl7(+t/+X)'T(T,4r\.2DfJ"@h&#J%0cfp`dHRR9n-,&r\DN(CGbKoGHS2V<PZuG]o
%^GZikV;$*,1u4=+4H*tD,6(a.Fuf/94HsL[C"0043uLW!Q-j\8T@;NITg\2UPKQ/QIS@4<M&)m7Vq\\WO`XehNkH,Z8()8A,!@[P
%&k0/U4ho0YLGN.\2/SFgrF*'^lnc6'qW_b*'biYnZtu+JnQVi8h91jAAEQgR"mHmR6G>P=d?EZA7ps&5kk_p_*BdQp$iJ.p#:B=3
%>P'9N_u.Z)7o'nkpO>*YekE[I<D<Kqo;D3Y\u$V*&(1!f$7rqX%%h2k^Hi9i9[!h>2i0J.ZJp3'BCd_;X.tLP@L%Bk^7Pu>$0fe!
%MkS+>Na*:HIuBNdP6ETEbnn9HLX,XL@KJO]D\DNXmcsfrZ)/j\VFHK#8DS8NXF6g,rh8a>.+ZnD110rr>rPZ_rIV2Q-=+%OR99?s
%DB>85E3]-4I#I]30ld"^@dWJ/D3S.$PO"-lT+]&.`7c#`iU`8A?`K,%CVRb)DK8rg&8O5Jp!;cIZ20<Epa*3=))6M5XJs<BI?^,o
%D\Ho$Z?m-3.DATjT89o4n2@*icdkRD2<3cne+oTJHt!dBSXc<?=g5t`a?m9]j"K-K_^Hb\RNrFC#R=/c3m+[^eO4YOL-)3HD=r=p
%*djMc[-bR&hL+2m!L+@;obSS[*jZ0sp\(rhQJWKK,M-98:)5[UW6(9!-RM=/Q^0H8\IF%o5\\+UPeZFQ'^kC-3I8@6hL1Y++Co"B
%IXd=oU+Z#uq)3_X(kdNdk^7l6(g9*hO7H?OQl+I05OnSqo50P[/3"ffIFu8pgbDE^qZ;68ItCqa;W[ZoiOLO<XO,>[OoBK0+6mI(
%Uh<0qm"V<ck'hJ:d\tntP=<C,RkI7Pr5*U%J/lU/&l4bLG"Y&#RNjDIYjM6*(0"da2=+NbC4#r_&fPHuI]=bQP4_[Eo:Ug[AJBSf
%ao@Z]0*dL@k%c%988/PW(\ZumP\(t>G;.Q!m%)-[MV@ac,AYoQH)W&OD!pR#_cc19RT)lf<h-5_!o[5-pgj44Y4Of;-@-8nC8qg:
%?h99L<\.R#:>jGUp1J,31(*3J.lZ&bnU.eBHsF@Vg3O538nbJMFZOl?cTUnJio+uGr&*Bf(E)@dZl(Ls)hT[i2W3t",Wa!qn9tl.
%HgKP$n8]]GG[cbtNH&&KI6A/9#eGO+'d[=c6Ua4Y_7*$/os4n!I!,J(+BO[[YF,OC/NXIHNena!&Qn%*6p9B0A#lc4f/)`Pb0>q1
%;A;qM;\so=5OaRn"H*@L3$..u4Vm?*2t$fTU!smM,0U>#]I+K=Ug3enGQ;/Eq\#@Jp!!lgrN!S<l[D<P0\r@A)u]E&+Sm:g9seI"
%[:n5F7F]HO^7^^>.<^eC(ac0Y-2B8If&Xj,M)C^+bLP6MVT'ipk%59U!an4([^'&*go^9)BJu6r#jS);IZ$oja"R^l`tVgkl`\qS
%7opbhTE%S*mLe)=5Li"eV??s45^IT;bi2PS'Bb&fr"DI)2qo_>c]cgeB.A+-Bpc;12:8&)Hr=P"UYIEVVft>I`N@YM?j*a/,iXiY
%f%b[6m]M$-a%/Q9lsm?J/RKh06AAA5.4nd?46G&5r3DX875g8l4f>B7,#&/0+_oG3=?ZVo3*Fm\4+*#+(%]"%HKOnDN4dS<ri4b4
%jX7(7h&UY[O-d6d?%rWWn9X<5J&CoB%<W=D[(2X=c1d)s'U^IOB8l8&TUZqGf<&Xt7>Y5l^'f:sY:ZOs.itl]Pn>u]4*k<f\"um@
%P#<#G7L[g2:Sph#mo="k],3V+q2SLD45/."XdPR.D]R:*dZj0R"obr2Wb(S/EdckI]085ICY)(9_dLk$>&M/NfWiiC5q&f%Cl@pm
%Jr/^0m733F4:e6c;;.Q_\0eL41Hch$fUMi:f,fegb89?/>cu''O5?UuLE?L03V03?2Rpju-TJ"986aY=N=DYJn)d[#b5'aRiB1(^
%P4c(eH7\balpGX>l5=h.;58_De(HPVkAk%3Y>9)FD:\1*LH_g\36L'!R??c+.f:&'V"<E6*e#dQjfDOeB<T2R[7VsU];-`roaM1W
%f!KJ_\Y?1O?7KpjeedaY'/#Mg\Hm?#L2lpb0@!2aB9bB[ZVg\<REd@a8bI=:FMHMkrr-N?SP2a4&MjlNLQGi;WX3,/\R)eZOP<3'
%KS!LPkH#M4-Z/^](^YMbAZ@WB>2fHtW?Xs@G\B3=)Rn>'d_0W@QW$F$ZFIKf+3r*%6[\8u@K6<d/d_+LV4CfWo?t<XHS)G)k>EfP
%M9?.HLcUo.XG?W]eI@]MdWe;e5CM68m.JiV`LW:\jB1INbQAko\s9<KSlnS*WHG0]_D(E;ZPI`R>I32VN,&Bt;5H*%F[b,gk_6K@
%,1uZC>K[u)imYbb3b%<bm)l$8>FSG08;uNu_=$'PS6%VJY$>9cl>a;2K7q;qlPW]67(-:Jb5%8*@H)+QXkX+B'\<Z2C`YM,jb*BQ
%_Sbd,Wm\K&Rm?4<3'7t(#3SHm9[-_!A7IL:3[$5iPLT6a_Sq7QnM-/9_\e;H_^a@)mD^dUYOmdI:\EW:8kZk!i"6dgqh,Eb;IA"t
%VlLEmAoW.ghIMLH+gH:k33umI'6YSZKo-uN1D]YBkf]/SF<DO/B)gibA,cu9mB`M4+-$_9*I>XXh](;*Sn]?[2Wsb>_Z"!$%FlgG
%Mb;%hc9K/9L;@n/IaQZMLgl@lR?i>a.]l=V4V#7q4'BH1$ptK.4oOsuPO1Q"e>b%(A7G@hW=lCiZ.+&10:#e/^5O?K0DCi+3f>;D
%-;+*'8YP&1'WnA"6uhhcj"[?#@qCBe@sd)G!`i&HKjUlYd6C4d;e^[;VP9`%0:Q75cZ1XSDmYW=[P5KPUh_01)S\MnQ-uU!!aKD?
%,7GK?qkT4!Ejqt0p8[5m>ob.Ea5gmhpu[DtGqfhFUWFA+fqFppe``tV\NAOV/Y.?U.[#P0(h?jsfm$q<cIp0I[g3[1AQ1%cKt]@H
%ekrec)RP)B5nGr-Z+S:Y2#<q>)k<!0X6i]k\7%&@[NgVU+HT4Nl`]s4MClOfahHH?XHnk@;=UnI1WP^++7.bIltZD!1+HV_`*sCU
%,&XNrS5d\RWuRE/n;u5e:)%AppJ/HeQQ_JbD!l8M)o\`A>#01POpSMMd)%e$?D\b=3\aMsE(7raf+K"ak(c\C.a=BnPFXX(@h%-,
%*7pi-DjOaK%7*1](1H<+p#Z,_W=fcrR<%hLrl8Pp]i[j-DYpDgn4A6N2oV]>e-G8e^cI86BEaD_e>3'@lR4&AjF.B&=CS+pLWd(E
%AeMj*@@)?Z&?XOh$(m.gcOQaZ7Tl(qm=fKo7@\0CdLJVlAGYhZiF.(BIVEhP?8#&tlZ0DtD^\VC3jV%J?G1,gU8%<bMJ5/5)dl5R
%Ve9fWNO);53F:;eg#kh4QI,p#5h07Gc&&O'Yu>[?8R?3b5Wn\o9@#,!3EX^l=k=HPc)6diXBm80AKJf<NR5<A5Dgj`ZP$+!#N*96
%3qJ.W\@BY(qdOp2lUY72Y#]%4[:.DF*mU*>H8X#WJ':57l-0Mjca:3*SN(dIR?]4U$PT1F_V*![TI7`F7F]+(!nO>V26%EJm..i/
%^Uhui="c3>42,.FN$l:I)jsTm:\C6hdYl_EFunqC>O&@"3[s-p-8_Tra4M!ZGgs"I!7DRh4e9Z,f8n\!I`#34IV?K2Z;bIKgfZ,4
%hZ-[.+h>8D1eo.?lWB]a:%\Tm&5f,;lT["7_R@rZKjm#Z?HKRY9D/3OD6-pAHD0?2"[?I3/L;(lf)Al7J(WKD#8?QSF(;\L[V)%*
%ZE).oFn)8LrD[)3ff)=8-a/f24#[VHY[=ra,bN9GCGfEHeX(:gqVPhf_Pf,o_)k3A!L#cJPC%Bh;k,Kcfs>_Lc;s"(2P*(aF;p!g
%Sa,jq0!Yo4Tfn1LM"ZPe,L2@'K4dH=hO9-bAX2MYTnE&5@I(TJZu8iKNpW>ts('FUh6M+9h3_iq,H63=[]-?pCcH<FCLkW=nhY(J
%i9f%WQQ">Q<f,qBaQ_OQ'"!/F;Nn:1M]L<X9sW^"b;X!\\l.4M?_6X4JQf*Xn[Ond$a-/Rid$:gS^6TM\XK9h?e<m(\]H2Ib_!1P
%r&9:V&s,i9`h5Kk"/B:\i=UO]:E"]jb3SC(2.O?XbSP,a_=@:!Sf.4SpkOR:<#c#AeI-tQ,f0^SIf.O-lZ"*:M9Pr#<R6FaNY,81
%.ps(f@$0.aD'7c?fGOW#<@]Df$MMHaNI:c`hb7$kPmQjFD)npCRuO%l1F8?3GZkTHF"&KE*_YlP+3'IFG8p$a26G*0k'9Hpd@sV'
%$YIL_TY<[EAKpsLI?SYdHLKcr[L)24Ti+;k8sk!o\0bRu8-Y'd<OcEd63KE!O9D:qR<VF"i%:.B`<<Y^%mr!+dDZ"_I3r*ToolT9
%A'-nCmO;N#"4q:?Kj"]bnrnKt.sF;B-Gapjou[d"hu&Vi2gl>pqaT=f@t?R>IUMl/[eYSRpg^X+A@Y1aHt/Q:r<m5pBU`p6/uQn;
%5#Gkj>@uc+Rr@Yc?S_LJgO+gah_=psgO,d"M8!El"`1oD3MrERf!Md^LC\m%iFZGGM5_nSCV<"A-Aem?al^3RW<Mt'4b)He;)3-@
%B(h4mq1&i@R!jQf%Q"!j&!)M3^Ceq\GhSdYI6Q)Fe_?(qF_0s9RM6$'Bi/K,AG.&41O]'NVBpCD/G3UaGM%&/1Sn*Yp7f9K?n\fM
%BDZ'b16`ed.<p1U>0Rk$mkud7Q.BAkNGe2sgWpfuF1>dc@nYNXMn!=\/?`F1&n%q.WQ/:,MHC+?OlD*'G+P^>ea=4Gl)bt-T@U+W
%[gYJRo1U%**J=ld?IsGGB9'<^jC@!&\D^&3X?]4e3Wg+R?7.b&o!`u(SVNmbJa5URk2^O4W?h3WMc;A^=T;52=4u&^C;Ja[Fc'qK
%F&pr*?7Q1.#:]$E/#ZoSg3bMqFG2mtjeN@I8S:BAHQatM5Yq$*q200:b&iA])KrG,okaB\/ZtX]*$73<n`Q6HICeleQV_2_5fphB
%b5,q$-1np`U1^C4d:!SH2#DF'P"HIZ]Xs\<6/ga/K!Q,t\cc8GD.RiUC#0aDdgd9fp0YFCG0WlrR5q`t^^eN8_SU`QY3:Sa91(AV
%`@Gn?QW7,@Q]##nf@ZKu\o#\Hl@XGogUB!qhQ3FmcV3HYZQ))."7P+qc0]mU=kd7W_`_=/9;LTeO11dghAY]pja>AS'6?T:QDQKN
%1<*CXaL/)3=@K:Sbf!a]R(@I345,7p/krQN$dcHG1Bi_2\ZXKT6;F]m*ejN3AkT8Eo<3)%DWQ%K@D[,sQh\9$1A9&?NL,2VobpL!
%bZ<Ee/Z0[!oA.rE2D%c+p'1fX[oY@pqkf:*mVD^4d(QX/q#ikUp?HSrj0O]CS&1g7.4?)\Ag@?6Ij'"NWMbTMdFu'/LZo6H3C.A_
%BNDiKfXj22P)FAP#?c@;,F6tC[F!>)gCoRkg!i^tm*+KlC<\mB;tLJN)X@g_3/u1j]A'm*`nK8k?7V%iT<8+RB(6D8'ns<rlHS<1
%?7SX"i00YLD6?V5dBt1.<53L\pkRIY@j6'cfsAjlhCM.^PnDW*c[e#Bn2<npaS6!/o%na,<P*[.)YdbqU_X:=,,qeTLg#12.dq-p
%`HH*2,G3Gof7ZkdSLDu@0@n7_]"5IXa!e,[VYr@q?mk+B^aPZ!YsP9$a0;p7Q5ns):Qt$c(LIOH0<6])fKhpj?BbU2IPND:9L@nF
%hA!hB++o]QBJnACH8R]Im(TSC#UBkH'_4UEGZi7,$2$kTDVKE?4I+qUQgC',_7m[cQ/h8fK?:@4UNSU+YOftj`d5e'GHM4Z8PQ(e
%4r;b7f?CdT4Cnabe>.:T^WKSuE)_d8eZP+f!>?^`2s^QLnZ(g#@mlYlSq;4CnYn?+rj;*nZHjl'h_<*Eq'I`l.)s>$JVD@^%g20f
%'&m7>-JAI5h5H[je<DJOJe>F*WaU0a]c=LP#o'#B+Z!lcC'L<G6r`OX@AiqfX#a*aS&n(474;:A-`:8O__Y_1SkBZeId!X&Ak+d6
%<p5rEH.lc&OCfcAnhrkk=[!+Y(5LM56&.BD'2%jFZ`)_e^+t[jjau0\gLi#J6H1k5a_HrF8D]'F!d&!>eDL2Pe'm(07H9hn(QJ95
%U@']so4*mfNAC*)]D.c9HGA`]e3+oT/^_*c^O@=DbAE>d\FspQbZ+8;Ff(J*/i\MV>5>_=%`]5lm*Lp@fjDFS*7cdL;01IadDJg\
%^B#SBs4`7'TB"n4nB\9]r?f8$nJA>OrB!OmBQrS)n?6(a$B?nI+X:=,p';no2bH`hN-3?]L5jh=)Pu@lO0D9np06.kX"b>GKn;L:
%[(_FLOS\TRB9uKLK[("L=W8Un\5h6?27`7Y_d-f0=c<+ph*mWFcNRo/hHFm3qQNlB6$lP$Ip-,Ueo#[JQq`u!Bo2$,/i,$p<(>'u
%<IOZcZcK5pRl/dY]YtfXQM"rTBBk2[oaS<pG'CcT50Fd.]qQff<E31'%n^U-IV+j3HhUIeDlnZ(4T<?L3+?.QUqNUi3sTT%n],4.
%6m9WH<4.j'0@S#_B)M_XIVQXsMRE-u9D3:+dbgH5\lA]]:&BRnr0_^)pJ"oMcBVlEs.Z&'[\WqXSbr*b+X8]gLR2KA*J5MX-WZ;Q
%.>_:\\TrQ2+g\5a'.QXX&\i85Ep4bV>#9,:L.rW@V#`6)*%afT422@Wqi*]%T7k?b^ub%>Zlt&[&23OT9[UtE2JpO."YT:'Ctat:
%l`K;FD-D<AB@*Lb)72X1J&A,m)71MLiF)K5S):JbLV-)2(dgAC4K%[=pSjk0e<0Ks5IaJuFUDUF([b4Ce!PHV(OGpYPU8GGKk@t7
%\(cgd]s+oZ)]3@dAVRKjHo<hU0smB68q2e/]:n"M0KafQr]#:H4e`8'gjUjRdF7a(lu^phlrKNOW+p"k7bP(`(tkGH9ZH#E1rGRJ
%[*-t^6qk5<hIW*tS*k$J`c7<tW1.a3\MU'WoiJmJ6]:[tF7(Bf)m?6_X*@4.hR_>dl`q,;=k"'sqC3IMQg*WO/&(%1l8LbY<pgZW
%nb_.5X(bXJF6-3o"fq<#-7`B_s,#;&/X$p:c(A.@]XP)4X<+3dgM2F8puAQHXN1SEaD1[>aU0B_T389n-7_4V<7D9df/\'h)j4p]
%C.u'#^m!c(iFm"j)58MD_F&>uY?ggFFaPTp)5(3t1FY$Dnq%aF-[g]RZ[@cj^4OB#Z?lDJWd8)K?W1#uD4OQ(9N<U8`L0$fd@Jl%
%];[Zt347/P?.p\lk9-5Q'fB-?2Y?6k[3CV>kUDq?MNk:t&HCk]fcQ!1IP#RUUP?Jp4Ssn$K<"pi\Chro&:YTRqq%uPK?*E#TsA1U
%0?O(Xs"ICfrY3<ult(E)/u.5T4QNha:H&iSGp-nd,"%Nojkq2X)C1$^b=#e;ki.JkR:HZ^@J(sY5*bR!:FEion;dMc4iZ0rn'Q@C
%nTOHNjLiNe3^-53[bFF\F.A#fX4l"XGmWU>b[^U(58bDbI3*epncSM)coR4[S,'B-)'_h]&Pp2dDU+,8jdO%.faK8Dg%G,3K*TIM
%dIZ'4s1*D#!OtJUYKC'rPuK;W5\l)c:g_"o;6esAY5B7Lr\3VcGnE6?k_YWt[`F(\S+Q5NFgcY!HFeAlIX(k!].#rq$P2A`D*5O@
%+KNh)r<MHS20lFWL-6q\YA]_1(Q4qOS4UEi0h$Y;R.d8DFCu[m<PR;S"cEV-U0j";Z;A$ZchIuu8t(e64?HK4D4IO&%W]\db+o!\
%,n/hYI/&oq4;:q>g!HVg:fV`QNFWO;omml\0L##1ZjPAHRE:]3puraf7,LK-Z52ZkW<:SQ'cd(MHJ(>a%&b.5+,)()Uuo$$^'i++
%H1Lk7e`k"Id6-4[n/b*caG!D-*KgI]n-XQ]'C[#(gSgIs!Ra>]8H%a1POKoIQd;L?2MsS/Yq&;Dl7N6$JjkETV?>8ZQf7=<I$mcQ
%jI>UE&Kn8ulRfkQ>2LpubU$:-2-gqnY8>3"^5_Q9@?8&o&('4Qhq<k$X3au@7_M%1l0C_3BiWMi'^[,LaOOmhJO?UT/hW1$:UYc3
%<Hmq*'Y:K+Hc<uts,o1cY526WqSf#Rk2K%Uj)2q!gPsK]Z-c9Vcsmg\N-iT/gc=,u:9D.Wb&M"\e3b/1)&><up0;%<dFt6@oUZ/G
%[`eA=ki)-2geFj"UaNI!V[c6]J<An#eo27_L"F9t4LopbcX,]dZV/WM6`a_\@<!_[)7Y"-_.SQmBZKl(@@(?>A1W,m^t:-4h@;Jr
%#V)8bg[XFK`Mpc#=$Q\73914]+&+uBB3m5)r_mA&bW6`in4W*F/bT'OkM4>'9R$H2;egK87ciq.mL^KS2>uoPCh0PQg3Clt(A:B+
%/UWl55PQ?,6;OZR(Y#K5:bldN$VklFaSAfiT=j5i^fm+;?*9c`(FBbk[A.n@EZsEcF\gl@=R5Ek`JrC3.4/TP-MP*s9P&\5k./-N
%[bh1aHNI!`^4VoJ/%F@*5(qG"Lj9KCS3A8@8:T>e:M$#`W>?J<8YrJ8[o'-o&nChKFckam5IE,NNTd:g's2X@blj^qPAP(_?qD/M
%#;85Y>E5`8LF8"6QeS!F]$g<phqMN(cNcDhWES$ApBpaqI$_SJf\1GdNa/K4a>ZqRJmgp,&mEfP\sI$8&YVgN-fO:pQU>*gLU.]8
%+H)`7A&5l=RIkV7Lknb7[Vtp3]mN$L`Q$ndj2`Ub))duG<afSZ<#AIa+fq6>1SqQ07:g[mrjob.GjTf15^.st$/U$>J&V/p6'=>^
%-B@410KTIRW:q;G]Z%QN]pEEJUZ&O).C>YZF>\Pnp*RUF4p%nN7i<>*rJDok;*c4U[isF:oVS%84ddngG$a@E6[V/fOKYf.a31T=
%@]-Gsguu%mA+1Jtjp=Y40>.-U4RId+KQ=q!,U:_A9H1?57$'j1h=6MM#T3R"mB5\fX.?BTA&2jQ+jGeEIQ>\1gsm4&qkS1#4nGd(
%n(6%M7PWlDS)..R?Ti'<NDl\"Fruq_NeD`OHD@P(1[c"O`J=+K.SrI(M1!oZdGcZM.eZd-l>4YSK\*bQM`Xk@Eri,7f-mg=YP%2.
%ob(Kk`;C@IkEWFLicR9;Iu!<akZ%*/qX/b)O>dgUq+PAYW8&lZ-A6SBaI?VaG'c?rCHrdW@#8EE87WY3:A<\WFe9#+ZZ:*kMFT3[
%T>fX[dJmJjqo<k"F5/JjH[K82heBgTh]CJ^0B:0ZJ$NSa//2,bp#+r7>CC9FpRD3S;=6@=ccqf;n]^bp@B[&Ll7eXZkh\2UK;l@j
%<hCk$P;fgQICVBkT<7M<_m?m4eVa2=0./uC2NNm0WSAGr%r[p2So.2c76I&s]*FU2@=Y`=9[GD(pf1Xq0TEp;OHRTO(-[4)RUl0J
%A@_M:lrW=.2ibC?_3>+9[pRiW)J(0P09t9+b(Y=T'Us.[C^>Q6T^jN[q0Frb>*q=)ii#kUMjfEGfRm;s36e"q>kk+1JSRn=*,nS$
%R42F$6tMN9<U';nFWE<k`8[B66.qlAqqQWBbX(:n4icKk#4;?nCB(BSk#Zk%Z.V2b9t@#J-`+VAp1()]nU#6;.mms02EUo)T?IQG
%EGtFHEqI!1T>)Q:hf./4XJo+4Hs1A.QRD7uQ.!Xo/f[8pX)p:_?hh^EjVQeBZ;l,>BtJDMf.XJ.)_Xi7S\sLZ6HtDD$7pn::$$0D
%:faC\/g.SH49k_m_Xkq?o&=LP=^$17Vjq*:JNmRk!pu^Yq?lc$g\TG9\m'eN7'&1*kWlrY`WO6'GB2f2E]R9:/`(Duktm\CUMD4`
%YQeGYIta-&r7g;g>;>5]*%A%.Qp3lArch:aO6'ECU<j(KggmTk/O-\H.uh*lStD/O/sdNi7=0/WcT1n;l!BH*^%,_/%Kuef:hdM;
%NSZt6d]a?rEV'%2?0o5JUsSMrYGRe7"%N:kHH8ZW7jGYUr5/-PpERb^AU:,afX\Ue0WXt._5-M%``1O=)W%gD`\5Bf9mM0#`qn>X
%9TNpIi-YMb)=g#=%b=7Ugg!(sHO5j>>9q30/d>VZ:RS=os,9Z1599#"Q1=s""I4:EW)_uI^6"]krijX:W6KA'qVLp_=c)&%_'W9e
%3!5K04=[;.p^QGce`#?k:(/LeL4lN9?D5FDNHWTGQl1X]T2P9.mAb3=+,<7o!IRUJ4lu@r_IERG&^C`X*%dI@<Y?QLKI]c[%cc+<
%`FB^RE.G%p%bh9H"f4gan"+g3kre^d<m.PicWG-iH<U3o>!h52:J:5d$+9_m\@$glU',*mgm*G#/^C5V&EdGlC`Ksh^?p=AH)WXq
%\StU!<M^1RU^+%Z5P8h$#)D.#0Q`^s3b_&3V>=1'6!fn!:J;Ker><pM3',DV)t8!sM4]'3[O\ZtL[B,)WjN%W:r0=Ci&/%Jn+n?:
%l/q$W7.k;MFm5iFW!hasVrD+.arV$:Sd<pQOk\']e_coZP::ae\m;jP3.6dZq+g2B.*31A*T_!O0]d>Rha-&CFn*Y+%J%1VJnTQk
%";(2Z:ILHI?ET_.G*,0oB4_?H!p[V.o2)QA@mCB'OM;3**tKbm>ek3(<3MI?).@Ln>hhkIl&c\flD8iSI<ZoLlX2GG.ND,pYHaWp
%!X#KX?%UV^]pThY<&U69C4uI$fe'Vdn$*EK7Lp=4kP;!D><,oM4r`We)3[tra^8!!5$L+0n@qpcT?'Lk(aEk#gcS>&1,.d&)3_'_
%4Ln84$T>kVb%/<:lCQ5K4K$?aOguJY3#S>C.b34aa"o2;n#gCQrbd<1)!-([q&Y/]LP]uZ0$O^HRI&)Gb(X,K;B$^/+#7V*41fe3
%cPNZ0m"qDBU=Vg:RsNoqd?.e]1q9\@>P3Gj^K3uH]\iUl;VmnH3bH<"Wc*'pG>Z$khTjTSa8QAqfsm,YioFql9[/o=Y1e,kPj64Y
%74QXg-Eec*nsK)m)3-3Mo\jO#g.149nI,pLFVW:a;RI4=-`WBC]e.tpRH^kd</ujL6`-'nQ02H%aJ!belJTPVlSA?SF0464frh[=
%(72(>I.sdcYr5`hlG_qTr3QS7R)m*I0/"Kh[\R6Hq#[-g8<rTMg[W91Z$L[_bnq*6[>U-uM*?u>7reJ@>u0nc1/l'5V#O%jVt%bt
%lcCc$HNsl'?U[RsV.%*nO:poV7n%d&pbBA*B9$UHMV;ROkIVZZ:&C[JH),&($EE8!3pIM4rVW?shJ$hQqLd+8^fa)Ui^9[RDA2H(
%H95@<.""Oar-RE`[5(b4+)kn:WmYJ+jk=6jos%TIb,Ni[0i,o*(A;%-3p;idQCAdkjcu&-D;f%den$t\RTt*YI2"^)ccmAE2(Jq-
%?E=#+/0b[:UXSFG;HGL"EY4c=UGra)D7qj?p;Q7d_I)tJnSN`lVcV4Uke&7MG>pTF1\X"^B]IqWYIZr1:!_h)A)6%[VrZ"[;6)N$
%@)JL=gctu+aZ/SH#I@+XY?[=hqF#_j]pdT&aFL.;<&qX].XCu9R;SO+r+iV[F$%plH+&![GUPIr'5rF^EF0NP)rKI?SQgf)ir.G7
%U\M(%\Hs`kZ+QBLnK'j'H7\DaVB8Y*PZoq$Sak$X*Kkg.d^#q8:3&oulgkM<8Fh&(Ya<Qie)oWQ2S[#m@/TLhJ@*U_=m,1$[IB\X
%QL=G&=\)-T,rOC8_ZH@AUPRYQmGZ4Iq+YjAW\Q)^naP5R7=uY\gs8a#e$Kh]d6?+,X)lb_KkM"HE[)6aTBCK34T07O)g@6QK,q)S
%$+O0R`lE<Rn$eK$@+2`Z0<>Tc%@U":D1:K^F2T.S=a8CD=3ih[CiPf>jMg]&8$_s;hRV]A<b#)e:slWDEFsB3)8N`:5VSpg?t;bN
%;ugXb8)t5>="Z[iK;8@a0-0K74.cJf5o5R0N30U"Eb;6<fijp5A02Yr[U],>@58r$P$Y!o0<UOCie;(R0*Q<1*E"T#?Y<>Y-/B<F
%bI\E]H>\4#I$ro$i"*8<Tl-F&^T<'1rE)'s1mPPZ`G<#C<1lX#YFB/+l1m1?rq9CfbPpmPmqX.ik<^D<k@X>lDn4Apn8V$;KsgDN
%9qQ0TA<@%>(q@Ac9i`aSqSH;mH1VTa\V\u"j5^!mp#hgWkATp%+P1+lfiK]qj`K3;7FqRYDP<Ldp!M^k\[?oA;ef$CT8R`7pjU`i
%4MMk\ShSg.*[-Ylh<),lP$8i*oF:ca8&O8=:pN"J[@48D\lPPg8kqS%(=2ZbQ?Y%%8H6;<<PkBOhf^X09)&;7<Mj`<^,,#eIm`0,
%[5)'aZDFZMl1$F(1qN[?Y4TWWgqr0'mNt(BL_Zrq?A]3)Y;eJ+2=SZqHR[OYT?A</:6?W2I]M4rgRc4PB#h_(d+Y0?A+XU,a_*9]
%;R62hLXn),l#l!X^%ON7?7/4Ul5(KdN.*d,N'H@D?UejmHp"ZTi-6S6e4Yi+Bpdh2P%'g9I_@W2!9T[K3q4"-m)5oN,Ns==XB1sQ
%,20gd*bc.]gXFPll]ZLJBL-r:FSiRcN255.U=US<,W\K'_-qdb[mZA%RA]'Vd=MiKDH5tmN254N:qHV/I+%h-BdDNcNaj_rbE:#W
%G*/A`H1?`WU,Ka-Dnj/*QedDV'CAo_':[s93</%ScG6KHTQ9t`lfq+6\sFLaaJ;lsEAbN)b3@9p$D1&bHlj^C?_-ZLac\^[$hGAn
%g%X/DO*:Ar=&+NGeiPfTR;Zjf>oKgoN/?O_5F_+SRKBE-?^\*,P^e;?05EI1,6jjpn2E?,(,:dD01Z$Hn^=HPK9Jb$k%gFG:P^/F
%Ud(L?H?Ia7a$YqM(4O^-mgoTa!eL18DiB#BplEA3=ObOA^Hr>F];tsi`#>h]q_d2LKNO.3+9,/]*$s1cUbZ<T*F8CQZ1]+iUF0?T
%oU/hY;r'Pmfrp4>cf\N>7uN5I?P7.HS[>SW2?*=3T-O*R@dOQAn.gR=\R15Y'YhO'I'ND$Qfk-+Ha+J<-=jCT901aELc%'CWfIc+
%s(u4>9m.%JJ'&YGPDp8l5P$e\A5e\)CSSk;EUs%lHr"'4o>$oeTD00Q6k'T-W7GMW7GE2,A].c9jM;qsi+ZHnLA_riGo3dQI;dSR
%LQpu.qLW,dYoI,Xm3Cb?o2S9`L0>%Smk6^G`k;'+UZ["$fmM!3MkcDm9Ch)9LWqbT3h;WT4^VC@W6$rFB?H>3rf22c%J,!<:W.YL
%7Sae)WY(8jh^/QS"hlnPk"gfLo0[jtqCBJaN\3'Df&%^,J:mVuLnPhH=Ua]rmU>uVE[f`1H\_"fqoBe"WH.osnD"fD?@D&18H1`S
%LYU+(["26qob1,B[X[FgG!1F9-t9JlU9IU1^)/?h$eICDNfSH3b^uSe[TiTjdN#P`0_s_3=\t+"<RR6hW:-oN#0#-eO7]5;Z9HF?
%+uK3PH;NeNc2Xt]pa"E[cIY2R"/U:AYOgA1ArI!re:X`<@IH&H;:Ma-+3D7]jG:EmDbK2uCZe3Q`hX?IS-:R%^%-Vh\<Og`.3IPY
%?ETLDr5_ek%BR?R/\R`m"U"[XB%ZSq\VD,]U@SJ/rQ)R7o@EUJ/R+LprJ+X'I6BNQD9c8<[$ln/SsVMhV5DkPqtWp6[L#Nj4H%]^
%C<8C.4%E14X8I4j=gM9]\oT9<;J1,,O)PR<0>hdWe(YC4i6Xouc==';\'(kR$O`Z6)ON5]Jm_^/%,h%!T"p3AU^&Ds8?"Gd"0'GB
%fk6F7eT^tb5)bBq6Ac1?(7qC)0$\)cV<6Y.J_-BUa=N$qCbN9+0[sjA<G(i7B:8<Y!X'.('*ECR@[QX)SBge"IVEF94$^7qe_%)f
%eaiFu681QOF:q7Pah?>@(=i>(rH2a,qjJid5DBmWG@.#/:F8mD@H4k<]:_8P2&i$[HUu^\0OsdW]NRIhn@S6Af-L!a4F3b][IP6N
%9R08<Vn#>Y0"nD$X'U4E)dZ5Sbj_mA\gaDEq?5B'^]54Q:E`A,?N%meCDi_ndX/O9`Q+Q<C<6CV1h3`)#2HFMoX\,`4](^$Ea9Gr
%Q$DT.&GRCmMoAVI#-2ru=Q=OK.#j[^?Po3>ir>IJ1mTa@bLPk<EN"Bn%c`<a&j^$gkS#7K=\$f'1c(]YAjd8(kOUeNW'8]p[O,#9
%BOPuN#urG$TsJOR`_gmSrVR5l.o(-!eEtf/Xo3*&A.aYI]R%N]&MIqY+cRNjkj2#DP&B87T2cB]P-<?X7$1fs%-2L%\r3]=_g>.4
%f\B@Y2HL74%6i;jeZ:/6[qPuk?/at8";=M$r1YBUTNfWZJ^<(<1J>aeM5UasI(SG#n=m/=T592.U+T-R@o6Yaf3r#Cg-,u91m$#&
%$>+aIM/khuE^t@Xcs-&T,"ubnT>_up(FrE7kDtQ:<6S0UTM!+4Upnn"5%G]e*RJW&\J98<47T"T&LtNRFOquYJbgA4f*++FT(8nl
%S3l^ROu6Q0`Y*QjH5jY9_V$)QZ&U\=%[gDQ^fY41Ie)Nmgmm,i-u)puRu4UM\IQX.+@j0W<GSW\&g/!D%22>=JWu3BS""cjkn@0H
%A"/=_dK_r[b-OG2>DlT:>H3SrRJ]@n/I\E:Zeb7:9Ks\=bA/7QQSV/s*f5Ejfr=IQga^Lr`VRX:E`A_ZcY!ob4%U0a2bnQ(!t&"@
%&jl@lRSbaD@LS0G$Pm%ulFO;d4gU!H6`;/0[ftg_F@4?A@#ZVdFRemE(!A!3%4F!rTnD4<BDn.^/lZC5W096t$XP8,fkXt.ZkUtQ
%.a+OG([6HkZhs:r<OV%m+Ms:^<uA1iF-Hkp7;<q2MfS-(i[G-PQ.GG4\(Rt,"fT,L`-Ie.0\3I:P]f"%<7U*?>Ti48OFk]6#F(f6
%P>`h+o+MZ8mU.7"co_MA2Gu",4-.k$(=O'Q6&V/@B,X<$*gN>;?a+oSm\P*>]EeIlg+cnsbsSVYTdIkV5TprFB+gK>n6g07YHPCp
%f$VrIK4\b$SaGR&VrdMb3GHa]8=4*cTia)m+$fU-@-o19G9\;1iPB+mE`:HYR@B2&ir/Q4H1@SIIU0M?3K]2p\`SKj>AcX-jnsED
%TF4"_K57S7)N\I5brGQ>R2>2a1c7SHqY>J_-hn\iU^)fl8;RVVRW'm2e6r:YoX*7]W1M&Nb_(If]ANas@CY*jpF)G[a^pGa<92,p
%KM^4"b0->\F+]%A(hg,Kd=9+^k#J\>IX'PUq+pU!llUA?r^UDs"97*C\>hRLRVB&l9Rq#bQ-Ee(EA]Jb!?QloKu2S7q4[?Kd!`HM
%qp0Kk@E4iV#HQtVbW*#E@]cusZYWCZ'l2*D8mo2j/"#SOfK[N'!WG+Y(]N6EIobJLRL4]I#Q@n:s7J@SUb1,><GhZkEFXB;r9Q`f
%^DgZWfN5Y!VeoKW2[hLE\r&6A4SFi0\S9(&c#LXEd[G"jj,=39=EeJ;Xio,4ruKQ&ejS!BES\(OVX:>OSZY"f;cd+7Wkpf^^,$d0
%<F#5<1spHt@H/5>do&p1*<Fi;L2!(R]=C*VTaq+0!Rq(/WK*S$fu/!%II3CSI-nc&s&X'dJWEgO8m=@2LEOr=CPo:k5_)skaruLV
%,/c@k;ur`'\hi2n&)$k3hA]ZV1iq*RC&gXp4-!l.Ll6abJ4'7S9l#cg+jb0c%9fQ%eP[!RYoXIng;A\\g9Ga*I-ApbC>)X/(Rqt:
%$\YH.CPEB6=/#geUh2O_MGmuJAE*YTf1kO%1Nh>--g^neYKk.Ug9;#)`rR`O!>Gb=<nc.#B)o`NfFI,&hl%3=na5R3gEXO<Yaaai
%#;0H^RJ+oaI1Y9rK=>l+#LT_'3$G^Qc*S%VX!U+DCOB]P@M*5,@bY_B7D,U9k6^-%P!r&JMWS?#R]5Wr(t?7\d%9I$X!>DZCq`Q&
%pR/0%Zqh/U&l<'^@3ATfa///nBS.(4_BK#Zl:=F(89LChBSm3?R]UUd'?!(iFeXshQr\rN]#p&c!?Eu)-FQQd&o?-mA)Xst>qKpR
%JJ#[m!6@pLC"NK#l:=8XlUPS)@h=AD#9b!I3!`AThF:>(Ws[Q:e#oQ'&nMX'ck51aXEOXE<<Bte(a8Fq#f]>T>`5JPnfnJ4Z<T,W
%64fUgOO*.!SQ6/W[X\C88F3^dYgren1e0ujBlXJD=i;j1!JD&d'88hLlVYabaCf=T0a!-T(6UEshFSYC+:!&k5b%.$a1M(g'[6Te
%7GFmmhV*cU49Neu.tTSXecD/\khT&IlcATUco*]iO0[_":50<!s&RdDd@Vg$FN/d_^,5Ud2D3egPf)C;`Btk-m>>4Le'`XMI\rn]
%dg7j@6A=!edCKAj$h2;'j?Pl1\N70>F[Z[3P8uL^i4ebrC(=^hA8GGWBj-fh<//!h&C,I#Ztm;1G`KV^"h>%,OBDQJ2:tb.JB'2%
%H1G+B'+&:V+KE^1RKB;R&sj@6UcXo(PoIPRnlRpS!7LpF'ucon*75K+Fojpqc4PG^U']Hq>H*Jkf?mkG_WPfMVUQ$ZDK:d(@DT@]
%o[-?`A(=FiXu>YigBr[,3bpA-9')3T(kAT))@DTY;03L0#C%0.=iM$^+;gcpB,SdfNcLF-)$Ar6&872`irK0i=:0fpXr1lWfT?/i
%%HN/OAnM\c%g%:r!J9YM+Ju9q#]YAX!ed8b'q;!K-Gia:KiSZiD?CZQJB#GKV@!EWS28-7%\6W#W\+be&e+FlLNo7T-PIWnE7bG\
%+Cs/u^:>^[E9.'sfTBeX`_uoTQY4,cJW6FD6mPn(*FmJ46J*.W<pr<Wa##ZQ=XO41Hdmo+3*Bn`^T\"*ca87^k;tkhD]j(B"G/`@
%LnjM5\>k29J4C*8N0rW51^kA\VZ"O5Eui,V@p$*fN&R\g:dat8Si:/H<N$XI$*Z,kr!,K/c(V8f4Nt%G%?pKb?kg'h+NQ5:@PQ[D
%+h3^F>+hS[I<RLn/%-h&b98]>PP?as9I7=d*8$*7XK4WS@9kp09Wr&+T)B"dcETpC&BJ<JfN`Q<3Iulm81FseB*;>dQ0K7t!\@&G
%&YaV&E(SdDLp"^b-(Ik`i6m/Y.7=lMVoo0=ZOn9/SLrpJ2Jrh24Y$IC=Vj>j1?1)BPKj5.k]JKfO>R(BoKD,&C`:ZRR1k28Z.>pA
%0S??LfF%!GJ67iO+k-SdDZ1MlAC+JPNZ80EFTOf1]au=-1AQ,BbQ3M.L?(!?fKbl1J3g4\JDeY_k"(IK&oCY1rMWu$fd8RB1^QHU
%o/RZc43"i$D\Y)/+/&M2'AH>fFV3b<6>Q*LeF7%3j&/r:QfFSd0V--+"WB<q_pt0NgYq9<04tjiIjAP5g*\]DUK:<p5U4o]L\F/_
%M#n,V"-RO58Lm?$"rTg"j!r*GDB\C$Lo/Yh\sdDmms$W/)$9k<JHE`o*JC(c!"b,3E0u=EC.&sIkh7HUcr:4<K-Lm<7eT6(-<NbZ
%eJZ;+FZKpLT=RM)?(tts=GrgS9-Ks?WH8mqOO/6.kX1%t-9,\AU3c]E=U#mE,WFKr$Q$a11/6I?K3#n#6t;<u#g#9G:*aGhljD;g
%qd%f1_XTD_%Aj6k)OU*^S,n-XT,'c_#_J\"oGn-%_;$0r"3Q()\oGE?5oAA+&Y]Bp"%6S@6O5I>#'is_Dua'\liD]M4@!.:5=%Q2
%dnDe5r'T<LLsP2]CV#'.S,UtJd$iYFT\/aZ,)16b,$tL)&2cZVd-+8`&[hBQ^<mX8(l0LWlj<ZH7E-W=aL$M\*8R:6\9Xp%%;%tg
%N)hd)B$<0`#XUA3@mgO$MF5XU2Id@h*(NMT%Ls/&3"Et7"+mN_0\`EnI-]^`f`Y^bO[HniiQH:-R?<p=)*69X9a`::'kRS>'3MM"
%ciBgS;!2!d5qGD@K:q@[4//^%$X>`-L_rAgd%$-f1s$10&CAQ++SOPUSglU,>A:^^'m^:=#f4Tu$+ON/+;H;b`N]nt@1Zt#3-.C6
%Up.a#-m#40XV;L2!!pWKK>n"PB5eL(WUTAt)$*\HH3hgO0o57s914>&-O:-)N_dp-kZI(!;?nlVUh:/$QaY5E&Ki&o5++-;70cC!
%jN.P(WmS90\g.3lf#;hc/fm'XGVb]5Vhg>^Lt]D)n$g)ljYT\;".u6m^o3>d<8&G5n;%6-2BG_J-qqTY#*)X*+?j:k__.0ZBMO"&
%^R7HeP]7/QVB6cmGREd@=#'cS3uVrIV\L-k4?/5n%KV*&JIr3Ck[o;`_!M`/VG4C>Y[`DkiVGe@1L8]]FPPl1'0FQ+I3@kZH#4d`
%!D<b\*[]S^NEg5E!ZrcHCg/3='"23n'EPEh>_UPrr)PMI+aBd$O/NDtK\L)-s$2@;3-9E9<UsnaaeUi9Lcn?G!5@-bVYdK'/ne^o
%_RZRaFV0BD7hmuq202&B1&+f5"@5'66Stsen..NU,mPQu0Z>l*W,XHp&DDrWZD=TmDLj?(Fdnc,Tn?C]^$rVNX]khm!72nr@V@Z6
%L]WCdMe8Y3L]CD%8N+*b6!q5i'!9!bU.,>9"AJck6O=;=q_?2_/-,G_@r1'^PoH]]\e0H2HiRWfS@F!?aaFR+K&hru1f]-8HWZg?
%kCe>@aoML)6?#tuF(l+sF:<bK+)ac]c@lpC>RuC-emJh7=I6Tc\r"_.+JDo"-H[]QkUIr@*UZB6CB+Vh+:OuI9MP1&pn:Gf<beLq
%mgAn=(I!I*PKcFM-<)#jjLoP@-NI[>"$^=Te3IakI7cH.:+7<5nd[JKj^oj]DWo,."&i@u4AElN*ejt'kMV/%`%qPk6\`A^7Y)#!
%NBjj.U.CX75*D]fOuIp%US).f&:Kbg"Ot91d8^R0ljsSR*WSRBL]N8MjY/s`0IZim$V1@`"G9]3Uh1`b>\$MD[s3GfTOO["_AiUo
%e&lN\JXuiA@Pqu%jF.-d7C(&?j1lAdWQ9aDgS7&i*"htVi:[f%+d"B@<&iW6>dD*QQ+NK>!b#i7d+<n(K6TqBire,KTSDt5#RT^E
%m;:)ZQo?&]j$B@'KZ;RK8-TMQIAlJbU`pWo-[ruLpPC&TUbpqc!rJmt[n.#s#jnTcHcj+?;hdR0<<.`_2Mko8:B8<kD9%G$&'7$)
%S#P0WJ?D.m*i.R\'KOVsLa;T=0d*[$C(N%F%KQ;n/>>tYMlgY0GBIsDh$5*4JIFhgTMrgkO/AnrNE`Ogi<%(^O56S+JH=sA$2#Id
%63of"*.m(A'JSW\"uhkGXphm/K$b"<:I*=#.pUqH]Tn8!`[l7cE/A@oIi:O.M(b#pLs8V5LqP6Vd2&7O,tL:9jslm#nJW"9.T\qN
%O!\[l98.IZm#RBR+;4==+iKX*"TOJaq:9_&&iRuu&nmCjhuQi\EMCqaLu:=mf;#tpQEJS;&LdDc?3oQ5D9fpnB`j1-'iQ3ZQG60I
%Kt5W^.n@?5K5d=8-GKfC&T=PZ)3`G,d%GN;66A4SQk]Qs2>Gin*>0K:7At51J09TkftVB]%lmJ+U*51[,g[b61C1APjpE7]B/G,U
%!-h/WA'\kT*ug\o#94%F6/L%XS2NNd^lV<m0[NMblk*-nFP:=Hd1L`)$*DatPE'9Y(E8AkXSKrh\02>IINiU8Oq7WI"3NV3q5,L;
%K\m?!mg(>:0[-7NCBO6cA/SI9J9?G:?m7ZdBYq>IH3F;qoEU1i;[ZkR86<=0%:bc1AJ9QWo#JGh#Z3S[\D2)^[rOHS$unUe%1VpV
%9o^:!ZhPe_!u5-4#]tO1)M"JXb<PWL-BY2Np<b.<(cs,)1.g`n+*%Fea<&0SOkJ`niG]*9&Jr60')nRLka-#.KGqM_!si(J!9#gR
%h?oYP2ggUNQn$lfEO?*mJlpU7etd;:$bJbAY=5#`e;YJ4TZnkuog\CD3W_5q&<'p%@+3(/5ocLJK:ghe#D9/fDFpXLqG,uZ3Y\<W
%7ktkVPe7[*$g3[lkQ+(kKHnjp"CaL(:TXUOW_5LK0*77`7$6U%R0&h2IR7ZZ68uDLJN-#Q`gm1Fr:$Z0p7`+[+B1kZ'nIE*PA<(6
%N<#T531<>I2ODjLTKhj7E@>-%VeHHihY!bkq6Au+e.Hj\0bU$aEX$'OY4s)bbqKW\\oRVLHCZRp-+9)T#Y6K^N"+AM!oF]8NQOVD
%pd^p=L)M1"d!t8YHb.@p$"+Eo'&opE9ij*]#`JbTW:6u!Mb=(j-@MOY"P45Nr7!!i#==5Q\2JpM3Y7&/F@5AO8IP`bSd5o"L'$NO
%+-JQVE)M69RYJb%J[^ecCli$pLrOeJ'L&cEs(t.YA]YT"325>`&I]U!Wskk>gfEOWa<IJi`8^(;8j_sbC!%)<$:Ymg#Zl7E$HKr'
%6rMq7S5jZk&.9iBA`2SsI!LY_Sg0.\CrJJ*SC1-*LcY[/N#V@Q*Vr^$%ZK"oCPt<f"'IblGZ"ZE"Mm:D)e]e3,VEL2S]9bT1tD>O
%,Kh5>8MgOESj\7p=C;t8kI^$8p`V^DCXqM06pobk;g4<-^l-"_khMYeS#YIn2t9;_/h?SM+M[X"dkELIr[P/*aUot+-+_AB"%!]E
%W224VWj%f#E21TA=(ojWE$3Ns,m$YW#4\d.@WC=A&TZ8VaB&g9:S1%Y,<u[.b6&0Q":2JECqAZB%o$Joa`Fck9uoSCd(j(DJl_&^
%)k:N9ZHB)q,_6s=)T%JAH?"5?(/F'7$CK]5f\mmh)^'7*LlLBUU_InZDDH#*hsiKl8dZelrr4[r(aFb)W`A/il69+CGdnQ54=&pQ
%a!tR%Sdk*U`ML1O*m-i8i9:eQ_h1-d@m`Ki>4@%RE^;Xikh!:gN!HjrQndg)[YW,B?sj+8F<\gd"*FU!a37r\!"*GlMoVMf"=+,!
%Q]3U/"-"fPY.us=&Ge,r(H6"e7KA<<Tj2]O%0m1L*JI/E8k`q]Y8MZHW,n:-1q9K]:bPqB:,gdPRQ=/Ak>AUB!sfQ<!OX7CU/46:
%#N0f6Jicl2NXQU`e<+rG!r@I1?8jp=r0bUlTG(-%41#M4eH/!kLXDbe`7>0`*5ea@!.ak(=44T[k^j!FB(Oj-_,gpo%ur[OE!iIT
%--E><7Yp_iiCtH"0Q,Y,EP8kZ*`d*g%EC%8fVCTK:g:a<NR9t`k5b]Q8,.l#9a;0(4+q]G2*$=:$7\(a:\8N/pVHQ.Tn?GV7.E[<
%4:oK,E>OXEdgD]RM"8IdG%@8GU&iGGWf$GEo#OIh`t#'GEl3h'6Y>81So?/Yr.l*Yd&7;4Q;C,1!e;sE,Tr)d,?3oPndlTW%m<`=
%"LQS[aN(:b@Vn)u5l?X0_%Hsl?SMh%Ab-HRMeLu,JRUgS"L&Pn6U+[m!4NsBpu!YJSNnNX1;3bW^;BcNORIaMhE3_u?gaB__Z>*+
%h7*E/JF(oQ!*.%"n&G@3`b,tFa%,%R;uI)PC1$;5O8g^<',0q0^f7N\idkR\i(o0B[p=2_j3dDdRq=22bW*TA/lAoG+CR[EJ=W1r
%CKDl!%_Z#<-A#KE+YJOm!no:UD(ama0UgE4TND@<$:;`IMaCE[VH?u/^I%_+Xf/bcX=l]1N6bFUJH.GSc!#]<QlQ]sXi4hn.X#L*
%5h#llCET/fLa4%l9B$7db\Nm\CGBrH_B0#1!J=<P>Ca9;_FsW7>W;:PS"ugj%CniJ`s[CN`.U"1_\:f8C?!Zee<nNNh`2C(Lr[R>
%I1n5\d"2:Ic?K?oXO'rjE,%i%!<gc=5n'@E8ThD36o3g0\hH.C2n7@kBNddd"(HXOG[@`p#Y/lF5U_>'M01j+N,.Vgmg42Ei7j$n
%D*[4ghDKo@#Ya&^58jB2&b0F?.uSKj>Sf@QYSl7^iT_/>'%e.r"2];*Rh(=A`8Q"?-Llc_Plh(L)^5rT4q/+Fp_c.bU]p%P!k@@d
%bkReu+8CIsH9W6uE/<RGrR9]qe^?QtJGE\k8hSRd29<@;Wqj/5)AG?/3FGfI_g);/e/5.K1X"'c2<$;`_A[(lJVM0d$dE**jFUdf
%+XdDFJ-1!$+;PBAX0O-n^]CDDWg+&`Ud>L*JNH$-/*/cn#R$b(qNi="6%QT$PSaIS.^6"j\c"!Z#i^sK^5U0PnHQ@:+T,:W_g*@<
%0ZG>%#f(Ct@>#=B4EEJPLQghoIV+0Bf:h+eY]0+>LB.hfj'9A%lIlLe4'LZ9560))IYWqa^8g.R+r1oj60S@X&K(2bJZakq:hh!a
%:VCP]YqWlgp[HseoiM]u<!%LRWR2[\/a9E.9)%Pneldec<G^8Z^di;R0CA;_@^49noUg?>+#hP)SD*fs,lpq!Gd'3t>\*Ro#5g[j
%LrV2#@[GFAHjl*jMB5%P.tI<:Gb,12&Fm"0\EG'L$X>%6q93#FMJi9#H>T$`DNjJTpEXW#r6]W5-:&88o4`/,&JjJSdK]&NdQB6c
%OF=71ggOeS-B5g*AJg^*#94*5d1@=d6IKNS38MEG.bZ#lk)8lC;V8Ob+mQl_:7fh9E[-)2kRW]tW@MZjAQ&I/1,ZeCKFS8?2El=l
%W![',co&@t`Zu!g>3Hsh5r[eIRjUq"MND>_F<j9LTGWXf%>Hb#A\U=X7Zf(0='k;K'g2`H7SI[V[%$r22\-qMHZ-[Vr1E-Hc-$Le
%d!TChNORf6mgRgmnb;qK^ArhG]FUm:.Wo@kr'/*QX?Q~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 4317 21841 a Fh(Figure)545 b(2:)843 b(BTS)545
b(p)31 b(o)-31 b(w)g(er)545 b(consumption)h(mo)31 b(del.)1019
b(Lo)-31 b(w-p)31 b(o)-31 b(w)g(er)546 b(\(BTS)g(p)31
b(o)-31 b(w)g(er)545 b(sa)-31 b(vings\))546 b(mo)31 b(de)544
b(is)4317 23169 y(optional)372 b(and)d(kic)-31 b(ks)370
b(in)g(at)g(lo)-31 b(w)370 b(loads.)4317 26927 y Fl(2.)748
b(Related)498 b(W)-125 b(ork)4317 29528 y(3.)748 b(Problem)499
b(F)-125 b(orm)-42 b(ulation)4317 32129 y Fk(3.1.)664
b(Single)463 b(Base)j(T)-100 b(r)-66 b(ansc)g(eiver)463
b(Station)g(\(BTS\))6268 34067 y Fq(P)-36 b(o)g(w)g(er)623
b(consumed)g(b)-36 b(y)623 b(a)g(BTS,)h(as)f(a)h(function)e(of)i
(tra\016c)f(load,)672 b(can)623 b(b)36 b(e)623 b(w)-36
b(ell)4317 35672 y(appro)g(ximated)420 b(as)g(a)g(linear)g(curv)-36
b(e)419 b(with)h(a)g(non-zero)f(y-in)-36 b(tercept)418
b([3)q(])i(giv)-36 b(en)420 b(as)g Fj(P)45684 35871 y
Fp(1)46477 35672 y Fq(+)4317 37277 y Fj(l)29 b Fq(\()p
Fj(P)6077 37476 y Fp(2)6901 37277 y Ff(\000)297 b Fj(P)9069
37476 y Fp(1)9595 37277 y Fq(\))p Fj(=t)11221 37476 y
Fe(max)13138 37277 y Fq(.)587 b(Here)436 b Fj(P)17997
37476 y Fp(1)18959 37277 y Fq(and)g Fj(P)22329 37476
y Fp(2)23292 37277 y Fq(are)g(the)g(p)36 b(o)-36 b(w)g(er)436
b(consumption)g(at)g(no)g(load)h(and)4317 38882 y(full)467
b(load,)476 b(resp)36 b(ectiv)-36 b(ely)-108 b(,)475
b Fj(l)496 b Fq(is)467 b(the)f(n)-36 b(um)g(b)36 b(er)464
b(of)j(calls)h(presen)-36 b(tly)466 b(b)36 b(eing)466
b(handled,)474 b(and)4317 40487 y Fj(t)4787 40686 y Fe(max)7137
40487 y Fq(is)434 b(the)f(maxim)-36 b(um)434 b(n)-36
b(um)g(b)36 b(er)432 b(of)i(calls)h(that)e(can)h(b)36
b(e)433 b(handled.)6268 42092 y(Let)613 b Fj(\016)664
b Fq(b)36 b(e)613 b(the)g(tra\016c)h(threshold)e(at)i(whic)-36
b(h)614 b(the)f Fk(BTS)630 b(p)-66 b(ower)630 b(savings)723
b Fq(is)614 b(ap-)4317 43697 y(plied)391 b(\(i.e.,)400
b(when)390 b(BTS)g(deactiv)-72 b(ates)392 b(some)f(TRXs)g(mo)-36
b(ving)391 b(in)-36 b(to)390 b(lo)-36 b(w-p)36 b(o)-36
b(w)g(er)391 b(mo)36 b(de\).)4317 45302 y(Since)358 b(all)h(TRXs)g(are)
g(iden)-36 b(tical,)373 b(the)358 b(p)36 b(er)358 b(call)h(increase)g
(in)f(p)36 b(o)-36 b(w)g(er)358 b(consumption,)373 b(and)4317
46907 y(hence)381 b(the)g(slop)36 b(e)382 b(of)h(the)e(p)36
b(o)-36 b(w)g(er)382 b(consumption)e(pro\014le)i(in)f(Fig.)i(2,)392
b(remains)382 b(the)f(same)4317 48512 y(whether)436 b(or)g(not)g(some)h
(TRXs)g(are)f(deactiv)-72 b(ated.)587 b(As)436 b(also)h(indicated)f(in)
h(Fig.)g(2,)g(the)4317 50118 y(no-load)401 b(p)36 b(o)-36
b(w)g(er)401 b(consumption)e(drops)i(to)f Fj(P)26213
50317 y Fp(1)26968 50118 y Ff(\000)228 b Fj(\015)473
b Fq(in)400 b(the)g(lo)-36 b(w-p)36 b(o)-36 b(w)g(er)401
b(mo)36 b(de,)408 b(where)401 b Fj(\015)4317 51723 y
Fq(is)433 b(a)g(constan)-36 b(t)432 b(that)g(dep)36 b(ends)431
b(on)i(the)e(equipmen)-36 b(t)432 b(t)-36 b(yp)36 b(e)433
b(and)f(the)g(n)-36 b(um)g(b)36 b(er)431 b(of)i(TRXs)4317
53328 y(deactiv)-72 b(ated.)6268 54933 y(If)333 b Fj(x)f
Fq(is)h(an)f(indicator)g(v)-72 b(ariable)333 b(whic)-36
b(h)332 b(is)g(1)h(when)e Fk(BTS)372 b(p)-66 b(ower)372
b(savings)441 b Fq(is)333 b(applied,)4317 56538 y(and)531
b(0)h(otherwise,)557 b(then)531 b(the)g(BTS)g(p)36 b(o)-36
b(w)g(er)532 b(consumption)f(ma)-36 b(y)532 b(b)36 b(e)531
b(giv)-36 b(en)532 b(b)-36 b(y)532 b Fj(P)45589 56737
y Fp(1)46477 56538 y Fq(+)4317 58143 y Fj(l)29 b Fq(\()p
Fj(P)6077 58342 y Fp(2)6939 58143 y Ff(\000)336 b Fj(P)9146
58342 y Fp(1)9673 58143 y Fq(\))p Fj(=t)11299 58342 y
Fe(max)13551 58143 y Ff(\000)g Fq(\(1)g Ff(\000)g Fj(x)p
Fq(\))p Fj(\015)72 b Fq(,)508 b(also)494 b(indicated)f(in)g(Fig.)g(2)h
(b)-36 b(y)493 b(the)f(piecewise)i(linear)4317 59748
y(solid)434 b(line.)6268 61353 y(The)441 b(gran)-36 b(ularit)g(y)441
b(of)h(TRX)f(deactiv)-72 b(ation)442 b(can)f(b)36 b(e)441
b(increased)f(to)h(giv)-36 b(e)442 b(the)f(p)36 b(o)-36
b(w)g(er)4317 62958 y(consumption)508 b(mo)36 b(del)510
b(in)e(Fig.)i(3.)805 b(If)510 b(the)e(tra\016c)h(is)g(ab)36
b(o)-36 b(v)g(e)510 b(threshold)e Fj(\016)41175 63157
y Fp(2)41701 62958 y Fq(,)528 b(the)509 b(BTS)4317 64563
y(op)36 b(erates)649 b(in)g(the)f(default)h(high-p)36
b(o)-36 b(w)g(er)649 b(mo)36 b(de.)1224 b(When)649 b(the)f(tra\016c)h
(drops)f(b)36 b(elo)-36 b(w)25578 70015 y(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 15973 19289 a @beginspecial 0 @llx
-1 @lly 279 @urx 186 @ury 1787 @rwi @setspecial
%%BeginDocument: figures/powermodel2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.10.2 (http://cairographics.org)
%%CreationDate: Tue Oct 30 12:21:19 2012
%%Pages: 1
%%BoundingBox: 0 -1 279 186
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
/cairo_eps_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPSMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 1 /uni0050 put
Encoding 2 /uni006F put
Encoding 3 /uni0077 put
Encoding 4 /uni0065 put
Encoding 5 /uni0072 put
Encoding 6 /uni0020 put
Encoding 7 /uni0043 put
Encoding 8 /uni006E put
Encoding 9 /uni0073 put
Encoding 10 /uni0075 put
Encoding 11 /uni006D put
Encoding 12 /uni0070 put
Encoding 13 /uni0074 put
Encoding 14 /uni0069 put
Encoding 15 /uni0028 put
Encoding 16 /uni0057 put
Encoding 17 /uni0029 put
Encoding 18 /uni0054 put
Encoding 19 /uni0061 put
Encoding 20 /uni0066 put
Encoding 21 /uni0063 put
Encoding 22 /uni0056 put
Encoding 23 /uni006C put
Encoding 24 /uni0032 put
Encoding 25 /uni0048 put
Encoding 26 /uni0067 put
Encoding 27 /uni0068 put
Encoding 28 /uni0064 put
Encoding 29 /uni004D put
Encoding 30 /uni004C put
/CharStrings 31 dict dup begin
/.notdef 0 def
/uni0050 1 def
/uni006F 2 def
/uni0077 3 def
/uni0065 4 def
/uni0072 5 def
/uni0020 6 def
/uni0043 7 def
/uni006E 8 def
/uni0073 9 def
/uni0075 10 def
/uni006D 11 def
/uni0070 12 def
/uni0074 13 def
/uni0069 14 def
/uni0028 15 def
/uni0057 16 def
/uni0029 17 def
/uni0054 18 def
/uni0061 19 def
/uni0066 20 def
/uni0063 21 def
/uni0056 22 def
/uni006C 23 def
/uni0032 24 def
/uni0048 25 def
/uni0067 26 def
/uni0068 27 def
/uni0064 28 def
/uni004D 29 def
/uni004C 30 def
end readonly def
/sfnts [
<00010000000a008000030020636d61700112f1c500004e880000007c63767420fe30def00000
4f04000007da6670676dc3a61d01000056e000000631676c7966894cf7cd000000ac00004ddc
68656164de49adde00005d14000000366868656112ef094400005d4c00000024686d74788118
062f00005d700000007c6c6f63610004dbf000005dec000000806d61787006f306ad00005e6c
000000207072657039e6c80d00005e8c00000f450002011c0000051c050000030007004db102
01bb02be0006000702bfb2000504b802beb403000a0704b802beb5010019080605bf02be0002
000301290009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c313021
11211125211121011c0400fc2003c0fc400500fb002004c00000000200220000042b054c001f
002c0178b9002effc040933a352f2e7518741b741c7c28702e951c077918b724ba28db1bdb1c
da24061927102e2826392539273b28302e5a276927702e802e0bc600011a1c291c4b1cd719db
1b05a82801ca24d917da24d927d828eb24061c40231d28080e1f1b082122011f1b0721230f1f
1b152123001d202c2a1d283f234f2302232307152a281616150208070812001a101a301a401a
701a051a492eb8ffc0403e3f35002e01402eb02e029f2ec02ed02e032e2c010613130255010c
0f0f0255010c0d0d025501220f0e0c101002550e0c0f0f02550e1a0d0d02550e9e2d2eb80177
b3216163182b2b4ef42b2b2b3c4dfd2b2b2b3c4d105d71722bf65d4d4358b90026032de91bb9
0026032ded59003f3c3f3c10ed1112392f5ded12393912392b2b2b31304379401c2429171c18
2528262917263301241c26330127192a3301251b2333002b2b012b2b2b2b8181004954794010
1e22211f233b04221e203b0021201f0001103c103c2b002b8101715d0071720172005d015d2b
0111141716333315213533323736351134272623233521321616151406232226271616333236
3534262623220701a41c264d34fdbb335625141b274d3301f1b6d290dbc831724135521d6897
4884543350027bfe75801f2c2525381f74036c801f2c254bb27aa6d00e470a0aa18058974b13
000000020045ffe403b903af000f001d020cb10202435458401c140c06101002550c0c0f0f02
550c0c0d0d02550c100b0b02550c1a04b8fff4b41010025504b8fff440130b0b0255040c0f0f
0255041725080b10250007003fed3fed012f2b2b2bcd2f2b2b2b2bcd31301bb1060243545840
09102500071725080b1ab8fff4401b0d0d06551a04140c0d0d0655140c100f0f06550c100d0d
06550c04b8fff0400b0d0d065504041e0c0c1f1e1112392f11392f2b102b2bcd2b10cd2b003f
ed3fed31301b404512801501a716b616c501c909c41dd9090612e70a0148094516571585018c
09890fd91b071f403235041f430d5d369f1f01c615c91a02401f014908102500071725080b12
04b8ffc0402b120b3f4f0401400401d0040140045004600470049004b0040604ec0c40120b3f
400c9f0c020c431e434b182b4e10f4722b4ded5d5d71722b4bb028534bb050515ab10c1e49b1
1f0449525a58bd000cffc00004ffc0001fffc0383838594358bc001a0332000400140332e910
e91bbc001a0332000400140332ed10ed59003fed3fed313043794036011d12250e2602251c26
0a250626110f1420001d011a2001160914200018071a2001130d1020011b03102001150b1720
0019051720002b2b2b2b012b2b2b2b2b2b2b2b2b2b8101720171722b2b71015d014358401175
0275067a0a7a0e7a1278167518751c085d595d005d435c5840091c1011391b10113915b8fff0
b10b39002b2b2b59595901321716151406062322272635343636172206061514123332363534
27260200d07e6b76cf7fcf7a677dcc53356b429f82617e694703af9e87af7bfc80a58bad7ef9
77413f9e7cc8fedea0c3f48c60000001000dffe405b40394002c03cdb10202435458b626211e
110e022cb803e2400e00092618080428251f060f060006003f3f3f2f2f173910fdd0d0d0d0c0
012f31301bb10602435458b90026ffe840440d0d0655181c0d0d0655081c0d0d065518101010
065508101010065508182609040028211e110e02792c012c00752501250b752801280b1f060f
0600062c2c2d21212e2d1112392f11392f003f3f3f3f5d3f5d10dd5dd0d0d0d0c01112173931
302b2b2b2b2b1bb1122eb8ffc0401c3f351627201020112527202e5f2e6909702ee925e928f8
25f8280c2eb8ffc0b213352eb8ffc040c81b1f34212e2e2964361d19191f1b23102e040a261d
262c2639265517a717a718a726080b25372437274f004c014d074908472446274d284d298807
801080118d2588288829802e9a109417a718a725bb10b925b928bf2ec825c828d925d928d02e
1f000504070615041709250727092806293517431043115005520756185229890b8f10881889
19892388258826802e17870986178726030d095901771077110409090826262725250a010702
1e011017111e102023211e2000292c1e000f0a0e1e0f1f191e1e1fb8ff86b308282720b8ff7d
4040182524200807080907242928142929282627262527300809140808091815181915240a25
140a0a25232424301819141818192926231918170a0908070a002821bb01ec0020001e01ecb3
1f010f11bb01ec0010000e01ec400a0f0f10101f1f20200002bb01ec0001002c01ecb3010006
18bb016a0025000801a6400f28402725252424280b20fc0f650a01b801b1b4c000652923b801
084015401b2f501901a01901bd19cf19df19031992242f18b8011bb7200f250110250125b8ff
c0b30b0c3425bb0110002600150167400c400a2f5f2601402680260226b801ecb4097d272f08
ba011b0008011b400a200028018028f0280228b8ffc0b50b0c3428a007b80167401b50290180
29010029102920294029b029c029d0290729602dab89182b10f65d7172edf42b5d71191aedfd
e4f4ed5d7118f41aed1910f42b5d711afde4f45d717218e41aed10f41aed10f4ed003f3c103c
103c1a10ed10ed3f3ced10ed103c103c103c103c10ed10ed103c10ed10ed1112173987052e2b
0e7d10c4870e2e182b087d10c487052e182b087d10c4870e2e182b087d10c42b2b180010ed01
10c00010ed0110c00010ed0110c00010ed0110c00010ed0110c00010ed0110c00710083c083c
3130015d5d71015d005d01722b2b2b015d2b435c58b52610140c3f24b8fff0b3140c3f13b8ff
e0b21d3917b8ffe0b21d3917b8ffe0b2143917b8fff0b2173925b8fff0b2153917b8fff0b115
39012b2b2b2b2b2b2b2b59595913211506061514171313272627262735211506070615141713
13363534262735211506070123030123012626270d0180352111c4c5341827163c01b4481e14
08d0c114273901215729fece29e5fef525feda1d383c039425041e1c1f2cfdf101ad873c170e
032525031710231415fdf201fb3620131e0225250d69fceb0249fdb7030249330d0000000002
004cffe4035303b00014001d037db10202435458402808161415000c0f100255000e0c0f1002
550e0c0d0d02550e15304000012000300002000010000200b8ffc0b41314025500b8ffc04011
1111025500000b1b251107000710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ff
d6b41314025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed12392f2b2b5d5d5d
ed012f2b2bdd2bc02fcdc031301bb10602435458401d158000a000b000032000300040000300
0010000200000b1b2511070807b8ffc040241010065510072007b00703000760078007a00704
079204a204b2040304310b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655000c
0f0f0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd2b2bc01112392f2bcdd0
cd003fed5dc45d5d2b323fed12392f5d5d5dcd31301b4019125f185d1960006014d603051920
1c3917201c3916401c391fb8ffc0400a434a34081f430d5d361fb8ffc0b32828341fb8ffc040
532a2e341b06190958135e165f175a185b1a07010309060709080c0515490689028c06870c8a
10851da302ab18b513d402d90fda10f402f303131260076008700780078909c107c80ff00708
0401070d84020309baffe00006ffe0404a3609460247094f1f54025409620272028913891999
13a409a40ab808b509b00ac702e702e00cf40a1408d007010007d00702710701000710072007
9007a007b00706077d041400301615b8ffc040131239125f157f159f15df150415151bd30401
04b8ffd0b2143904b8ffe8b2133904b8ffd84048123904310b0b5c1b011b25110707cc081628
1b390f16016f167f168f160316f41414800801300890080230088f08df080310084008600870
08b008e0080608aa0e15040089000200b8032c4012300e400e500e03000e100e200e03f00e01
0eb8ffc04009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d715d713c10ed5d71
2b10ed003fed723fed2b2b2b7211392f5d4358b26f15015d592b3cfd3c10f45d5d7172393130
015d00383800715d014358b40600010202715971722b2b2b2b2b2b2b0072435c58b90007ffc0
400b23390c402d390d402d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ffc0b2
1b3908b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2093908b8ffc0400e0939
15101939192011390d201139002b2b012b002b2b2b2b2b2b2b2b2b2b2b2b5959591306171633
32363717060623220235341233321615252126272626232206da016464875a852d1f15ca98a5
ebf1b69ac6fd8701a805101963365383023bcc747463781489e10101d9eb0107cbaa3a582438
40810001000d000002b703af002801b5b1020243545840282a4013130255061f171127040f0f
025527181f0111080d0d025511040f0f025511060c0c0255111fb8fff4b40f0f02551fb8fff6
b40d0d02551fb8ffee4011101002551f14121202551f0e131302551fb8fffc400b0f0f02551f
011003181619bb03e20018002603e2400e4f276f277f2703272807180c0307003fcd2f3fdd5d
ed10fdc011123939012f2b2b2b2b2b2bdd2b2b2bc010c4c62b10c410c431302b1bb106024354
58402301100318262728076f097f0902090c030718061f01110c0d0d0655110410100655111f
b8fffab40d0d06551fb8ffeab40f0f06551fb8ffeab7101006551f1f2a291112392f2b2b2bdd
2b2bc010c4002f3fcdcd5d3fddcd1112393931301b406f2002200f3202320f4002400f820407
402a015f2a011f291e18272211291e17862327272041261e2744000a0b2a1114201001041880
09010939100c010c590303000718170a5f0601400601062e1f2a012a0011241f1f1f20018020
90200200201020b020c020d02005206029a66e182b4e10f45d71723c4d10fd3c1072e4717200
3f3c3f3c10ed72ed5d11173901111239390010f5edfc01f52b2b3130017271005d5959011536
3332161514062322262322070607111417161633152135323736373635113426262322072725
014c73793748342423571512152d30130d423efe2b4622190a050d231a1f270a011503afcece
432c27364514295efe494c271b24242416102311500163a03d1c0f2470000001004affe1050f
056b002401024042091e2f012f022f032f1f960f991ea30fa312b60fb7120b081e011617017d
037b1578168d038a169d03961aac03bb03090c030e04021d48035903052f081011241b00b801
05b5021b0101ba00b8034bb6209a05281c0301b802dfb5112bb0100110b80341b58f0d9f0d02
0db8032f402f140902ac000101013210acaf11011f113f1102111a40260126093c2018010f18
1f1802180c0d0d02551849256463182b4e10f42b5d724ded4e105df672714dedf471ed003ffd
71f45df4e63fedecf4ed0110edf4ed10c9313043794020151b060c07251a260b261625061b09
2d000c15092d000819052d010a170d2d00002b2b012b2b2b2b2b2b818101715d0072715d0113
232626232206021514121633323637170604232027263534122433321716333237363704d11f
1f3ee6a187da7d76ed9884ca791f66fef0bbfeafb98ab6013fbd938f2a121b141a0b056bfe33
cfb689fed4dfb8fef29071a814b5a8fabafccb0154bb4816131b300000000001000c000003f7
03af003302d3b102024354584017354012120255300c10100255310c101002550e080f1623b8
ffea402e10100255231d242908080d0d025508040f0f025508060c0c02550816241212025516
1a0d0d0255160c1313025516b8fff4b40f0f025516b8ffdeb41010025516b8ffee40260c0c02
5516001d040f0f02551d080d0d02551d060c0c02551d291812120255290e1313025529b8ffee
b41010025529b8fff0b40f0f025529b8fff6b40d0d025529b8fffa400a0c0c025529001c0224
30b803e2400931400910025531320dbe03e2001003e2002203e2002503e24009240f2432071a
2c0207003fed3f2f2f10ededecec10dd2bed11123939012f2b2b2b2b2b2bdd2b2b2bc02f2b2b
2b2b2b2bcd2b2b2b10c410c42b10c410c431302b2b2b1bb10602435458405e2f161010065530
0c10100655311610100655001c0224303132071a2c02070f24080c0d0d065508021010065508
060f0f06550816020d0d065516021010065516080f0f065516163534001d0c0d0d06551d080f
0f06551d02101006551d29b8fff0b40d0d065529b8fff0b41010065529b8fff2b70f0f065529
2935341112392f2b2b2bdd2b2b2bc01112392f2b2b2bcd2b2b2b002f2f3fed3fddcd11123939
3130012b2b2b1b403a35402a350835600d5d3630355035603570359035052d04014035603570
3580359035b03506b035d03502b0350160358035c035031d0816291e0fb8030f40112229291e
244a2208291e0e4a231d291e23b8030e402e2331272a41301e31441c00233233071a2c020724
23230f0f0e0a17162407900801b008010f0870089f08cf080408b802bd401b29331d242a1f29
5029602970290480299029b02903002910290229b8ffc04009141634296034a67f182b10f62b
5d71723cfd3c10fd5d71723cfd3c003f3c103c103c3fed3f3c113939f5edfc01f52b2b2b2b31
30437940121819030604251903171c01050618051a1c012b01103c2b2b8181015d71015d7100
5d01722b2b595901363332161716151114171616331521353332363736351134262322071114
171616331521353332363511342626232207272533014ba1924b6c20160e0b3142fe3b134033
0a04414d77760b0e314bfe3b1446310f1f1a1c270f01142b02edc24b563c7cfe79571f191c24
2427260f4f01777d7182fe1d5d161d1b242447640154a5481a0f247000010064ffe402d503af
00310434b10202435458402733401313025533400b0b02550201181010025501180f0f025501
0f1b1a08270c0b0b025527210fb8ffe0b4101002550fb8fff440320f0f02550f310708270f21
04122b05017905016c050105252f0101012a0719771e01631e011e25201a01601a701a021a12
0b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f012f2b2bcd2f2bcdd4cd10d42b2bcd3130
2b2b1bb106024354584032210f2708042a161e122e05022a3107601a701a021a19124b05016b
057b050205252a07441e01641e741e021e25120b01210fb8fff2401a0d0d06550f0f33321a08
0e0d0d06550827120d0d0655272733321112392f2bcd2bc41112392f2bcdc4003fed5d5d3fed
5d5d10c4c45d3f10c4123911123912173931301b4029092c192c0212122e400b392c280b3918
14590c5a269b109424050a070a280a29603370338033060f33b8012040870d5d36cb0dcb0ec4
24c425d723d624d92ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f038015801a80
1b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c031614121c161d19291b2c99
09990a9b20932393240b122b0d282c4a2c4f335f337829782c860ea823af33e803e61c0c2908
311e00bd021e011f012f010201b8012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a
201a021ab8012bb219bd16b8011a4022121224230d0b040f2724230d0b04051e01c7002e2f2a
31000005252a071a7e191918b803464014162f1e25120b02cc12010112cf21df21ef210321b8
0314400b700f01600f700f900f030fb801364019271a192e1f0801082c9f2701602770278027
03202730270227ba012000320120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2
ff21015d59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c10e410ed11121739
01111217394358400a242323240d0b140d0d0b870e2e2b0e7d10c459180010ecf4ed5d720110
edf4ed0010ecf4ed5d0110edf4edb10602435458b42e20090d34002b5931304379401c28291f
20101106071f11211c010629081c0020101e1c000728051c01002b2b012b2b81818181015d43
584009fb07f610f611fb28045d5901720071005d435840199f019f029f039f0b9a0d9015901a
901b901c992297239f2d0c5d595d2b017100722b2b4358400b2f232f248b2c9b249b2c055d59
435c584011282019390928193901400a3902400a391bb8ffc0b20a391ab8ffc040190a392e40
0a392c400a392c4009390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b2193924b8ffe8
b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b212391ab8ffc0400f12390140
1239024012392c20123924b8fff0400f0f392c180f3903100d392e400d3923b8fff040120d39
0c100d392c200d392c1811392c181139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b012b2b59005d595901112326262322061514171617171615140623222726
2322072311331616333236353426242726353436333217163332363702902126775c4656201f
5f92cbbd75546c2115170d21211c9e62455761fede2d2d9b7b364d331110120c03affec8936a
4a2d3828292e4763a27d991e0a1a01478c8e5139455e903a39577198170f0e1800010002ffe4
03fd039400250230b1020243545840162740121202550801080d0d0255010b20281212025520
b8fffc400b0f0f0255201e0d0d025520b8ffe4401310100255201a080d0d02551a121c121202
5512b8fff8b40f0f025512b8fffab40d0d025512b8fff4b5101002551224ba03e2001703e240
0e1825060b200e18061d2c0e0b0708b8ffc0b509100255080a002fdd2bcd3fed3f1239393f10
edec012f2b2b2b2bcd2b2f2b2b2b2bc0dd2bc431302b1bb10602435458405707400860087008
03080a0b200b180e24251718250618061d2c0e0b0b010810100655010a0f0f0655010c0d0d06
5501201a040f0f06551a04101006551a0a0d0d06551a1208082620080f0f065520060d0d0655
20202612b8fff2b41010065512b8fff6b40f0f065512b8fff6b70d0d0655121227261112392f
2b2b2b11392f2b2b11392f10cd2b2b2b10cd2b2b2bc0003fed3f3f10cd10cd111239393fdd5d
cd31301b40350127600d5d36202760277027b02704340b371f3a20481f4820051a08134f1e18
2723214f1e25272308270141071e0844200b251d08b8014540130a002525191918061d2c0e0e
0a0b0a0b0b2120b80167400e00b001010f0170019f01cf010401b802bd402512191a24121250
1390130280139013b01303001310132013b013c013d01306136026c27f182b4e10f45d71723c
4d10fd3c10fd5d713cfd3c3c103c003f3c10ed3f3c103c103c10ed11123939f5edfc01f52b2b
3130437940101b1c0f111c0f1a1c0010111b101d1c002b01103c2b8181005d015d2b59590111
1416163332371705233506062322262635113426260735211114163332363711342627350363
0f21161f270efeee2d767c454d712c1c37480141593f2b6d4b395a0394fdd59f471c112371c2
8042598c80019941321b0125fd9b8050364c02074e370225000100110000063003af005703d3
b10202435458401759401212025559400d0d02551711080d0d025511554c30b8fff4b40f0f02
5530b8ffeab41010025530b8fff4400f13130255302b080d0d02552b313746b8fff4b40f0f02
5546b8ffeab41010025546b8fff440211313025546414741080d0d025541040f0f025541060c
0c0255414c14121202554cb8fff4b40f0f02554cb8fff6b40d0d02554cb8ffeab4101002554c
b8fffa40190c0c02554c0a131302554c2b040f0f02552b060c0c02552b37b8fff0400b0f0f02
5537100d0d025537b8ffd4400b10100255371c1212025537b8ffea401f0c0c025537020d0d02
553702131302553711040f0f025511060c0c02551120b8ffe8400b0f0f025520300d0d025520
b8ffc2400b10100255202a1212025520b8ffda400b0c0c025520020d0d025520b8fffc400b13
1302552016192f324548b803e24020475455400c0c02552f55014f556f557f55035556064731
18252c0b073c2c0507003fed3fed2f2f2f3fdd5d5d2bcd10fdc0c0c0c0c0012f2b2b2b2b2b2b
2bcd2b2b2f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2bcd2b2b2bc410c42b2b2b10c4102bc42b
2b2b10c6102bc431302b2b1bb10602435458403c252c0b3c2c050b0705075455560718314711
021010065511200410100655202b060f0f06552b02101006552b3741060f0f06554102101006
55414c20b8ffeab70d0d065520205837b8fff8b41010065537b8fff8b40f0f065537b8fff2b7
0d0d06553737584cb8ffeeb40f0f06554cb8fff0b4101006554cb8fff8b70d0d06554c4c5958
1112392f2b2b2b11392f2b2b2b11392f2b10cd2b2b10cd2b2b102bcd2b002f2f2f3fddcd3f3f
10ed10ed313001b00d4b5458bf0046ffe80045ffe8002fffe80030ffe8b51a18191818183838
3838383838591b401c3407d059ef16038059011159600d5d362b0d01905901200820291e18b8
02fcb42237291e31b802fc400b224c291e474a2211291e17b8030eb4232b291e30b8030db423
41291e46b8030d403e2355274d41541e55440829374d4039292808000725475657073c2c0525
2c0c0a0b07060405074746313018170a5917171a101124213020017020b0200220b80135400f
37292e2b24383037017037b0370237b8013540164d5741244c4c1f4d504d02804d904d02004d
104d024db8ffc0b61416344d605859b8025ab321a67f18b80164852b2b4ef42b5d71723c4d10
fd3c10f471723cfde410f471723cfd3c4e456544e6003f3c3c3c3c3c3f3c3c3f3c3c4ded10ed
3f3c111217390111123900f5edfc01f52b2b2b2b2b2b31304379401422240c0f0d252326240c
211c010e0f220e251c012b01103c2b2b2b81810172005d2b01715d5959013637363633321617
3636333216171615111417161633152135333237363736351134272623220607071711141616
3315213532363736351134272623220706071114161633152135323636351134272626232207
272533015064122d6833567c15678e4b497121160d0a363dfe3c133b21170a041b2756356b4c
0202153a46fe314c390b05212c4f3635532d19314bfe3b3f321a09071e1a1c270f01142b02ec
640f262a645f784b4b553a7cfe765620161f24241710231150018a702e4035480b2bfe4b5e2e
1f242424241152018a7031401d2c37fe155a361b24241b3b55015e972c21190f247000000002
fff9fe4a03ba03af002700390222b1020243545840293b4013130255320a2a131302550a060f
0f02550a1813190020032913080d0d02551320161313025520b8fffab40d0d025520b8fffcb4
0f0f025520b8fff4400d101002552003282b12040e061aba03e2001703e2400b1819182e250e
3659060727b803e24009004009100255000107003fdd2bed3fed2fed2f2f10eded1112173901
2f2b2b2b2bdd2bc0c010c6c410c42f2b2bcd31302b1bb10602435458b90032fffcb50d0d0655
320ab8fff040180d0d06550a0a3b3a0329130c0d0d06551302101006551320b8fff6b40d0d06
5520b8ffee401b1010065520203b3a0328060e270001190e2e250e0b365906070107003f3fed
3fed3f10ddcd11123939011112392f2b2bdd2b2bd0c01112392f2bcd2b31301b407e0a3b430d
5d36391049105b10891104862c013b2c3f3b4b2c5b2c6a116a2c73087911792c8408a507e908
f9090d303b583359346c3404403b012f08032829121320291e19862213291e1827230027214f
271e004402122b2803042e1036013659060702072e250e0b19180e32311f0a900a02600a800a
af0a030aeb200213b80167401b2020502170210280210100211021b021c021d0210521603ac2
4b182b10f65d71723c10fd3c10fd5d72ed003f3c3fed3f3fed7211173910f5edfc01f52b2b03
0e103c3c3c3c3130437940202f35070d082534260c26302535073220012f0d32200133093620
01310b2e2000002b2b012b2b2b2b2b2b81810171725d00715d2b595903253315363633321716
1514070623222726271114161633152135331637363635113426262322070511141716163332
3736353427262322070602011a26478f4f8a5c718870aa4a36283217394bfe20193727131510
231e18250134090e6d53643e515c4058302f24033972d679616c84d4ed9b7f150f2dfee95e33
1e252501160b316403625930180e7ffeaa6f233a584e66b9d2714e18120000010014fff1023c
04c1001b01fdb1020243545840251d40121302551d40101002550b0c18121202550c15130105
131812120255130e1313025513b8fff8b40f0f025513b8fff4b40d0d025513b8fff0400c1010
0255130b082c0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b2bddc010c62f
2bcd31302b2b1bb106024354584019170c10100655160c10100655150c10100655160c101006
551bb8ffe8b4101006551ab8ffe8b41010065519b8ffe8401410100655700b010b0f1b011569
14014914011404b8011b401c0106082c0f0b1b0105021010065505080f0f0655050c0d0d0655
0513b8ffeeb41010065513b8fff0b40f0f065513b8fffab70d0d065513131d1c1112392f2b2b
2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d3130012b2b2b2b2b002b2b1bb9000dffe8
40410c395f015f02023f1d99119919bf15bf16b819e819079f1d01891a014f0c4f0d5f0c5f0d
f5180506181518271803161518191a030118191a03141ba00103153004b8011b401c01033002
0201060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec402c200c010c2e2f1db01d
021d000101040405241450130180130100131013b013c013d013e0130613601cab89182b10f6
5d71723cfd3c103c103c105df45ded10ed10f45d3c003ffde43f3c10ed10edfd3c10e4011117
39001117391239313000715d0171725d00722b59590111331523111416333236373306062322
2626351123353636373637014ad6d63328213e11272380442e582a9137732d172904c1fed346
fdae593e29286263335f6302682116694826650000000002003c00000207058e000b00220249
b10202435458b90024ffc0401d0d0d0255120d080d0d02550d21181010025521180f0f025521
13180309b8ffeeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8ffceb6101002
55090d18b8fff4b41313025518b8ffe2b40d0d025518b8ffe0b40f0f025518b8ffd6b5101002
551820b803e240174f216f217f210321226f00010060060106400f0f025506b8ffc0b7131302
5506220613002f3fd62b2b5dcd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102b
c43130012b1bb10602435458400d20121010065521121010065506b8ffc0b44b4b065506b8ff
c0b44141065506b8ffc04019373706554006010006a0060260060106000020212207130309b8
fff6401c10100655090924230d02101006550d020f0f06550d0c0d0d06550d18b8fff0b41010
065518b8fff6b40f0f065518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b111239
2f2bcd002f3fddcd3fcd5d71722b2b2b3130012b2b1b4019902401602470249024a024f02405
2024502402402450240224b8ffc0b332323424b8ffc0b3383a3424b8ffc0b32d303424b8ffc0
b323253424b8ffc0402e191a3418291e134a220d291e124a2321271941201e21440c190c1390
060106390000220c0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b0c0c0d19
0d2418402b3918b8ffc0401a363a34901801501801601870189018a018f0180518b223b2a318
2b10f65d71722b2bed3c103c10f42b2bed72003f3c3f3c3fed7211123910f5edfc01f52b2b31
30012b2b2b2b2b015d715d017259590132161514062322263534361311141616331521353236
36351134272626232207272501292a3b3b2a2a3c3b7e193141fe43432e1b09071e1a1c280e01
14058e3b2a2a3c3c2a2a3bfe21fd2056391c24241a3c550161952c20190f2470000000010054
fe4a027c058e0013003a40239611a71102860c8911020a980911009801130100000a09a80e22
500601068014545e182b10f65dedfd3c3c103c003fed3fed3130005d015d0115262726023510
0037150606021514171e02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad40136
01ff6e2a44ecfe96c5d6af8aa79a0001001bffe1077d054c0039031eb10202435458b6090138
29261411b803e2400f12390227021c09301b040b12020b08002f2f3f1217393f3f10fdd0d0d0
d0c0012f31301b401909060d070c080a09070a0a30063907120e1813390c1813391bb8ffc0b3
0809341bb8ff80b30809341cb8ff8040e80809343609352f4a0959045809a7090626062b082c
0b280c2813281a291b2a2827313606391a3430470644074b0b481b540658075808590a580c58
1a58305431690664076c0b681a681b6b33760476067607760a780b7b0c7b1a781b7d1c782075
2f85048c088a1c882f883089319207990b93139318991a981b9428952f9430a808aa09aa0baa
1aa81ba91caa1da72fb307b308b70ab81ab430c730f908f90bfc1df9204a682f653068318909
04381b6c1e6f1f6e2d04650765086809034b094c1f48284b2f04591b572f513003500750085a
0b030407000a030b0b1c162f2a1c291f3107390b09b10602435458401d00123b3a1b30091c04
0b110138292614111b1208070b010b0839271202003f3c3c3f5d3c10fdc5c5c5c5c511121739
01111239391b402c091c1c0809090a1c1c1b1d1e1e080006011b00131a141b13282f291b2812
0c111b12271e261b273931381b39b8ff70b31b0b0a20b8ff6f4014300807200c0b0b221b1a14
1b1b1a1c1c1e090a0ab802c940151b1c141b1b1c2f1d080822302f1430302f31060707b802c9
401c303114303031131227282839391200020b0a0a080807093b9e06a531b8ff80b2403531b8
ffc0b23a3531b8ffc040262d3034303180319031034f315f316031703180319031e031f03108
31e808e709520b1bb51a0bba0220001a01fa400b400c500cd00c030ca73a3bb8026ab3216b8a
182b2bf65dede41910e41810fdf4f45d712b2b2bfde6003f3c103c103c3f3c3c103c103c103c
87052e2b870e7dc487052e182b870e7dc487052e182b87087dc487052e182b0e7d10c42b2b18
0010ed0110c00010ed0110c00010ed0110c00010ed0110c00010ed0110c00010ed0110c00710
0e3c083c083c07103c593130015d5d5d5d5d5d5d5d005d002b2b012b012b2b435c5840142828
160d3f1e28160d3f2030160d3f1f18120b3f002b2b012b2b59015d5901152206070607012301
0123012627262623352115232206151417011327272627262726272623352115232206151417
01013635342627262335077d35421e142bfe8628fecbfecd24fe6d2d0c14453b01f61835382c
010be12820151a0d131919132902102438342d010401022c1d16263d054c2526342384fbbb03
63fc9d04667e17262525253022237efd070287725b3226130d12080625253029337ffd1f02eb
7c301728080e250000000001002efe4a0256058e00130039402429042a08480503009801110a
980913000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c103c003fed3f
ed3130015d13351617161215100007353636123534272e022e98658f9cfecff77b9f4d21194b
7c05642a4b6692fe77d5fecafe016e2545eb016bc5d5b08aa69a00000001003e000004b0054c
001f00f1403a5a015a025a1d5a1e6b016b026b1d6b1e082f213f214f219805971ba805a61b07
02011d1e161f1b102122091f1b0f2123071823001f02100f0821b802c0401309012b0040170e
3f120f001f005000af000400b80228401a08090613130255090c0f0f0255090c0d0d02550922
17161f2b1eb8ffc0400e170e3f12001e101e5f1ea01e041eba02280016ffec400b1010025516
1a0d0d025516b802c0b320645d182b10f62b2bf45d4358b9001effc0b20b351eb8ffc0b20b0f
342b2b592be4103cfd2b2b2b3cf45d4358400900400b3500400b0f342b2b592be410e6003f3c
3f3cfd3c2b2b0110c910c93130015d005d011323262726262323111417163333152135333237
363511232207060607231304a10f260b131f6754bf1b264f2ffdc130562416a35f28344a0726
10054cfec254243a37fbf47d1f2a2525342072040c0e136c5c013e00000000020049ffed0389
03af0032003d0349b1020243545840203f400d0d02553f4013130255151b072e25080b0b0255
250c0d0d025525000c33b8fff0400b1212025533161313025533b8ffdeb41010025533b8fff4
40150f0f0255330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e0429
2c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e091202550c0c047f180118
401112025518401d1d02551810251e073c2c04002fed3fedc42b2b5d12392f2b2b2b2bcd2ffd
11123939d42bcd012f2bcd2f2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a3302
1253360112201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a103f803f04
091c4c054c06452045224c3a403f891d080a0e0720002249014b0a490b49354b37433a493d57
0b670b8509840a840b0f54168316021f3f5f3f0260083300343c2e292d34bb011b000c000cff
c0b609390c280b390cb8ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c
3c18b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c403c023c2c04
702d802d022d35292c30b803464011040b2ec02d012d602500330d0c0c343433b8fffcb41010
065533bb016700240025ffc0401a0e3900251f2580259025044025f025028025012510101006
5525bb024300070015ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d71722b3cfd2b3c10
3c103c103c10f65d3c003ff4fde45d10ed713fed72fd5d712b11395d71722b2b2b2fb1060243
5458b2030c01005d59ed11123911123939313043794047353b1c23051337383638020609080a
080206212220220206350b392000111d131c0012130f1f0d1c0122233b05391c003808342001
35340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b103c2b103c2b2b2a2a2a81
8181017201710071017172005d4358b23f12015d59015d2b0072435c58b431400e392eb8ffe0
b210392eb8ffe0b60e3937200e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391c
b8fff0401a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637353426232207061517140623
2226353436333217161716151114161633323736371506232226271106070606151416333202
478d24363d5f7b1e29cbec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c706631
3a01972c4f4456384c846d1119826a433144785624896622222c3a2e32342d5690291f422b85
fec9833b14070d3c38964493015d3c192c6039485f0000000001004f0000037a058c002b0208
b1020243545840252d40101002552d400f0f02552d400d0d02551b2b01100e0601080e290108
0d0d025501120eb8ffea4012121202550e120d0d02550e0c0f0f02550e06ba03e2000903e240
0a0824251e1700000f290fb8011bb2120608002f3fedc010c03fcded10eded012f2b2b2bc0dd
2bc010c410c610c610c6c431302b2b2b1bb10602435458b9000f011bb2120600b8011b401d29
06241e17000829010c0d0d065501060f0f065501021010065501120eb8ffd8400b0d0d06550e
060f0f06550eb8ffdab7101006550e0e2d2c1112392f2b2b2bc0dd2b2b2bc0002f3fcdcd3fed
3fed31301b403e8b2099159926034403440c48198503850c059a04012f2d7f21900690079f08
9f099e109e11b02d0910061007025f2a5f2b021c080eb41e08922201b41e07b80308401f231e
9f1ebf1e021e11242517012b50100110302a2912110608070a101b011bb80152b38f2d012db8
02f6b2012a2bb80110400d282901120f1110920f0f01240eb8ffc0b36060340eb8ffc0b33a3a
340eb8ffc0b33f3f340eb8ffc0b32431340eb8ffc040161c2134900e01000e100e5f0e700ec0
0ed00e060e192cba0306030700182b4e10f45d722b2b2b2b2b4ded3c10f43c103c103c3cf43c
10e65de472003f3c3f3c3c3cfd723c3ffd11395d2f2b2b313043794012252714162625152625
16281c002714241c012b012b2b2b81810172715d0072715d5959011114171633331521353332
363635112335333534363633321716151406232226262726232206061515331501a61c253e53
fddd29284219b2b258b57169583a341e17334a1f1f262e401cec034cfda680222c2424284462
025a483c89be75442d381e35216d13133167d642480000010046ffe4034a03af002101f5b208
0401b102024354584020021a060c10100255060c0f0f0255060c0d0d02550616250f09076021
70210221b8ffc0b513130255211db8ffd4b4131402551db8ffcab6121202551d3103002fed2b
2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040732a2d340023430d5d36170d5705
021c135404530553065407581b581c076705760580008021b41bc520d020e000e50509370147
015618551c5f236018601c7618721c8a128e1390119018a601a402af23b301c101c707c719e9
08e41cea20f4011806024a1257128b1f8b208023f02307112001bcffe00020ffe0001fffe0b2
001d00b80346403010210160218021020021102120215021602170219021a021b021c021d021
e021f0210d21661ddf0f010fc7162509071db8ffd8b214391db8ffd8403812391d31030b21cc
1f0c014f0c8f0c020c2f100030004000600070009000b000c000e00009300040000200aa731a
831a02501a019f1a011ab8010c4012f00601000610062006300640060506432243b902910018
2b4e10f472714ded5d7271fd715de47172ed003fed2b2b3feded7110f45d7172e412b1060243
5458400a531d631d731d03931d01005d7159393130383838013801715d005d017200722b2b43
5c58b4001018391bb8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b2b2b2b01
2b59590171010606232202353400333216151406232227262627262322070615141633323736
37034a25d8839ce80101b487ae312c3b1e110b23233e643d51a189624e3734015cb5c30106df
d8010e8f4d262f2615761f1e4a62a1a4fb432e79000000010012ffe105ae054c001f0212b40a
0f061f02b10202435458b416011e100db803e2b70e1f0216070e0207002f3f12393f10fdd0d0
c0012f31301b400c1210210116080b39a9160121b8ffc0b2183521b8ffc0b333353421b8ffc0
b32c2f3421b8ffc04083202334f312fb1ff02103ba17b918bb1ab021f90705a919ac1abc05b6
06b90705aa05a706a907aa15a716059b07900f90129a16902105691564177404790a8021055a
165717502165066907055b0759085b0a5e0e5915054021500054035705530605202134043815
4600490e0525062907280828152816050021202130216021d02105b10602435458401c000e21
200a161a162a160316070d011e100d1b0e06070107081f0e02003f3c3f5d10fdc5c5c5111239
5d01111239391b40140005011b000f15101b0f0e080d1b0e1f171e1b1fb8ff87401116070620
08070722161514161615050606b802c940351617141616171f0f0f0e0e0002070609fb170117
e7301640169016f0160416e8301540155015b015f0150520156015701580150415b802ebb620
2196216b8a182b2bf45d5d19f45de45d00183f3c3f3c103c103c87052e2b0e7d10c487052e18
2b0e7d10c42b180010ed0110c00010ed0110c00010ed0110c00010ed0110c059313001715d5d
5d5d5d5d5d5d5d5d5d2b2b2b2b005d2b0172435c5840090a1812390f40123904b8ffe8b61039
0808133907b8ffd8b613390a28133904b8ffd8b10f39012b2b2b2b2b2b2b5959015d01150607
0607012301262726262735211506061514170101363534262726273505ae48253529fe2725fe
04271019493e022a5e382e015901402f3a45050c054c250d213165fb7e04915a141f23052525
092e24326afce50311742d1d350b0102250000000001003d0000020f058e00150191b1020243
5458b90017fff6401d0d0d0255140c06010701080d0d025501040f0f025501060c0c0255010c
b8fff2b4131302550cb8ffeab40c0c02550cb8ffe2b40d0d02550cb8ffd6b4101002550cb8ff
deb50f0f02550c05bd03e2000803e20007001303e2400b131440090d025514150007002f3fdd
2b32ed10eded012f2b2b2b2b2bcd2b2b2bc410c410c631302b1bb10602435458402713121010
065514141010065513141500000007010c0d0d065501021010065501040f0f0655010cb8fff0
b4101006550cb8fff4b40f0f06550cb8fff0b70d0d06550c0c17161112392f2b2b2bcd2b2b2b
002f3f3fddcd3130012b2b1bb79017c017f0170317b8ffc0b33f463417b8ffc0403a393b3401
17b20d643650170140175017601770179017a017f017070c291e074a2201291e06272314270d
41131e144415000007060a0001240d0cb8ffc0b33f46340cb8ffc0401a353b34900c01500c01
600c700c900ca00cf00c050cb216b2a3182b10f65d71722b2b3cfd3c003f3c3f3cf5edfc01f5
2b2b3130015d0171012b012b2b01725959011114161633152135323636351134262623220727
25017b193447fe3f3f2e1a0e1f181a28110111058efb4156381d24241a3c5503409b471a1023
70000001002c000003ab0568001e0168408207180b3917181c3d3418401c3d3419401c3d340f
1e161629073c074907a9070640205b045a085b175a186b08741174129c0b9d0e9911ac0bac0e
c905c917c818d917d918e020f904f9171515011d0419051b15191619171d180709170b180b1d
3419471989178f200718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba03330003018db301020c
1eb8018d400d0006e24f135f136f137f130413b801074013400001001a002040208020036020
a020022019bb01f90003000d014040145f026f027f028f02bf02cf02df02ef020802191fba01
8e010100182b4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd71b1
0602435458b78f0901bf09cf0902005d71592be41112173911123901111239390210b1060243
5458b47d198d1902005d590e3c8710057dc40ec431300171725d005d012b2b2b002b01032135
00003534262322060723363633321615140706070207213236363703ab5ffce0016101209e6e
649f262519cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571b9c6d490
6767a2b5fef03810312d000100230000059d054c00450177b10202435458b747400d0d025500
25b8fff6b5131302552534b8fffc401213130255341a0d0d0255340c0f0f02553413b8fff640
13131302551301220c13130255220c0d0d025522b8ffe8400c10100255220c0f0f0255221a41
1003e2001d03e2002c03e2002f03e2002e000c03e2000903e2003f03e2003c03e2400b3d0024
242e3d022e1c0a02003f2f2f3f12392fcd10ededecec10ededecec012f2b2b2b2bc0cd2b2f2b
2b2bdd2bc031302b1b40717047a047d047e0470413479e1c40365047e04702121f1b0b212222
1f1b1c2122341f1b2e2122451f1b3e2122021f1b0a2123131f1b1b2123251f1b2d2123351f1b
3d21230100232324241b3e3d3d0b0b0a022e2d2d1c1c1b0812132202402201df220120223022
7022a022d022e0220622b80220401a10476047c0470320470147452522355034603402349e46
61dc182b4d10f4723c4dfd3c107172f45d71723cfd3c003f3c103c103c3f3c103c103c12392f
3cfd3c2b2b2b2b2b2b2b2b3130015d2b015d5901211134272627262323352115232207060615
1114171617163333152135333237363511211114171617163333152135333237363511342726
2726232335211523220706061501a502760d0a202b3030024430302b20170d0a1f2c3030fdbc
30532619fd8a0d0a202b3031fdbb305426180d0a1f2c3030024531302b1f1802d70184682119
1218252517104164fc956721191218252531207a019dfe636721191218252531207a036b6821
1912182525171041640000000003003dfe4603db03af003b0049005903974082121650972699
3603002d105b02762a765302002a062e06528b20043f374f5b6f377526705b8f048f05831784
188f358a3e83458f4b864f95179518994fb804b905b417b418c934c94bc05bd05be05bf05b1b
1a201533103514361f5b05a7084a363f1b00160336214a1b0019431211100f0e0d0c0b0a0909
13131409088025011225b8ffdeb41214025525b8ffc0b3140c3f25b8ffc0400b120b3f9f25af
25bf250325b8019eb5582b80210121b8ffde400d12140255129f21af21bf210321b8ffc0b314
0c3f21b8ffc0b3120b3f21b8019e4018904a014a40140c3f4a40120b3f4a2c121202554a5014
0114b8010840136f08017f080108401114025508350699430143b80331400c194a0a2f190150
1980190219bd02d200060009034d003c0331400a0607195101512c2c0f4dbe03300030001e03
300039004d0330401f1030016f308f309f300330180f100255300c101006553035392e038054
0154b8ffdeb40d0f025554b8ffcab41014025554b8ffdeb41010065554b8fff0400a0d0f0655
54251f280128b8ffc04016171a348f28014f287028c028d02804280e1010065528b8fff4b40f
0f025528b8ffee4012101002552875205b305b405ba05bd05b055bb8ffc0401c0b0c345b0e8f
96460146101010065546312016010f167016cf160316b8fff2401110100255160c1111025516
0c1010065516b802bd4013993f013f313003500302500301000310030203b8ffc0b3191d3403
b8ffc0b30b0c3403b8fff4b41313025503b8fff4b70f10025503695a5bba01780021010ab189
182b2bf62b2b2b2b5d7172ed72fd2b2b2b5d71ed2b72e4102b71f62b2b2b5d712b72ed2b2b2b
2b7110e4f42b2b5d72ed10ed10ed003fed723ffde610ed5d713f10ed7210f42b5d5ded72102b
2b2b5ded2b2b5d4358b4cf21df21025d592b72f4ed5d2b2b2b4358b4cf25df25025d5972103c
103c1112173911123939111239011112393912393931304379407a4b573a4524351c1d171801
052625323133313431030641264f262e252a265625541c011c3b1e1c004b354d200042013f20
003d053f1c00502d4d1c00522b5420014418461c015527571c0156571d3a1b1c011c1b3b004c
314a20014b4a3536400243200001003e043c1c014e2f511c0053295120004517431c00002b2b
2b2b103c2b103c103c2b103c103c2b103c2b012b2b2b2b2b2b2b2b2b2b2b2b2a2b8181818181
8101725d00715d01710072435c58400a2e10120b3f351012392eb8fff0b11239002b2b2b5901
2626353436333217333216171615140706062323161514062322270606151416171617161716
1615140706232227263534373637363726263534360122061514171633323635342726010606
151417163332363534272627260135545acda08360c22b0e030605030f2b7738c4a544472c1f
21301c70ce3d5d6f6a9cfbc1854b0b1135075f342b3901154a644434504c624533fef82f303a
64bdb4ab33349ae1014e29935988c440050609171a0a0506487080b614263914112007040305
090d70527163925732361818254209631f311f235e0287767a9e5742727a9f5a42fc81335825
30243e7f4834161604060001000d000003f3058e0036028fb10202435458401d384012120255
100a110a080d0d02550a182412120255181a0d0d025518b8fff8b40f0f025518b8ffe0400c10
100255180e131302551826b8ffea401f1010025526213435272d0121040c0c025521080d0d02
55212d18121202552db8fffab40c0c02552db8fff6b40d0d02552db8fff4b40f0f02552db8ff
ec400f101002552d0e131302552d0120040f410a03e2001203e2002503e2002803e200270034
03e2400f3540090d025535360027111d2c0407003fed2f2f3fdd2bed10ededecec123939012f
2b2b2b2b2b2bdd2b2bc010c4c63210c42b2f2b2b2b2b2bcd2bc410c431302b1bb10602435458
405834121010065535121010065501200427343536001d2c040711270a02101006550a060f0f
06550a0c0d0d06550a18021010065518060f0f0655180c0d0d06551818383701210210100655
21060f0f0655210c0d0d0655212db8fff0b4101006552db8fff2b40f0f06552db8fffcb70d0d
06552d2d38371112392f2b2b2bdd2b2b2bc01112392f2b2b2bcd2b2b2b002f2f3fed3fddcd11
1239393130012b2b1b402f38402a350a38600d5d360f250f268038903804b038c038d038032b
0601503860387038903804403801200818291e11b8030f4011222d291e274a220a291e104a23
21291e26b8030e402e2335272e41341e35440120273600001d2c04072726261111100a191824
09900a01b00a010f0a700a9f0acf0a040ab802bd40252d0021242e1f2d502d602d702d04802d
902d02b02d01002d102dc02dd02d042d6037a67f182b10f65d5d71723cfd3c10fd5d71723cfd
3c003f3c103c103c3fed3f3c113939f5edfc01f52b2b2b2b3130437940141a1c050806251b26
1c05191c0107081a071d1c012b01103c2b2b2b8181017172005d015d712b2b59590111363633
3216171615111417161633152135333236373635113426262322060711141616331521353237
363635113426262322072725014d6f82414e701b130e0a3040fe3e1540320a031f4430316a4a
153946fe3a3d2314180f1f1a152f0e0112058efd627a45565c40aafebc5720181c2424272610
4e0144965e2f344ffe1c5e2e1f2424130a3856033d9d481a1023700000020044ffe40405058e
001f002d024bb1020243545840262f40101002552906180d0d025506080f0f0255060c101002
550600201d160a0d0d0255160b20b8fff4401112120255200c1313025520180d0d025520b8ff
f8400c0f0f0255201810100255201cba03e2001dffc0b6091002551d1f12b803e24010134009
0e0255131400252509072c2c03002fed3fed3fdd2bed2fdd2bed012f2b2b2b2b2bc0dd2bc410
c02f2b2b2bcd31302b1bb1060243545840521213140000200b0303252509071c701d01401d60
1d021d1f0b2c2c030b160c0d0d0655160410100655160b20141010065520040f0f065520020d
0d065520202f2e290c0d0d06552906180d0d065506062f2e1112392f2bcd2b1112392f2b2b2b
c0cd2b2b003fed3fdd5d5dcd3fed1217393fddcd31301bb9002fffc0b34747342fb8ffc04042
2b2e34602f7c047c058a04802faf2fc02f07402f802f02002f162a152b55055508542b960707
480701202f370a470a560a9804a72aa02f07c02ff02b022020002021baffe0000bffe040453c
204f205e20660a6c207a209f009f20aa07b907c62a0b260813270c41121e1344151d2716411c
1e1d441f0020210b042c1500252509071f2c012c2c1f030b1f000b210c20b801674012156016
8016af16031f1690160216eb295006b8ffc0b3282e3406b8ffc0b7473506432e437f182b4e10
f42b2b4dedfd725d3cfd3c3c3c3c3c003f3ced723fed3f11173910f5edfc01f50010f5edfc01
f531304379401a262b0408272526082920002b0429200028072520012a052c2000002b2b012b
2b2b8181005d3838383801715d00710172715d2b2b5959250606232226353412333217353426
262322072725331114161633323717052335112e0223220706151416333202c743804a96e0f8
c3794f0f20181a2b0d01112d0f21161b2d0bfef02e063c632f58455bb06c5b67463dfbc5c501
474da99d481a102370fbdda1471c112371c901d84470394f68c8cad7000000010022000006f2
054c003001c940e80f18010e0008170e190d280f290f2a043007123d013d2f59186f0168186d
2f791897019a2fcb18da18e801eb180d0d18010a170630463003361836304718031630271826
3003061805301717032b00291826303b003a173918351935303f324f3268007a007618791974
308a008918853099009730a900a630a032b032cc17c918c032dc17d918d032ed17ea18ea19e0
32f600fa17f7302548014917462f5a015917562f6a177819c618c530d618d630e518e5300e0f
1f1b092122201f1b1a21222e1f1b282122021f1b082123101f1b162123211f1b272123171818
220001140018190001191818b802c9403e302f14301817302f182f012f180316171a19191702
09080800003030272808305b000002192f2e22202021a021b021c021d021e02106219e403201
320102b802c9400d100f200f1102550f9e3161dc182b4e10f42b3c4dfd3c4d105df65d3c4dfd
3c3c11392ffe003f3c3c103c103c103c3f3c103c103c173901113987082e2b057d10c487082e
182b057d10c4182b2b2b2b2b2b3130015d5d7171717100715d435c58401b2f10140c3f011014
0c3f0110103918181139181012390008183917b8ffd0b5173917301439012b2b2b002b2b2b00
2b2b59015d005d21011114171633331521353332373635113427262623352101012115232207
0615111417163333152135333237363511010346fdf41b255030fe2830562416140e4b530180
01ec01e401802f5724161c25502ffdc030572316fdf50475fc767d1f2a252534207203765a28
1d2725fbdb042525342072fc8a7d1f2a2525342072038afb8b0000010029000004b7054c0020
00b0401b100010012000200140225702670277028a209920a920b9200c0122b8018e40330e64
3655025c1e02091f1b03212216371b113d220a1f1b102123201f2000300040000300e71c1110
021c2302030800ac016c02b802c4402f16170613130255170c0f0f0255170c0d0d0255172209
090a0c101002550a0c0f0f02550a1a0d0d02550a9e21615d182b4e10f42b2b2b3c4d10fd2b2b
2b3cf4f4ed003f3ced3f3c10e45d39392b2b2b313001722b015d011703213533323736351134
27262323352115260606151114171616333332363604962174fbe6335625151c274d3302666c
5720100c3283639c7e68017707fe9025382074036b7f202c2525012a4079fcac531f15142e75
000000000002000300000000001400010000000000340004002000000004000400010000f01e
ffff0000f000ffff10000001000000000006004800000000001f000000010002000300040005
0006000700080009000a000b000c000d000e000f001000110012001300140015001600170018
0019001a001b001c001d001e058e0000054c001f054c001c0394001b0000ffe10000ffe40000
ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000000000250096009f002400f0
013100c200c0004a00a6004100500094004700cf00af000e007901cb00040023004400a80025
011f0002004600170105009900d9005c007200e500e00028004b00de01120024004500700016
0039ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025
008fffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027007f00910012
006a00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b00b500d5014b
ff6b004d007905d809b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b90131013102170217
00020017002900550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14ff15
ffe7ffff002a00580099009f00c100e400f40130015901ab01ab03220374041e04740532fd81
004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe50000
0008001f00380051005a006f0076007700a200c000c200c400f101fb0209027e02cf04c5057a
05f0ff92001200260042004b004f005100530064008b00ae00b200b800b800d600f501110120
01310138014e01520167018f019601b801d901d902060221027102ea03b003cb03dc04360505
ff3a00120016001e001f002300570068006c007e0088009200a500a800c500c901150126012d
013001d601d901f6023b0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a0007
004400470058007500aa00e400ef011601200129016a017301e3027e029002b4030e03100323
03350341035403590388039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff84
000000010006001e0027002c0034003700620066006a006b006c007000700072007c0081008a
008e0091009200a000ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7
ff56ff7900010025002d002e007c00870091009900a100a500a500aa00af00b600c600cc00d7
00dd00ec00f201020105011701180123012a012c0131013f014701490149014d015101510155
01550157015a015a0161016201680168017f0180018201830184018d01950195019501980199
01a501a901b601b601b701ba01ba01d501df01e601ea01f2020002000203021702250227022f
0239024302430247024f025202520267026f026f027002720276027e02a702b302b902d60313
0325032d03610371039903ae03c203d403f90402042c042f043c04560467048304cf04d104d8
04fb051f05450568059e05c2061b06340655066a069806af06e806fc070607500762077c07d4
07ff082500ad00c700aa00b5000000000000000000000000002f06cf01730514047802df009c
0018037005870155002500060254036c038e03d2056601f0032001da018a0369036bffa30346
02f8036f015602bf0122031f053a0366008c00ff01ab02e102f402e70415015402e901280491
01b7026f034302060000000005d30415048305e8000002d7003a027d01c002c503830383ffbd
003a059e01df059e02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a00590000000001260215015002f0025503bc06d0
0335010100d000d2007a01030130007c000000000000000000fe006e006600940227002b0045
004d00d3013200180097004100f4febcffe9001605d8058b009100a1032c00520030005d02cb
003a009200e500e500580086003200ba0099008800300298007cff8001640028004d00650002
00b8016a002f010b001100170100007f00040016022200a6005f000000f8000a00ca0043004b
01ee0077012000f401c00028045f0000008c044500c20060007b008b008b0064005d00c2009c
009206b505d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091005a00a1
042c0041002000490071009c009cfe4800400040008600cb0102007d003a003e006a00500448
00290096ff6a0097006900e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c
00670053ffa8002a0076ffb20036008705590256052b043400de00c901c4004800db018b00b3
004800da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8cffd500150028
002200990062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7
ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a29
2827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c0b0a0908070605040302
01002c4523466020b02660b004262348482d2c452346236120b02661b004262348482d2c4523
4660b0206120b04660b004262348482d2c4523462361b0206020b02661b02061b00426234848
2d2c45234660b0406120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b09051582320b00d44235921212d2c20204518684420b001602045b0
4676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b10117
3e01b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b0
0643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b003
61592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112b
b0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae4
1b21b0177ae45959182d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a52
79b31940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b
2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143234365
0b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b000525823b002253823
b002256538008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21211059
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2b
b02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0
005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d
2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826b008260f101613
45683ab001162d2cb4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2c4b5458381b2121592d2c014b53234b515ab00225b00425b006254923
451869525a58b00225b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b0106048590a21211b2121592d
2cb012435c580cb00425b00425060c6423646164b807085158b00425b00425012046b8fff060
482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b
515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b004
26024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80
62232010238ab9035803588a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a
2d2cb1020042b123018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042004b014b5258b202
0802436042591bb940000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b202100243604259b94000020063b80400885458b2
02400243604259595959592d2cb0024354584b53234b515a58381b2121591b21212121592d00
000000010000000511ec9a934c535f0f3cf50819080000000000a2e31dc200000000c8c23397
fb74fd8c1000080e000000090001000100000000000100000721fe4500571000fb74fadf1000
00010000000000000000000000000000001f0639011c047300220400004505c7000d038d004c
02aa000d020000000556004a0400000c031d006404000002063900110400fff9023900140239
003c02aa0054078d001b02aa002e04e3003e038d004902aa004f038d004605c700120239003d
0400002c05c700230400003d0400000d04000044071d002204e3002900000000000000780000
0274000004e00000094400000d2400000f5400000f54000010d000001438000018fc00001ba0
0000206c000023380000259000002848000028cc00002ca400002d2800002e800000327c0000
350000003760000039e400003bc000003d9000003fcc000044640000479400004a6800004cc4
00004ddc00010000001f00f2003c009d000700020010002f00560000062504eb00050002b900
5403ecb3032a1f3f411503e4006003e9009f03e500df03e50004001003e4001003e5003f03e5
007003e400ff03e40005ffc003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003
e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb2424232b9ffc003deb236
3832b9ffc003deb32a2d32df410a03de00ef03de000203de03df0028001fffc003dfb3282e32
f0410d03df0001037e000f0101001f00a003dd00b003dd0002004003dab32426329fbf03cc00
0103ca03c90064001fffc003c9b20d1132410a03c703b70012001f03b603b50064001fffc003
b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d0004006f03a7007f03a7
008f03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403ab03ab00ef03a50001
000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa000103a8036a0022001f
038c03940015001f038b03930015001f03a40393001a001f03a20394001e001f03a10393001e
001f039f0394001e001f039b0394001a001f039a0393001e001f039903940016001f03980394
0016001f03970393001b001f03960394001b001f03950393001b001f03760375001a001f0374
0375001a001f03a00373b21e1f10411e03930020039300300393000300200394003003940040
039400030000039400010383036c001e001f03b1036c0032001f036d036c0032001fffc0037d
b2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d0037d0004ffc0037cb221
2332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c00040030037300400373
0002000003730010037300200373000300e0037300f00373000200b0037300c0037300d00373
0003008403730090037300a0037300030377036a0029001f0389036ab2281f40b80367b33940
323fbb0366000100400366b3191d328fbb0366000100400366b3090a3240b80366b3090e3240
b80366b3090f323fbb0365000100400365b3090c3240b80365b31a1d3240b80365b3090e326b
410e0363007b036300020014036300240363003403630044036300040363b2242f1fba034e00
6d0800400e1f7f027f037f047f050430440112bf033200500800001f0012032d003c08004029
1f5f3c01376009700980090310092009300940095009056f037f038f03031f032f033f034f03
5f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd00b05b006c006d006e006f0
060520063006400650066006700680069006a006099006900702600b700b800b03100b200b30
0b400b500b051f0701a041850362000100000362001003620070036200900362000400f0035f
00010020035e0020035f0030035f0040035e00040000035e0000035f0010035f00d0035e00e0
035f00050010030f0020030f0030030f00d0030f00e0030f00050000030f0010030f0050030f
0060030f0070030f00d0030f00060000030f0010030f0020030f0030030f00e0030f00f0030f
0006030f00270000030e0030030e000200e0030e00f0030e0002030e004a00e0030d00f0030d
0002030d002700d002fc0001001002fc002002fc005002fc000300d002fc00e002fc00020000
02fc001002fc002002fc003002fc005002fc006002fc000600e002fc00f002fc0002002002fc
003002fc004002fc000302fc406127c02901b02901a02901902901403c3f413240223f413212
12125f235f255f285fa5046f236f256f286fa5044f234f254f284fa5043f233f253f283fa504
2f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0
b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02af00
df02af0003001f02af002f02af003f02af006f02af000402af02af001f02ad002f02ad003f02
ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad003f02ad005f02ad009f02ad00
05005f02ad00df02ad0002000f02ad001f02ad003f02ad0003004002acb23a334f414a02ac00
5f02ac009f02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300b002ac00
e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02ac003f02ac0003000f035a00
01000f035a001f035a003f035a005f035a0070035a000500cf035700df03570002000f035700
1f03570070035700af03570004035a035a0357035702ad02ad02ac02ac032c400d31151f0016
16000000121108104110020c004a000d01a8004a000d0198004a000d0189004a000d013f004a
000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d01940041000d0121400b41
0db4410d4f410d29410d411002170021000d02150021000d02060021000d01eb0021000d014e
0021000d012c4014210df9210df3210df1210d9d210d71210d3d210d4110021c001f000d0214
001f000d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f0d571f0d371f0d41
0d019e0141000d00420141000d001e0141000d001b0141000d01f2b40f440f0009bb01f20044
000d0201b23c291fb80200b23c291fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801
fab23c931fbc01f9010f0101001f01f6b224e41f411501f401490401001f01f301490401001f
01f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c811f411501a3010f019a
001f01a200220801001f01a100500401001f019f0149019a001f019d01490067001f019cb22c
621fb8019bb22c791fbc019a002c0101001f0197b22ce41fb80193b22c891fb80192b22c6c1f
b8018fb2259e1fb8016ab23c2a1f4111016700240201001f0163002502ab001f014c010f019a
001f01480149006c001f0147b22c891fb80145b22c9e1fb80144b22c791fb80143b223311fb8
0127b23c811fbc012300500101001f011fb223e41f4115011d0023019a001f011c0023080100
1f011b00250801001f010e010f0401001f010d00220401001f0108b223811fb80106b425e41f
f73cbb0125001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401b21fcf
2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb124e41fb0b901
490201b61faf2c671fad23b80801b21fa523b80201400b1f9f3c2d1f9b235a1f9925b80201b2
1f812cbc0401001f006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb8012540
0a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24e41f2623b8
0156b21f5537ba023500070175402c0774076207560751073b0733072d0720071d071c071408
120810080e080c080a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a00b013034b024b53
4201b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101018e59b0382bb00288b8
01005458b801ffb101018e851bb0124358b90001012f858d1bb90001017c858d5959014bb0c0
63004b6220b0f65323b8010a515ab0052342180016763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b
2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027102
6f4544b90270026f45445958b9017a0271455258b90271017a4459594bb04753205c58b90022
02704544b9003c027045445958b901b30022455258b9002201b34459594bb04c53205c58b901
4900224544b1222245445958b901c20149455258b9014901c24459594bb06753205c58b90024
02714544b90050027145445958b9021e0024455258b90024021e4459594bb8020153205c58b9
010f00224544b1222245445958b90c00010f455258b9010f0c004459594bb01c53205c58b125
254544b12c2545445958b13725455258b125374459594bb0ab53205c58b125254544b1232545
445958b901590025455258b9002501594459594bb8010153205c58b125254544b12825454459
58b902080025455258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc646345652345602345
6560234560b08b766818b080622020b164dc4565234520b003266062636820b003266165b0dc
236544b064234420b161634565234520b003266062636820b003266165b063236544b0612344
b10063455458b163406544b26140614523614459b3a67f434b456523456023456560234560b0
89766818b080622020b1437f4565234520b003266062636820b003266165b07f236544b04323
4420b1a64b4565234520b003266062636820b003266165b04b236544b0a62344b1004b455458
b14b406544b2a640a645236144594b5242014b5058b108004259435c58b108004259b3020b0a
124358601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d23
42b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211b
ba01a80400000b2b59b0102342b0112342002b00184569444569444569444569447373737473
73737475752b7373747475184569447373742b4bb021534bb046515a58b03cb03c45b0406044
59012b2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943
584012bf22cf22025f226f227f228f229f22af2206757559435c58b6403c9f22ef220375592b
2b01747474744544737374747575454473454473744544737475737373737300757575737575
752b2b757575752b752b435841220063032d00010003032d0013032d0023032d0033032d0053
032d000500c3032d00d3032d00e3032d00f3032d00040083032d0093032d00a3032d00b3032d
0004032d032d4518694474747575592b4358b900180332b330353238b80332b361663238b803
32b3535a3238b80332b3454e3238b80332b33c413218b80332b23f330a410f0332000100ba03
3200ca033200da033200ea033200fa03320005033203324518694474752b2b2b2b2b2b597300
732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373737474732b2b00732b2b002b
2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b00017375007373004569440073
730173742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73742b2b00000000>
] def
/f-0-0 currentdict end definefont pop
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 279 186
%%EndPageSetup
q 0 -1 279 187 rectclip q
Q q
-1.922 185.719 280.66 -189.801 re W n
0 185.719 279 -186 re W n
q
0 185.719 278 -185 re W n
[ 1 0 0 1 0.000000000000000027 -0.281052 ] concat
  q
Q q
0.137255 0.121569 0.12549 rg
0.442022 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 1 0 186 cm
41.645 -124.816 m 115.07 -99.34 l S Q
0.556136 w
q 1 0 0 1 0 186 cm
115.215 -79.43 m 115.215 -99.469 l S Q
17.695 62.199 m 19.914 62.199 l 20.645 62.195 21.168 62.328 21.48 
62.609 c 21.789 62.875 21.941 63.27 21.945 63.766 c 21.941 64.117 
21.852 64.422 21.672 64.688 c 21.488 64.938 21.25 65.105 20.953 65.191 
c 20.758 65.242 20.402 65.27 19.891 65.273 c 17.695 65.273 l h
16.559 57.691 m 16.559 66.281 l 19.797 66.281 l 20.367 66.281 20.805 
66.25 21.105 66.199 c 21.527 66.125 21.879 65.992 22.164 65.797 c 
22.449 65.598 22.68 65.324 22.855 64.969 c 23.027 64.609 23.113 64.219 
23.117 63.797 c 23.113 63.063 22.883 62.441 22.418 61.941 c 21.949 
61.438 21.109 61.188 19.898 61.188 c 17.695 61.188 l 17.695 57.691 l 
16.559 57.691 l f
24.512 54.781 m 23.824 54.781 l 23.824 59.148 l 23.656 58.988 23.441 
58.832 23.176 58.676 c 22.906 58.516 22.664 58.398 22.453 58.324 c 
22.453 58.984 l 22.836 59.164 23.172 59.387 23.461 59.641 c 23.746 
59.895 23.949 60.145 24.07 60.387 c 24.512 60.387 l 24.512 54.781 l f
26.332 62.418 3.238 -1.059 re f
39.75 65.75 m 40.953 65.75 l 38.605 60.816 l 38.664 60.289 38.691 
59.836 38.695 59.434 c 38.691 58.34 38.488 57.789 38.078 57.789 c 
37.781 57.789 37.633 58.02 37.633 58.48 c 37.633 59.086 37.852 59.836 
38.289 60.742 c 38.203 61.305 38.082 61.98 37.926 62.773 c 37.77 63.566 
37.609 64.137 37.453 64.48 c 37.289 64.828 37.059 65 36.758 65 c 36.266 
65 36.004 64.629 35.969 63.895 c 35.758 63.895 l 35.758 65.184 36.141 
65.832 36.906 65.832 c 37.348 65.832 37.676 65.566 37.891 65.043 c 
38.102 64.52 38.32 63.387 38.555 61.645 c 39.75 65.75 l f
26.074 173.773 m 28.289 173.773 l 29.023 173.77 29.543 173.91 29.859 
174.184 c 30.164 174.453 30.32 174.84 30.324 175.336 c 30.32 175.699 
30.227 176 30.047 176.258 c 29.867 176.508 29.625 176.68 29.328 176.766 
c 29.137 176.816 28.781 176.84 28.27 176.844 c 26.074 176.844 l h
24.938 169.266 m 24.938 177.855 l 28.172 177.855 l 28.742 177.855 
29.184 177.828 29.484 177.773 c 29.906 177.703 30.258 177.566 30.539 
177.371 c 30.824 177.172 31.059 176.898 31.234 176.543 c 31.406 176.184 
31.492 175.793 31.492 175.371 c 31.492 174.637 31.262 174.016 30.793 
173.516 c 30.324 173.008 29.488 172.758 28.277 172.758 c 26.074 172.758 
l 26.074 169.266 l 24.938 169.266 l f
35.949 167.531 m 35.949 166.867 l 32.262 166.867 l 32.258 167.035 
32.285 167.188 32.344 167.344 c 32.438 167.59 32.582 167.84 32.789 
168.086 c 32.996 168.328 33.297 168.609 33.691 168.93 c 34.293 169.43 
34.703 169.824 34.918 170.117 c 35.133 170.406 35.238 170.676 35.242 
170.938 c 35.238 171.207 35.141 171.438 34.949 171.625 c 34.75 171.813 
34.496 171.91 34.191 171.91 c 33.852 171.91 33.594 171.805 33.398 
171.609 c 33.199 171.41 33.094 171.133 33.094 170.785 c 32.395 170.859 
l 32.438 171.383 32.617 171.785 32.938 172.059 c 33.246 172.332 33.672 
172.469 34.203 172.473 c 34.738 172.469 35.16 172.324 35.473 172.031 c 
35.785 171.727 35.941 171.359 35.945 170.922 c 35.941 170.699 35.895 
170.48 35.809 170.266 c 35.715 170.047 35.563 169.816 35.348 169.582 c 
35.137 169.34 34.785 169.016 34.293 168.602 c 33.883 168.254 33.617 
168.016 33.504 167.895 c 33.387 167.77 33.285 167.648 33.215 167.531 c 
35.949 167.531 l f
115.23 24.453 m 114.105 24.266 113.543 23.5 113.547 22.145 c 113.543 
21.441 113.684 20.898 113.965 20.512 c 114.246 20.125 114.57 19.934 
114.945 19.934 c 115.328 19.934 115.648 20.117 115.898 20.492 c 116.148 
20.859 116.273 21.367 116.273 22.008 c 116.273 22.93 115.926 23.742 
115.23 24.453 c h
114.973 24.723 m 114.777 24.938 114.504 25.203 114.156 25.504 c 113.773 
25.84 113.516 26.105 113.387 26.301 c 113.25 26.492 113.184 26.707 
113.188 26.934 c 113.184 27.273 113.344 27.543 113.668 27.75 c 113.984 
27.941 114.402 28.043 114.922 28.043 c 115.434 28.043 115.883 27.957 
116.27 27.777 c 116.652 27.602 116.848 27.359 116.848 27.051 c 116.848 
26.902 116.801 26.781 116.707 26.684 c 116.613 26.586 116.504 26.531 
116.379 26.535 c 116.199 26.531 115.988 26.668 115.746 26.941 c 115.496 
27.215 115.285 27.406 115.121 27.516 c 114.949 27.625 114.754 27.68 
114.527 27.684 c 114.238 27.68 114 27.617 113.816 27.492 c 113.629 
27.363 113.535 27.203 113.539 27 c 113.535 26.813 113.613 26.637 
113.766 26.473 c 113.914 26.309 114.305 26.008 114.945 25.578 c 115.617 
25.109 116.094 24.75 116.375 24.484 c 116.652 24.223 116.883 23.906 
117.059 23.531 c 117.23 23.156 117.316 22.758 117.32 22.34 c 117.316 
21.602 117.059 20.957 116.543 20.398 c 116.027 19.836 115.422 19.559 
114.734 19.559 c 114.102 19.559 113.57 19.781 113.137 20.23 c 112.703 
20.68 112.488 21.281 112.488 22.031 c 112.488 22.75 112.727 23.352 
113.203 23.84 c 113.68 24.324 114.27 24.613 114.973 24.723 c f
137.277 99.676 m 138.48 99.676 l 136.133 94.746 l 136.191 94.219 
136.219 93.762 136.223 93.363 c 136.219 92.27 136.016 91.719 135.605 
91.719 c 135.309 91.719 135.164 91.949 135.164 92.41 c 135.164 93.012 
135.379 93.766 135.816 94.672 c 135.73 95.238 135.609 95.91 135.457 
96.703 c 135.297 97.496 135.137 98.07 134.98 98.41 c 134.816 98.754 
134.59 98.926 134.289 98.926 c 133.797 98.926 133.535 98.559 133.5 
97.824 c 133.289 97.824 l 133.289 99.113 133.672 99.758 134.434 99.758 
c 134.879 99.758 135.207 99.496 135.422 98.973 c 135.629 98.449 135.848 
97.32 136.086 95.574 c 137.277 99.676 l f
253.941 21.031 m 254.09 20.102 l 253.793 20.035 253.531 20.008 253.293 
20.008 c 252.914 20.008 252.617 20.066 252.406 20.188 c 252.195 20.313 
252.043 20.469 251.957 20.664 c 251.871 20.863 251.828 21.277 251.828 
21.906 c 251.828 25.488 l 251.059 25.488 l 251.059 26.313 l 251.828 
26.313 l 251.828 27.855 l 252.875 28.488 l 252.875 26.313 l 253.941 
26.313 l 253.941 25.488 l 252.875 25.488 l 252.875 21.855 l 252.871 
21.555 252.895 21.359 252.934 21.273 c 252.969 21.188 253.031 21.113 
253.117 21.066 c 253.199 21.016 253.32 20.988 253.48 20.988 c 253.586 
20.988 253.746 21.004 253.941 21.031 c f
265.078 17.691 m 266.559 19.789 l 265.191 21.734 l 266.043 21.734 l 
266.664 20.785 l 266.781 20.605 266.871 20.453 266.949 20.336 c 267.059 
20.496 267.16 20.648 267.254 20.781 c 267.941 21.734 l 268.754 21.734 l 
267.363 19.832 l 268.867 17.691 l 268.023 17.691 l 267.195 18.949 l 
266.969 19.285 l 265.91 17.691 l h
263.777 19.727 m 263.523 19.613 263.148 19.531 262.656 19.461 c 262.371 
19.426 262.168 19.371 262.059 19.324 c 261.938 19.273 261.844 19.199 
261.785 19.102 c 261.715 19.004 261.688 18.895 261.691 18.777 c 261.688 
18.59 261.754 18.438 261.898 18.32 c 262.039 18.195 262.242 18.137 
262.504 18.137 c 262.77 18.137 263 18.191 263.207 18.313 c 263.414 
18.426 263.563 18.582 263.664 18.781 c 263.734 18.938 263.773 19.16 
263.777 19.469 c h
263.828 18.191 m 263.578 17.977 263.328 17.82 263.094 17.734 c 262.859 
17.645 262.609 17.605 262.34 17.602 c 261.898 17.605 261.551 17.711 
261.316 17.93 c 261.078 18.141 260.957 18.414 260.957 18.758 c 260.957 
18.953 261 19.133 261.09 19.305 c 261.184 19.461 261.297 19.594 261.449 
19.695 c 261.59 19.789 261.758 19.863 261.945 19.914 c 262.078 19.953 
262.281 19.988 262.551 20.023 c 263.105 20.086 263.508 20.16 263.777 
20.258 c 263.777 20.352 263.777 20.406 263.781 20.438 c 263.777 20.715 
263.711 20.906 263.582 21.027 c 263.41 21.184 263.148 21.258 262.801 
21.262 c 262.48 21.258 262.242 21.203 262.086 21.09 c 261.934 20.977 
261.82 20.777 261.746 20.488 c 261.078 20.582 l 261.141 20.863 261.238 
21.102 261.375 21.277 c 261.516 21.453 261.715 21.586 261.984 21.688 c 
262.246 21.777 262.547 21.828 262.902 21.828 c 263.246 21.828 263.527 
21.781 263.746 21.703 c 263.953 21.617 264.117 21.52 264.219 21.398 c 
264.32 21.273 264.391 21.113 264.434 20.938 c 264.453 20.813 264.461 
20.602 264.465 20.305 c 264.465 19.387 l 264.461 18.742 264.48 18.344 
264.508 18.18 c 264.539 18.004 264.602 17.844 264.688 17.691 c 263.965 
17.691 l 263.895 17.832 263.852 17.992 263.828 18.191 c h
254.691 17.691 m 254.691 21.734 l 255.301 21.734 l 255.301 21.164 l 
255.422 21.363 255.59 21.523 255.809 21.645 c 256.016 21.766 256.254 
21.828 256.531 21.828 c 256.828 21.828 257.07 21.766 257.266 21.641 c 
257.453 21.516 257.586 21.34 257.668 21.117 c 257.988 21.59 258.406 
21.828 258.918 21.828 c 259.32 21.828 259.625 21.715 259.844 21.488 c 
260.063 21.27 260.164 20.934 260.168 20.469 c 260.168 17.691 l 259.488 
17.691 l 259.488 20.238 l 259.484 20.512 259.457 20.711 259.418 20.832 
c 259.371 20.949 259.293 21.039 259.176 21.117 c 259.063 21.191 258.922 
21.23 258.77 21.234 c 258.484 21.23 258.246 21.137 258.059 20.949 c 
257.867 20.758 257.773 20.453 257.777 20.039 c 257.777 17.691 l 257.09 
17.691 l 257.09 20.32 l 257.09 20.617 257.035 20.852 256.922 21.004 c 
256.809 21.152 256.625 21.23 256.375 21.234 c 256.184 21.23 256 21.184 
255.836 21.082 c 255.672 20.977 255.551 20.828 255.484 20.637 c 255.406 
20.438 255.371 20.156 255.371 19.785 c 255.371 17.691 l 254.691 17.691 
l f
0.4504 w
[ 3.6032 3.6032] 0 d
q 1 0 0 1 0 186 cm
41.973 -85.563 m 194.117 -33.738 l S Q
26.828 104.586 m 29.047 104.586 l 29.781 104.582 30.301 104.719 30.617 
104.996 c 30.922 105.266 31.074 105.652 31.078 106.148 c 31.074 106.512 
30.988 106.813 30.809 107.07 c 30.621 107.32 30.387 107.492 30.09 
107.578 c 29.895 107.633 29.535 107.652 29.027 107.656 c 26.828 107.656 
l h
25.695 100.078 m 25.695 108.668 l 28.934 108.668 l 29.5 108.668 29.941 
108.641 30.242 108.586 c 30.66 108.516 31.016 108.383 31.297 108.184 c 
31.582 107.984 31.816 107.711 31.992 107.355 c 32.16 106.996 32.246 
106.605 32.25 106.184 c 32.246 105.449 32.02 104.828 31.551 104.328 c 
31.082 103.82 30.242 103.57 29.035 103.57 c 26.828 103.57 l 26.828 
100.078 l 25.695 100.078 l f
35.691 97.68 m 35.004 97.68 l 35.004 102.051 l 34.832 101.887 34.617 
101.73 34.352 101.574 c 34.082 101.414 33.844 101.301 33.633 101.223 c 
33.633 101.887 l 34.016 102.063 34.348 102.281 34.641 102.539 c 34.922 
102.793 35.125 103.043 35.246 103.285 c 35.691 103.285 l 35.691 97.68 l f
0.442624 w
[] 0.0 d
q 1 0 0 1 0 186 cm
130.426 -81.23 m 130.371 -98.281 l S Q
130.355 86.082 m 129.828 87.5 128.926 89.262 127.973 90.352 c 130.352 
89.496 l 132.727 90.359 l 131.777 89.266 130.879 87.504 130.355 86.082 
c f
130.559 106.609 m 131.09 105.191 131.992 103.43 132.945 102.34 c 
130.566 103.195 l 128.188 102.332 l 129.137 103.426 130.035 105.188 
130.559 106.609 c f
0.5 w
[ 2 2] 0 d
q 1 0 0 1 0 186 cm
114.832 -99.387 m 132.832 -99.387 l S Q
0.5 w
[ 2 2] 0 d
q 1 0 0 1 0 186 cm
114.574 -79.785 m 132.574 -79.785 l S Q
0.5 w
[] 0.0 d
q 1 0 0 1 0 186 cm
162.695 -22.055 m 162.695 -35.32 153.031 -30.16 151.695 -46.055 c S Q
151.613 137.641 m 151.203 139.098 150.457 140.93 149.598 142.098 c 
151.895 141.039 l 154.336 141.699 l 153.297 140.691 152.254 139.008 
151.613 137.641 c f
0.5 w
q 1 0 0 1 0 186 cm
180.824 -21.145 m 180.824 -27.777 183.824 -28.449 191.824 -33.145 c S Q
193.277 152.004 m 191.785 152.27 189.813 152.387 188.387 152.117 c 
190.332 153.73 l 190.793 156.219 l 191.254 154.844 192.32 153.176 
193.277 152.004 c f
BT
0 14 -14 0 9.720703 37.993 Tm
/f-0-0 1 Tf
<01>Tj
ET
BT
0 14 -14 0 9.720703 45.77913 Tm
/f-0-0 1 Tf
<02>Tj
ET
BT
0 14 -14 0 9.720703 52.77913 Tm
/f-0-0 1 Tf
<03>Tj
ET
BT
0 14 -14 0 9.720703 62.889528 Tm
/f-0-0 1 Tf
<04>Tj
ET
BT
0 14 -14 0 9.720703 69.103399 Tm
/f-0-0 1 Tf
<05>Tj
ET
BT
0 14 -14 0 9.720703 73.7654 Tm
/f-0-0 1 Tf
<06>Tj
ET
BT
0 14 -14 0 9.720703 77.2654 Tm
/f-0-0 1 Tf
<07>Tj
ET
BT
0 14 -14 0 9.720703 86.603397 Tm
/f-0-0 1 Tf
<02>Tj
ET
BT
0 14 -14 0 9.720703 93.603397 Tm
/f-0-0 1 Tf
<08>Tj
ET
BT
0 14 -14 0 9.720703 100.603397 Tm
/f-0-0 1 Tf
<09>Tj
ET
BT
0 14 -14 0 9.720703 106.051647 Tm
/f-0-0 1 Tf
<0a>Tj
ET
BT
0 14 -14 0 9.720703 113.051647 Tm
/f-0-0 1 Tf
<0b>Tj
ET
BT
0 14 -14 0 9.720703 123.941242 Tm
/f-0-0 1 Tf
<0c>Tj
ET
BT
0 14 -14 0 9.720703 130.941242 Tm
/f-0-0 1 Tf
<0d>Tj
ET
BT
0 14 -14 0 9.720703 134.830883 Tm
/f-0-0 1 Tf
<0e>Tj
ET
BT
0 14 -14 0 9.720703 138.720531 Tm
/f-0-0 1 Tf
<02>Tj
ET
BT
0 14 -14 0 9.720703 145.720531 Tm
/f-0-0 1 Tf
<08>Tj
ET
BT
0 14 -14 0 9.720703 152.720531 Tm
/f-0-0 1 Tf
<06>Tj
ET
BT
0 14 -14 0 9.720703 156.220531 Tm
/f-0-0 1 Tf
<0f>Tj
ET
BT
0 14 -14 0 9.720703 160.882526 Tm
/f-0-0 1 Tf
<10>Tj
ET
BT
0 14 -14 0 9.720703 174.096424 Tm
/f-0-0 1 Tf
<11>Tj
ET
0.5 w
q 1 0 0 1 0 186 cm
41.719 -3.008 m 41.719 -156.008 l 275.719 -156.008 l S Q
278.738 29.992 m 277.32 29.465 275.559 28.566 274.465 27.617 c 275.324 
29.992 l 274.465 32.371 l 275.559 31.418 277.32 30.52 278.738 29.992 c f
41.719 186.012 m 42.246 184.59 43.148 182.828 44.098 181.738 c 41.719 
182.598 l 39.344 181.738 l 40.293 182.828 41.195 184.59 41.719 186.012 
c f
BT
14 0 0 14 110.220703 0.49297 Tm
/f-0-0 1 Tf
<12>Tj
ET
BT
14 0 0 14 118.28027 0.49297 Tm
/f-0-0 1 Tf
<05>Tj
ET
BT
14 0 0 14 122.942269 0.49297 Tm
/f-0-0 1 Tf
<13>Tj
ET
BT
14 0 0 14 129.156134 0.49297 Tm
/f-0-0 1 Tf
<14>Tj
ET
BT
14 0 0 14 133.565313 0.49297 Tm
/f-0-0 1 Tf
<14>Tj
ET
BT
14 0 0 14 138.227312 0.49297 Tm
/f-0-0 1 Tf
<0e>Tj
ET
BT
14 0 0 14 142.116957 0.49297 Tm
/f-0-0 1 Tf
<15>Tj
ET
BT
14 0 0 14 151.577904 0.49297 Tm
/f-0-0 1 Tf
<16>Tj
ET
BT
14 0 0 14 159.883556 0.49297 Tm
/f-0-0 1 Tf
<02>Tj
ET
BT
14 0 0 14 166.883556 0.49297 Tm
/f-0-0 1 Tf
<17>Tj
ET
BT
14 0 0 14 170.773212 0.49297 Tm
/f-0-0 1 Tf
<0a>Tj
ET
BT
14 0 0 14 177.773216 0.49297 Tm
/f-0-0 1 Tf
<0b>Tj
ET
BT
14 0 0 14 188.662811 0.49297 Tm
/f-0-0 1 Tf
<04>Tj
ET
0.5 w
[ 3 3] 0 d
q 1 0 0 1 0 186 cm
42.719 -10.008 m 261.219 -10.008 l S Q
0.5 w
[ 3 3] 0 d
q 1 0 0 1 0 186 cm
261.469 -155.508 m 261.469 -10.758 l S Q
0.42556 w
[ 2.55336 2.55336] 0 d
q 1 0 0 1 0 186 cm
115.246 -155.508 m 115.246 -100.633 l S Q
0.442022 w
[] 0.0 d
q 1 0 0 1 0 186 cm
114.891 -79.848 m 188.32 -54.371 l S Q
0.442022 w
q 1 0 0 1 0 186 cm
187.934 -35.629 m 261.359 -10.148 l S Q
0.4504 w
[ 2.7024 2.7024] 0 d
q 1 0 0 1 0 186 cm
188.469 -155.875 m 188.469 -55.941 l S Q
0.456115 w
[] 0.0 d
q 1 0 0 1 0 186 cm
188.602 -35.191 m 188.602 -54.598 l S Q
0.5 w
[ 2 2] 0 d
q 1 0 0 1 0 186 cm
188.934 -54.363 m 206.934 -54.363 l S Q
0.5 w
[ 2 2] 0 d
q 1 0 0 1 0 186 cm
188.344 -35.461 m 206.344 -35.461 l S Q
0.442624 w
[] 0.0 d
q 1 0 0 1 0 186 cm
202.371 -36.305 m 202.316 -53.355 l S Q
202.254 131.043 m 201.727 132.465 200.824 134.223 199.871 135.313 c 
202.25 134.457 l 204.625 135.32 l 203.676 134.227 202.781 132.465 
202.254 131.043 c f
202.188 151.105 m 202.719 149.688 203.621 147.926 204.574 146.836 c 
202.195 147.691 l 199.816 146.828 l 200.77 147.922 201.664 149.684 
202.188 151.105 c f
210.059 144.449 m 211.262 144.449 l 208.914 139.52 l 208.973 138.992 
209 138.535 209.004 138.137 c 209 137.043 208.797 136.492 208.387 
136.492 c 208.09 136.492 207.941 136.723 207.941 137.184 c 207.941 
137.785 208.16 138.539 208.598 139.445 c 208.512 140.012 208.391 
140.684 208.234 141.477 c 208.078 142.27 207.918 142.844 207.762 
143.184 c 207.598 143.527 207.367 143.699 207.066 143.699 c 206.574 
143.699 206.313 143.332 206.277 142.598 c 206.066 142.598 l 206.066 
143.887 206.449 144.531 207.215 144.531 c 207.656 144.531 207.984 
144.27 208.199 143.746 c 208.41 143.223 208.629 142.094 208.863 140.348 
c 210.059 144.449 l f
0.450039 w
[ 3.600315 3.600315] 0 d
q 1 0 0 1 0 186 cm
41.66 -105.598 m 116.344 -79.633 l S Q
0 g
BT
12.8 0 0 12.8 29.126957 57.363367 Tm
/f-0-0 1 Tf
<18>Tj
ET
0.137255 0.121569 0.12549 rg
23.418 79.867 m 25.637 79.867 l 26.367 79.863 26.891 80 27.203 80.277 c 
27.512 80.547 27.664 80.938 27.672 81.434 c 27.664 81.789 27.578 82.094 
27.395 82.355 c 27.211 82.605 26.977 82.773 26.68 82.859 c 26.484 82.91 
26.125 82.938 25.617 82.941 c 23.418 82.941 l h
22.285 75.359 m 22.285 83.949 l 25.52 83.949 l 26.09 83.949 26.531 
83.922 26.828 83.867 c 27.25 83.797 27.605 83.66 27.887 83.465 c 28.176 
83.266 28.406 82.992 28.578 82.637 c 28.75 82.277 28.836 81.887 28.84 
81.465 c 28.836 80.73 28.609 80.109 28.141 79.609 c 27.676 79.105 
26.832 78.855 25.621 78.855 c 23.418 78.855 l 23.418 75.359 l 22.285 
75.359 l f
30.234 72.449 m 29.547 72.449 l 29.547 76.816 l 29.379 76.656 29.164 
76.5 28.902 76.344 c 28.629 76.184 28.387 76.066 28.176 75.992 c 28.176 
76.652 l 28.559 76.832 28.895 77.055 29.184 77.309 c 29.469 77.563 
29.672 77.813 29.793 78.055 c 30.234 78.055 l 30.234 72.449 l f
32.055 80.09 3.238 -1.059 re f
39.074 83.422 m 40.277 83.422 l 37.93 78.484 l 37.988 77.961 38.016 
77.504 38.02 77.102 c 38.016 76.008 37.813 75.461 37.402 75.461 c 
37.105 75.461 36.957 75.688 36.957 76.148 c 36.957 76.754 37.176 77.504 
37.613 78.414 c 37.527 78.977 37.406 79.648 37.25 80.441 c 37.094 
81.234 36.934 81.809 36.777 82.148 c 36.613 82.5 36.383 82.672 36.082 
82.672 c 35.59 82.672 35.328 82.301 35.293 81.563 c 35.082 81.563 l 
35.082 82.852 35.465 83.5 36.23 83.5 c 36.672 83.5 37 83.234 37.215 
82.715 c 37.426 82.188 37.645 81.059 37.879 79.313 c 39.074 83.422 l f
0 g
BT
12.8 0 0 12.8 129.879703 165 Tm
/f-0-0 1 Tf
<190e1a1b060c02030405060b021c04>Tj
ET
0.137255 0.121569 0.12549 rg
0.5 w
[] 0.0 d
q 1 0 0 1 0 186 cm
108.555 -58.617 m 108.555 -71.883 98.887 -66.723 97.555 -82.617 c S Q
97.469 101.074 m 97.063 102.535 96.313 104.363 95.457 105.531 c 97.754 
104.477 l 100.195 105.137 l 99.156 104.129 98.109 102.445 97.469 
101.074 c f
0.5 w
q 1 0 0 1 0 186 cm
126.68 -57.711 m 126.68 -64.344 129.68 -65.012 137.68 -69.711 c S Q
139.133 115.441 m 137.641 115.703 135.668 115.82 134.246 115.555 c 
136.188 117.168 l 136.648 119.656 l 137.109 118.281 138.176 116.613 
139.133 115.441 c f
0 g
BT
12.8 0 0 12.8 64.535953 128.43645 Tm
/f-0-0 1 Tf
[<1d04>1<1c0e0a0b>1<060c0203>-1<04>1<05>-1<060b021c04>]TJ
ET
0.137255 0.121569 0.12549 rg
0.42243 w
q 1 0 0 1 0 186 cm
99.391 -128.059 m 99.391 -117.512 90.711 -121.617 89.516 -108.98 c S Q
89.469 77.934 m 89.063 76.473 88.313 74.645 87.457 73.477 c 89.754 
74.531 l 92.195 73.875 l 91.156 74.883 90.109 76.563 89.469 77.934 c f
0 g
BT
12.8 0 0 12.8 52.935953 51.636444 Tm
/f-0-0 1 Tf
[<1e0203>-1<060c02030405>-1<060b>1<021c04>]TJ
ET
0.137255 0.121569 0.12549 rg
119.711 16.598 m 119.02 16.598 l 119.02 20.965 l 118.852 20.805 118.637 
20.648 118.375 20.492 c 118.102 20.332 117.859 20.215 117.648 20.141 c 
117.648 20.801 l 118.031 20.98 118.367 21.203 118.656 21.457 c 118.941 
21.711 119.145 21.961 119.266 22.203 c 119.711 22.203 l 119.711 16.598 
l f
188.41 24.332 m 187.285 24.145 186.723 23.379 186.727 22.023 c 186.723 
21.32 186.863 20.777 187.145 20.391 c 187.426 20.004 187.75 19.813 
188.125 19.813 c 188.508 19.813 188.828 19.996 189.078 20.371 c 189.328 
20.738 189.453 21.246 189.453 21.887 c 189.453 22.809 189.109 23.621 
188.41 24.332 c h
188.152 24.602 m 187.957 24.816 187.684 25.082 187.336 25.383 c 186.953 
25.719 186.695 25.984 186.57 26.18 c 186.43 26.371 186.363 26.586 
186.367 26.813 c 186.363 27.152 186.527 27.422 186.848 27.629 c 187.164 
27.82 187.582 27.922 188.102 27.922 c 188.613 27.922 189.063 27.836 
189.449 27.656 c 189.832 27.48 190.027 27.238 190.027 26.93 c 190.027 
26.781 189.984 26.66 189.887 26.563 c 189.793 26.465 189.684 26.41 
189.559 26.414 c 189.379 26.41 189.168 26.547 188.926 26.82 c 188.676 
27.094 188.465 27.285 188.301 27.395 c 188.129 27.504 187.934 27.559 
187.707 27.563 c 187.418 27.559 187.18 27.496 186.996 27.371 c 186.809 
27.242 186.715 27.082 186.719 26.879 c 186.715 26.691 186.793 26.516 
186.945 26.352 c 187.094 26.188 187.484 25.887 188.125 25.457 c 188.797 
24.988 189.277 24.629 189.555 24.363 c 189.832 24.102 190.063 23.785 
190.238 23.41 c 190.41 23.035 190.496 22.637 190.5 22.219 c 190.496 
21.48 190.238 20.836 189.723 20.277 c 189.207 19.715 188.602 19.438 
187.914 19.438 c 187.281 19.438 186.75 19.66 186.32 20.109 c 185.883 
20.559 185.668 21.16 185.668 21.91 c 185.668 22.629 185.906 23.23 
186.383 23.719 c 186.859 24.203 187.449 24.492 188.152 24.602 c f
0 g
BT
9.6 0 0 9.6 190.679703 15.600003 Tm
/f-0-0 1 Tf
<18>Tj
ET
  Q
Q
Q q
Q
showpage
%%Trailer
count op_count sub {pop} repeat
countdictstack dict_count sub {end} repeat
cairo_eps_state restore
%%EOF

%%EndDocument
 @endspecial 4317 21724 a Fh(Figure)298 b(3:)457 b(BTS)299
b(p)31 b(o)-31 b(w)g(er)298 b(consumption)i(mo)31 b(del.)470
b(BTS)298 b(p)31 b(o)-31 b(w)g(er)299 b(sa)-31 b(ving)299
b(is)f(applied)h(in)g(a)f(more)g(gran)-31 b(ular)4317
23052 y(w)g(a)g(y)-92 b(.)4317 26810 y Fq(threshold)530
b Fj(\016)10706 27009 y Fp(2)11232 26810 y Fq(,)556 b(t)-36
b(w)g(o)531 b(TRXs)h(are)f(p)36 b(o)-36 b(w)g(er-gated,)556
b(and)530 b(the)h(BTS)g(en)-36 b(ter)530 b(the)h(medium-)4317
28415 y(p)36 b(o)-36 b(w)g(er)488 b(mo)36 b(de)488 b(\(4+4+4)g
(con\014guration\).)740 b(When)488 b(the)f(tra\016c)h(falls)h(b)36
b(elo)-36 b(w)488 b(threshold)4317 30020 y Fj(\016)4893
30219 y Fp(1)5419 30020 y Fq(,)356 b(t)-36 b(w)g(o)336
b(more)f(TRXs)i(are)f(p)36 b(o)-36 b(w)g(er-gated)335
b(and)g(the)g(BTS)h(en)-36 b(ters)335 b(the)g(lo)-36
b(w-p)36 b(o)-36 b(w)g(er)336 b(mo)36 b(de.)6268 31625
y(The)351 b(less)h(gran)-36 b(ular)351 b(mo)36 b(del)351
b(of)h(Fig.)g(2)f(o\013ers)g(energy)h(sa)-36 b(ving)352
b(p)36 b(oten)-36 b(tial)351 b(only)h(when)4317 33230
y(tra\016c)342 b(falls)h(to)f(ab)36 b(out)342 b(one-third)e(of)j(the)e
(BTS)h(capacit)-36 b(y)-108 b(.)548 b(The)342 b(more)g(gran)-36
b(ular)341 b(mo)36 b(del)4317 34835 y(of)418 b(Fig.)f(3,)k(on)c(the)f
(other)g(hand)g(o\013ers)h(energy)g(sa)-36 b(vings)418
b(in)e(t)-36 b(w)g(o)417 b(steps,)j(with)d(the)f(\014rst)4317
36440 y(one)509 b(kic)-36 b(king)511 b(in)e(as)g(so)36
b(on)510 b(as)f(the)g(tra\016c)g(falls)i(b)36 b(elo)-36
b(w)509 b(appro)-36 b(ximately)511 b(t)-36 b(w)g(o-third)508
b(of)4317 38045 y(the)375 b(BTS)h(tra\016c)f(capacit)-36
b(y)-108 b(.)560 b(Therefore,)388 b(the)374 b(more)i(gran)-36
b(ular)376 b(mo)36 b(del)375 b(\(Fig.)h(3\))g(should)4317
39651 y(b)36 b(e)433 b(more)h(attractiv)-36 b(e)434 b(for)h(energy)e
(sa)-36 b(vings)435 b(than)e(the)g(less)h(gran)-36 b(ular)433
b(one)h(\(Fig.)g Fl(??)o Fq(\).)4317 42584 y Fk(3.2.)664
b(Multi-BTS)464 b(Cel)66 b(lular)466 b(Setting)6268 44521
y Fq(Consider)616 b(an)g(area)g(with)g Fj(n)h Fq(activ)-36
b(e)616 b(callers)h(b)36 b(eing)616 b(serv)-36 b(ed)616
b(b)-36 b(y)616 b Fj(m)f Fq(BTSs.)1126 b(W)-108 b(e)4317
46126 y(in)-36 b(tro)36 b(duce)416 b(indicator)i(v)-72
b(ariable)418 b Fj(w)21348 46325 y Fe(i;j)22416 46126
y Fq(,)j(whic)-36 b(h)417 b(is)g(1)g(if)h(call)g Fj(i)f
Fk(is)450 b(b)-66 b(eing)531 b Fq(handled)416 b(at)i(BTS)4317
47731 y Fj(j)e Fq(and)342 b(0)f(otherwise.)548 b(W)-108
b(e)342 b(assume)f(a)-36 b(v)-72 b(ailabilit)-36 b(y)344
b(of)e(an)g Fj(n)107 b Ff(\002)g Fj(m)342 b Fq(matrix)g(whose)g(en)-36
b(try)341 b Fj(c)46420 47930 y Fe(i;j)4317 49336 y Fq(is)440
b(1)g(if)h(caller)g Fj(i)e Fk(c)-66 b(an)470 b(b)-66
b(e)538 b Fq(serv)-36 b(ed)440 b(through)f(BTS)h Fj(j)514
b Fq(without)440 b(exceeding)g(the)g(uplink)f(or)4317
50942 y(do)-36 b(wnlink)297 b(budgets.)531 b(This)297
b(information)g(can)f(b)36 b(e)296 b(extracted)g(b)-36
b(y)296 b(the)g(data)g(p)36 b(erio)g(dically)4317 52547
y(transmitted)379 b(b)-36 b(y)380 b(eac)-36 b(h)379 b(MS)h(comprising)g
(the)f(receiv)-36 b(ed)380 b(signal)h(strength)e(from)h(nearb)-36
b(y)4317 54152 y(BTSs)542 b(during)g(a)h(call.)905 b(W)-108
b(e)542 b(also)i(in)-36 b(tro)36 b(duce)541 b(indicator)i(v)-72
b(ariable)543 b Fj(x)38873 54351 y Fe(j)39360 54152 y
Fq(,)570 b(whic)-36 b(h)542 b(is)g(1)h(if)4317 55757
y(BTS)527 b Fj(j)601 b Fq(is)527 b(op)36 b(erating)527
b(in)f(high-p)36 b(o)-36 b(w)g(er)526 b(mo)36 b(de)527
b(\(i.e.,)550 b(without)527 b Fk(BTS)550 b(p)-66 b(ower)550
b(savings)110 b Fq(\))4317 57362 y(and)560 b(0)g(otherwise.)959
b(Using)560 b(these)g(v)-72 b(ariables)561 b(and)f(parameters,)592
b(w)-36 b(e)560 b(can)g(form)-36 b(ulate)4317 58967 y(an)451
b(optimization)g(problem)f(to)h(minimize)g(the)f(total)h(p)36
b(o)-36 b(w)g(er)450 b(consumption)g(o)-36 b(v)g(er)451
b(the)4317 60572 y(net)-36 b(w)g(ork)434 b(as:)10899
64336 y Fk(minimize)18145 62675 y Fe(m)17601 63074 y
Fd(X)17744 65873 y Fe(j)51 b Fp(=1)19741 62064 y Fd(")20516
64336 y Fj(P)21354 64535 y Fp(1)22176 64336 y Fq(+)24156
62675 y Fe(n)23483 63074 y Fd(X)23681 65873 y Fe(i)p
Fp(=1)25755 63437 y Fj(w)26685 63636 y Fe(i;j)27754 63437
y Fq(\()p Fj(P)29098 63636 y Fp(2)29919 63437 y Ff(\000)295
b Fj(P)32085 63636 y Fp(1)32612 63437 y Fq(\))p 25755
64030 7362 54 v 28243 65247 a Fj(t)28713 65446 y Fe(max)33545
64336 y Ff(\000)h Fq(\(1)f Ff(\000)g Fj(x)38392 64535
y Fe(j)38879 64336 y Fq(\))p Fj(\015)40132 62064 y Fd(#)45827
64336 y Fq(\(1\))25578 70015 y(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 4317 7306 a Fq(sub)72 b(ject)434
b(to)f(the)g(follo)-36 b(wing)436 b(constrain)-36 b(ts:)19190
9517 y Fe(m)18646 9916 y Fd(X)18789 12715 y Fe(j)51 b
Fp(=1)20787 11178 y Fj(w)21717 11377 y Fe(i;j)23154 11178
y Fq(=)369 b(1)2601 b Ff(8)p Fj(i)16859 b Fq(\(2\))18425
14587 y Fj(w)19355 14786 y Fe(i;j)20792 14587 y Ff(\024)370
b Fj(c)22755 14786 y Fe(i;j)26424 14587 y Ff(8)p Fj(i;)221
b(j)17101 b Fq(\(3\))19320 16025 y Fe(n)18646 16424 y
Fd(X)18844 19223 y Fe(i)p Fp(=1)20787 17686 y Fj(w)21717
17885 y Fe(i;j)23080 17686 y Ff(\000)295 b Fj(\016)419
b Ff(\024)369 b Fj(M)139 b(x)28941 17885 y Fe(j)32030
17686 y Ff(8)p Fj(j)12521 b Fq(\(4\))20648 22637 y Fe(n)19974
23036 y Fd(X)20172 25835 y Fe(i)p Fp(=1)22114 24298 y
Fj(w)23044 24497 y Fe(i;j)24481 24298 y Ff(\024)369 b
Fj(t)26353 24497 y Fe(max)30872 24298 y Ff(8)p Fj(i)13773
b Fq(\(5\))19752 27534 y Fj(w)20682 27733 y Fe(i;j)21751
27534 y Fj(;)221 b(x)23072 27733 y Fe(j)23929 27534 y
Ff(2)368 b Fq(0)p Fj(;)221 b Fq(1)2603 b Ff(8)p Fj(i;)221
b(j)13857 b Fq(\(6\))6268 30468 y(W)-108 b(e)403 b(call)g(this)g
(optimization)g(problem,)408 b(the)403 b(t)-36 b(w)g(o-step)401
b(Lo)-36 b(w-Carb)403 b(problem.)568 b(The)4317 32073
y(ob)72 b(jectiv)-36 b(e)455 b(function)f(is)h(a)f(simple)g
(generalization)i(from)e(the)g(case)g(of)h(one)f(BTS.)h(The)4317
33678 y(\014rst)445 b(constrain)-36 b(t)446 b(ensures)f(that)h(no)g
(activ)-36 b(e)447 b(call)g(is)g(dropp)36 b(ed)444 b(just)i(to)h(sa)-36
b(v)g(e)446 b(on)g(p)36 b(o)-36 b(w)g(er.)4317 35283
y(The)457 b(second)f(constrain)-36 b(t)457 b(secures)f(the)g(uplink)h
(budget)f(b)-36 b(y)456 b(ensuring)h(that)f(no)g(call)i(is)4317
36888 y(routed)314 b(to)g(a)h(BTS)f(that)g(can)h(not)f(handle)f(it.)539
b(The)315 b(third)e(constrain)-36 b(t)314 b(pic)-36 b(ks)315
b(the)f(correct)4317 38493 y(v)-72 b(alue)638 b(for)g(the)f(decision)h
(v)-72 b(ariable)638 b Fj(x)23461 38692 y Fe(j)23948
38493 y Fq(.)1190 b(The)638 b(fourth)f(constrain)-36
b(t)637 b(is)h(the)f(capacit)-36 b(y)4317 40098 y(constrain)g(t)321
b(on)f(all)i(BTSs,)344 b(while)322 b(the)e(last)h(constrain)-36
b(t)321 b(is)g(the)g(binary)g(v)-72 b(alue)321 b(constrain)-36
b(t)4317 41703 y(on)434 b(the)f(decision)h(v)-72 b(ariables.)6268
43309 y(F)-108 b(or)525 b(the)g(three-step)f(BTS)h(p)36
b(o)-36 b(w)g(er-sa)g(ving)526 b(mo)36 b(del)525 b(of)h(Fig.)g(3,)549
b(the)525 b(optimization)4317 44914 y(problem)433 b(can)h(b)36
b(e)433 b(stated)g(as:)6414 48936 y Fk(minimize)13659
47275 y Fe(m)13116 47674 y Fd(X)13259 50473 y Fe(j)51
b Fp(=1)15256 46664 y Fd(")16031 48936 y Fj(P)16869 49135
y Fp(1)17691 48936 y Fq(+)19671 47275 y Fe(n)18997 47674
y Fd(X)19195 50473 y Fe(i)p Fp(=1)21270 48037 y Fj(w)22200
48236 y Fe(i;j)23269 48037 y Fq(\()p Fj(P)24613 48236
y Fp(2)25434 48037 y Ff(\000)295 b Fj(P)27600 48236 y
Fp(1)28126 48037 y Fq(\))p 21270 48630 7362 54 v 23758
49847 a Fj(t)24228 50046 y Fe(max)29060 48936 y Ff(\000)30521
48037 y Fq(\(1)h Ff(\000)f Fj(x)34040 48236 y Fe(j)34527
48037 y Fq(\))p Fj(\015)p 30521 48630 5259 54 v 32825
49847 a Fq(2)36208 48936 y Ff(\000)37669 48037 y Fq(\(1)g
Ff(\000)h Fj(y)41083 48236 y Fe(j)41570 48037 y Fq(\))p
Fj(\015)p 37669 48630 5154 54 v 39921 49847 a Fq(2)42955
46664 y Fd(#)45827 48936 y Fq(\(7\))25578 70015 y(7)p
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 4317 7306 a Fq(sub)72 b(ject)434
b(to)f(the)g(follo)-36 b(wing)436 b(constrain)-36 b(ts:)18952
9517 y Fe(m)18408 9916 y Fd(X)18551 12715 y Fe(j)51 b
Fp(=1)20549 11178 y Fj(w)21479 11377 y Fe(i;j)22916 11178
y Fq(=)369 b(1)2601 b Ff(8)p Fj(i)17097 b Fq(\(8\))18187
14587 y Fj(w)19117 14786 y Fe(i;j)20554 14587 y Ff(\024)370
b Fj(c)22517 14786 y Fe(i;j)26186 14587 y Ff(8)p Fj(i;)221
b(j)17339 b Fq(\(9\))19082 16025 y Fe(n)18408 16424 y
Fd(X)18606 19223 y Fe(i)p Fp(=1)20549 17686 y Fj(w)21479
17885 y Fe(i;j)22842 17686 y Ff(\000)295 b Fj(\016)24746
17885 y Fp(1)25641 17686 y Ff(\024)369 b Fj(M)139 b(x)29179
17885 y Fe(j)32268 17686 y Ff(8)p Fj(j)11632 b Fq(\(10\))19082
20313 y Fe(n)18408 20711 y Fd(X)18606 23511 y Fe(i)p
Fp(=1)20549 21973 y Fj(w)21479 22172 y Fe(i;j)22842 21973
y Ff(\000)295 b Fj(\016)24746 22172 y Fp(2)25641 21973
y Ff(\024)369 b Fj(M)139 b(y)29074 22172 y Fe(j)32163
21973 y Ff(8)p Fj(j)11737 b Fq(\(11\))19082 24600 y Fe(n)18408
24999 y Fd(X)18606 27798 y Fe(i)p Fp(=1)20549 26261 y
Fj(w)21479 26460 y Fe(i;j)22916 26261 y Ff(\024)369 b
Fj(t)24788 26460 y Fe(max)29306 26261 y Ff(8)p Fj(i)14688
b Fq(\(12\))18187 29497 y Fj(w)19117 29696 y Fe(i;j)20185
29497 y Fj(;)221 b(x)21506 29696 y Fe(j)21994 29497 y
Fj(;)g(y)23210 29696 y Fe(j)24067 29497 y Ff(2)368 b
Fq(0)p Fj(;)221 b Fq(1)2603 b Ff(8)p Fj(i;)221 b(j)13068
b Fq(\(13\))6268 32431 y(In)352 b(the)f(ab)36 b(o)-36
b(v)g(e)352 b(statemen)-36 b(t,)368 b(w)-36 b(e'v)g(e)353
b(added)e(an)h(indicator)g(v)-72 b(ariable)352 b Fj(y)39645
32630 y Fe(j)40133 32431 y Fq(,)368 b(whic)-36 b(h)352
b(is)g(1)g(if)4317 34036 y(BTS)324 b Fj(j)399 b Fq(is)324
b(in)g(medium-p)36 b(o)-36 b(w)g(er)323 b(mo)36 b(de,)346
b(0)324 b(otherwise.)542 b(The)324 b(fourth)g(constrain)-36
b(ts)323 b(ensures)4317 35641 y(that)410 b Fj(y)7746
35840 y Fe(j)8644 35641 y Fq(tak)-36 b(es)411 b(on)f(the)g(prop)36
b(er)410 b(v)-72 b(alue)411 b(dep)36 b(ending)409 b(on)h(the)g(curren)
-36 b(t)409 b(tra\016c)i(v)-36 b(olume)410 b(at)4317
37246 y(BTS)374 b Fj(j)75 b Fq(.)558 b(W)-108 b(e)374
b(call)h(this)e(optimization)i(problem)e(the)h(three-step)e(Lo)-36
b(w-Carb)374 b(problem.)4317 40180 y Fk(3.3.)664 b(Heuristic)463
b(solutions)i(to)g(L)-66 b(ow-Carb)6268 42117 y Fq(Both)558
b(of)h(the)f(ab)36 b(o)-36 b(v)g(e)558 b(optimization)h(problems)f(are)
g(Binary)h(In)-36 b(teger)558 b(Programs)4317 43722 y(\(BIP\),)395
b(whic)-36 b(h)394 b(is)h(NP-Hard.)565 b(It)394 b(is)h(in)-36
b(tractable)395 b(to)f(solv)-36 b(e)396 b(it)e(for)i(an)e(op)36
b(erator's)395 b(en)-36 b(tire)4317 45327 y(net)g(w)g(ork,)336
b(but)311 b(solving)h(it)g(for)g(a)g(subset)e(of)i(the)f(net)-36
b(w)g(ork)312 b(will)g(pro)-36 b(vide)312 b(some)f(estimates)4317
46932 y(of)546 b(the)e(amoun)-36 b(t)544 b(of)h(energy)g(sa)-36
b(vings)546 b(p)36 b(ossible)545 b(using)g(Lo)-36 b(w-Carb.)912
b(Deplo)-36 b(ymen)g(t)544 b(to)4317 48537 y(large)613
b(op)36 b(erator)612 b(net)-36 b(w)g(orks)612 b(w)-36
b(ould)611 b(require)h(appro)-36 b(ximation)613 b(algorithms.)1113
b(In)612 b(this)4317 50142 y(pap)36 b(er,)645 b(w)-36
b(e)604 b(presen)-36 b(t)602 b(t)-36 b(w)g(o)603 b(heuristics)g(to)g
(solv)-36 b(e)604 b(the)f(problem)g(appro)-36 b(ximately)604
b(and)4317 51747 y(compare)434 b(the)f(results)g(with)h(the)f(optimal)h
(solution.)4317 54681 y Fk(3.3.1.)663 b(Heuristic)464
b(1)6268 56397 y Fq(W)-108 b(e)443 b(describ)36 b(e)442
b(here,)j(the)e(\014rst)f(heuristic)g(for)i(the)e(t)-36
b(w)g(o-step)442 b(Lo)-36 b(w-Carb)443 b(problem.)4317
58002 y(Our)342 b(\014rst)h(heuristic)g(divides)g(the)g(set)g(of)h
(BTSs)g Fj(B)67 b Fq(,)361 b(in)-36 b(to)343 b(t)-36
b(w)g(o)344 b(disjoin)-36 b(t)343 b(subsets)g Fj(B)44524
58201 y Fp(1)45393 58002 y Fq(and)4317 59607 y Fj(B)5305
59806 y Fp(2)5831 59607 y Fq(.)554 b(Subset)361 b Fj(B)11861
59806 y Fp(1)12748 59607 y Fq(consists)h(of)g(those)f(BTSs)h(that)f(ha)
-36 b(v)g(e)361 b(tra\016c)h(ab)36 b(o)-36 b(v)g(e)362
b(threshold)f Fj(del)29 b(ta)p Fq(.)4317 61212 y(Subset)565
b Fj(B)9636 61411 y Fp(2)10728 61212 y Fq(consists)h(of)h(all)g(other)f
(BTSs.)976 b(Our)566 b(heuristic)f(sh)-36 b(u\017es)566
b(the)f(mem)-36 b(b)36 b(ers)4317 62817 y(of)582 b Fj(B)6934
63016 y Fp(1)8041 62817 y Fq(and)e(iterates)h(o)-36 b(v)g(er)582
b(the)e(set.)1021 b(In)580 b(ev)-36 b(ery)582 b(iteration,)619
b(our)580 b(heuristic)h(lo)36 b(oks)582 b(at)4317 64422
y(the)474 b(curren)-36 b(t)473 b(tra\016c)h(load)g(at)h(a)f(particular)
g(BTS.)h(Let)f(this)g(tra\016c)g(load)h(b)36 b(e)474
b Fj(h)p Fq(.)700 b(The)4317 66027 y(heuristic)481 b(declares)h(that)f
(it)g(m)-36 b(ust)481 b(hand-o\013)f Fj(h)p Fq(-)p Fj(del)29
b(ta)480 b Fq(calls)j(a)-36 b(w)g(a)g(y)482 b(from)g(the)f(curren)-36
b(t)25578 70015 y(8)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 4317 7306 a Fq(BTS)545 b(to)g(it's)g(neigh)-36
b(b)36 b(ors)545 b(in)f(the)h(subset)f Fj(B)26472 7505
y Fp(2)27542 7306 y Fq(while)i(ensuring)e(that)g(no)h(BTS)g(in)g
Fj(B)46963 7505 y Fp(2)4317 8911 y Fq(lea)-36 b(v)g(es)498
b(it's)f(subset)g(as)g(a)g(result)g(of)g(the)g(hand-o\013.)767
b(This)497 b(heuristic)g(can)f(b)36 b(e)497 b(in)-36
b(v)g(ok)g(ed)4317 10516 y(m)g(ultiple)407 b(times,)413
b(using)407 b(a)h(di\013eren)-36 b(t)406 b(sh)-36 b(u\017ed)406
b(order)h(of)h(BTSs)g(in)f Fj(B)38262 10715 y Fp(2)39195
10516 y Fq(to)h(impro)-36 b(v)g(e)407 b(the)4317 12121
y(heuristic's)332 b(p)36 b(erformance.)545 b(A)-36 b(t)332
b(the)g(end)g(of)h(this)f(pro)36 b(cess,)353 b(mem)-36
b(b)36 b(ers)332 b(of)h Fj(B)40951 12320 y Fp(2)41809
12121 y Fq(are)g(placed)4317 13726 y(in)434 b(lo)-36
b(w-p)36 b(o)-36 b(w)g(er)434 b(mo)36 b(de.)6268 15331
y(F)-108 b(or)580 b(the)g(three-step)f(Lo)-36 b(w-Carb)581
b(problem,)617 b(mem)-36 b(b)36 b(ers)580 b(of)i Fj(B)37421
15530 y Fp(1)38527 15331 y Fq(are)f(those)g(BTSs)4317
16936 y(that)515 b(ha)-36 b(v)g(e)516 b(tra\016c)f(ab)36
b(o)-36 b(v)g(e)517 b(threshold)d Fj(del)29 b(ta)26550
17135 y Fp(2)27076 16936 y Fq(,)536 b(while)517 b Fj(B)32440
17135 y Fp(2)33481 16936 y Fq(con)-36 b(tains)516 b(all)g(other)f
(BTSs.)4317 18542 y(W)-108 b(e)489 b(sh)-36 b(u\017e)488
b(some)i(calls)g(from)f(BTSs)g(selected)g(in)g(a)h(random)e(order)h
(attempting)f(to)4317 20147 y(reduce)344 b(the)g(cardinalit)-36
b(y)345 b(of)g(set)g Fj(B)21234 20346 y Fp(1)21760 20147
y Fq(.)548 b(Once)344 b(w)-36 b(e)345 b(are)g(done)f(iterating)h(o)-36
b(v)g(er)345 b(all)g(mem)-36 b(b)36 b(ers)4317 21752
y(of)473 b Fj(B)6825 21951 y Fp(1)7351 21752 y Fq(,)483
b(w)-36 b(e)473 b(re-initialize)g Fj(B)17968 21951 y
Fp(1)18966 21752 y Fq(to)g(con)-36 b(tain)472 b(BTSs)h(that)f(ha)-36
b(v)g(e)473 b(tra\016c)f(ab)36 b(o)-36 b(v)g(e)473 b(threshold)4317
23357 y Fj(del)29 b(ta)7165 23556 y Fp(1)8193 23357 y
Fq(and)502 b Fj(B)11779 23556 y Fp(2)12807 23357 y Fq(to)h(con)-36
b(tain)502 b(all)h(other)f(BTSs)g(and)g(rep)36 b(eat)502
b(the)g(same)h(call)g(hand-o\013)4317 24962 y(pro)36
b(cess)338 b(as)g(describ)36 b(ed)336 b(earlier.)547
b(In)338 b(the)e(end,)357 b(those)337 b(BTSs)h(that)f(ha)-36
b(v)g(e)337 b(tra\016c)h(ab)36 b(o)-36 b(v)g(e)338 b
Fj(\016)46963 25161 y Fp(1)4317 26567 y Fq(but)451 b(b)36
b(elo)-36 b(w)453 b Fj(\016)11000 26766 y Fp(2)11978
26567 y Fq(are)g(placed)f(in)g(the)g(medium-p)36 b(o)-36
b(w)g(er)451 b(mo)36 b(de)452 b(while)h(those)f(with)h(tra\016c)4317
28172 y(b)36 b(elo)-36 b(w)477 b(the)g Fj(\016)10905
28371 y Fp(1)11907 28172 y Fq(threshold)f(are)h(palced)g(in)f(the)g(lo)
-36 b(w-p)36 b(o)-36 b(w)g(er)477 b(mo)36 b(de.)708 b(Once)476
b(again,)489 b(this)4317 29777 y(heuristic)399 b(can)g(b)36
b(e)399 b(in)-36 b(v)g(ok)g(ed)399 b(m)-36 b(ultiple)399
b(times)g(to)h(impro)-36 b(v)g(e)399 b(the)f(probabilit)-36
b(y)400 b(of)g(\014nding)4317 31382 y(a)434 b(near-optimal)f(solution.)
4317 34316 y Fk(3.3.2.)663 b(Heuristic)464 b(2)6268 36032
y Fq(W)-108 b(e)341 b(\014rst)g(describ)36 b(e)341 b(the)f(second)h
(heuristic)g(for)h(the)e(t)-36 b(w)g(o-step)341 b(Lo)-36
b(w-Carb)341 b(problem.)4317 37637 y(In)503 b(con)-36
b(trast)504 b(to)f(the)g(\014rst)g(heuristic,)521 b(the)503
b(second)g(one)h(iterates)g(o)-36 b(v)g(er)503 b(calls)i(\014rst.)788
b(It)4317 39242 y(\014rst)386 b(assigns)i(all)g(calls)g(that)e(only)i
(ha)-36 b(v)g(e)387 b(one)g(candidate)f(BTS)h(to)g(the)g(only)g(BTS)g
(that)4317 40847 y(can)434 b(handle)f(them.)4317 44444
y Fl(4.)748 b(Exp)42 b(erimen)-42 b(tal)499 b(Setup)6268
47046 y Fq(Our)526 b(dataset)h(is)g(obtained)g(from)g(a)h(cluster)e(of)
i(26)g(BTSs)f(op)36 b(erated)527 b(b)-36 b(y)526 b(a)i(large)4317
48651 y(net)-36 b(w)g(ork)498 b(op)36 b(erator)497 b(with)h(more)f
(than)g(7000)h(sites.)770 b(These)498 b(sites)f(are)h(spread)f(o)-36
b(v)g(er)497 b(a)4317 50256 y(31)p Fj(:)p Fq(25)360 b
Fj(k)45 b(m)9497 49774 y Fp(2)10380 50256 y Fq(urban)356
b(terrain.)553 b(W)-108 b(e)358 b(obtained)f(eac)-36
b(h)358 b(site's)g(co)-36 b(v)g(erage)359 b(prediction)f(using)f(a)4317
51861 y(to)36 b(ol)294 b(p)36 b(opular)292 b(amongst)h(the)g(op)36
b(erators)293 b(called)g(F)-108 b(orsk)293 b(A)-36 b(toll.)532
b(With)293 b(this)g(information,)4317 53466 y(alongwith)376
b(a)f(caller's)h(lo)36 b(cation,)388 b(w)-36 b(e)375
b(can)g(determine)f(the)g(candidate)h(set)g(of)g(BTSs)g(for)4317
55071 y(the)530 b(corresp)36 b(onding)531 b(call)h(\(the)e
Fj(c)20990 54442 y Fe(j)20990 55412 y(i)22007 55071 y
Fq(parameters\).)870 b(Note)531 b(that)f(in)h(this)f(w)-36
b(ork,)557 b(w)-36 b(e)531 b(do)4317 56676 y(not)410
b(incorp)36 b(orate)410 b(user)g(mobilit)-36 b(y)410
b(in)-36 b(to)410 b(our)g(mo)36 b(del,)415 b(since)410
b(w)-36 b(e)411 b(are)f(only)h(in)-36 b(terested)409
b(in)4317 58281 y(instan)-36 b(taneous)433 b(optimization.)6268
59887 y(Also)425 b(a)-36 b(v)-72 b(ailable)426 b(to)e(us)g(are)h(the)f
(hourly)g(cum)-36 b(ulativ)g(e)425 b(tra\016c,)h(in)e(Erlang,)j(for)e
(eac)-36 b(h)4317 61492 y(of)561 b(the)f(sites,)592 b(spanning)559
b(t)-36 b(w)g(o)561 b(consecutiv)-36 b(e)560 b(w)-36
b(eekda)g(ys.)959 b(The)560 b(tra\016c)g(remained)g(re-)4317
63097 y(mark)-72 b(ably)558 b(similar)f(across)g(b)36
b(oth)556 b(da)-36 b(ys)557 b(for)g(eac)-36 b(h)556 b(site.)947
b(W)-108 b(e)557 b(ha)-36 b(v)g(e,)587 b(therefore,)h(only)4317
64702 y(used)433 b(one)h(da)-36 b(y's)434 b(tra\016c)f(data)h(in)f(our)
h(exp)36 b(erimen)-36 b(ts.)25578 70015 y(9)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 6268 7306 a Fq(Using)469 b(the)f(ab)36
b(o)-36 b(v)g(e)469 b(datasets,)478 b(w)-36 b(e)469 b(conducted)e(a)i
(set)f(of)h(exp)36 b(erimen)-36 b(ts)469 b(mimic)-36
b(king)4317 8911 y(a)542 b(24-hour)f(op)36 b(eration)542
b(of)g(a)g(subset)e(of)j(a)e(cellular)i(net)-36 b(w)g(ork.)902
b(Eac)-36 b(h)541 b(exp)36 b(erimen)-36 b(t)541 b(is)4317
10516 y(a)497 b(discrete)f(ev)-36 b(en)g(t)496 b(sim)-36
b(ulation)496 b(of)i(the)d(arriv)-72 b(al)498 b(and)d(placemen)-36
b(t)496 b(of)h(calls.)768 b(Since)496 b(our)4317 12121
y(dataset)403 b(do)36 b(es)403 b(not)f(include)g(the)g(arriv)-72
b(al)404 b(times)f(and)f(duration)g(of)h(calls,)411 b(w)-36
b(e)402 b(syn)-36 b(theti-)4317 13726 y(cally)370 b(generated)e(this)h
(information)g(using)f(the)g(assumption)h(of)g(P)-36
b(oisson)369 b(call)g(arriv)-72 b(als)4317 15331 y(and)433
b(exp)36 b(onen)-36 b(tially)435 b(distributed)d(call)j(duration)e
(with)g(a)h(mean)f(of)i(180)f(seconds)g([9].)6268 16936
y(F)-108 b(or)420 b(ev)-36 b(ery)422 b(hour,)g(the)e(sim)-36
b(ulator)421 b(determines)f(the)g(P)-36 b(oisson)421
b(call)h(arriv)-72 b(al)421 b(rate)g(for)4317 18542 y(eac)-36
b(h)524 b(BTS,)h(using)f(Little's)h(La)-36 b(w)524 b(and)g(the)g(BTSs)g
(tra\016c)g(in)-36 b(tensit)g(y)524 b(for)h(that)f(hour.)4317
20147 y(Using)344 b(the)f(resulting)h(P)-36 b(oisson)344
b(pro)36 b(cess,)362 b(calls)344 b(are)g(generated)f(suc)-36
b(h)343 b(that)g(it)h(is)g(equally)4317 21752 y(lik)-36
b(ely)435 b(for)g(a)e(call)i(to)f(b)36 b(e)433 b(an)-36
b(ywhere)434 b(in)f(the)g(serving)h(BTSs)g(co)-36 b(v)g(erage)435
b(area.)6268 23357 y(Our)g(sim)-36 b(ulator)436 b(trac)-36
b(ks)437 b(the)e(call)i(v)-36 b(olume)437 b(at)f(ev)-36
b(ery)437 b(BTS)f(on)g(a)g(min)-36 b(ute's)435 b(gran)-36
b(u-)4317 24962 y(larit)g(y)-108 b(.)695 b(This)473 b(enables)f(us)g
(to)g(calculate)h(the)f(p)36 b(o)-36 b(w)g(er)472 b(consumption)g(lev)
-36 b(el)473 b(\(in)f(W)-108 b(atts\))4317 26567 y(of)535
b(the)e(BTS)g(during)g(eac)-36 b(h)534 b(min)-36 b(ute.)878
b(Accum)-36 b(ulating)533 b(these)h(n)-36 b(um)g(b)36
b(ers)532 b(o)-36 b(v)g(er)534 b(the)f(24)4317 28172
y(hour)521 b(p)36 b(erio)g(d)521 b(leads)g(to)h(the)e(daily)i(amoun)-36
b(t)521 b(of)h(energy)f(consumed)g(\(in)f(kWh\))i(if)g(no)4317
29777 y(optimization)397 b(is)f(used)f(in)h(the)f(net)-36
b(w)g(ork.)566 b(Our)395 b(sim)-36 b(ulator)396 b(also)h(monitors)f
(eac)-36 b(h)396 b(BTSs)4317 31382 y(call)369 b(v)-36
b(olume)369 b(ev)-36 b(ery)369 b(min)-36 b(ute)367 b(and)h(places)h
(the)f(ones)g(with)g(su\016cien)-36 b(tly)368 b(lo)-36
b(w)370 b(tra\016c)e(in)-36 b(to)4317 32987 y(p)36 b(o)-36
b(w)g(er-sa)g(ving)416 b(mo)36 b(de.)572 b(This)416 b(enables)f(us)g
(to)h(calculate)g(the)f(p)36 b(ossible)416 b(energy)g(sa)-36
b(vings)4317 34593 y(using)603 b(BTS)f(p)36 b(o)-36 b(w)g(er-sa)g(ving)
603 b(feature.)1086 b(In)602 b(addition,)645 b(our)602
b(sim)-36 b(ulator)603 b(also)h(p)36 b(erio)g(di-)4317
36198 y(cally)369 b(determines)d(the)h(instan)-36 b(taneous)366
b(optimal)i(call)g(placemen)-36 b(t)367 b(con\014guration)g(that)4317
37803 y(minimizes)544 b(the)f(p)36 b(o)-36 b(w)g(er)543
b(consumption)g(lev)-36 b(el)544 b(b)-36 b(y)543 b(handing-o\013)g
(some)g(calls,)572 b(thereb)-36 b(y)4317 39408 y(placing)397
b(a)g(maximal)h(n)-36 b(um)g(b)36 b(er)395 b(of)j(BTSs)e(in)h(p)36
b(o)-36 b(w)g(er-sa)g(ving)397 b(mo)36 b(de.)566 b(This)397
b(allo)-36 b(ws)398 b(us)e(to)4317 41013 y(determine)405
b(the)h(energy)h(sa)-36 b(vings)407 b(p)36 b(ossible)406
b(b)-36 b(y)406 b(com)-36 b(bining)406 b(call)h(hand-o\013s)e(with)i
(BTS)4317 42618 y(p)36 b(o)-36 b(w)g(er-sa)g(ving.)6268
44223 y(The)327 b(call)i(placemen)-36 b(t)326 b(re-optimization)i(ma)
-36 b(y)327 b(b)36 b(e)327 b(done)g(at)g(v)-72 b(arious)328
b(frequencies.)544 b(A)4317 45828 y(v)-36 b(ery)368 b(aggressiv)-36
b(e)368 b(re-optimization)f(regime)g(w)-36 b(ould)367
b(k)-36 b(eep)367 b(the)f(net)-36 b(w)g(ork)367 b(in)f(an)h(optimal)
4317 47433 y(state)552 b(more)g(often)g(than)f(a)h(conserv)-72
b(ativ)-36 b(e)552 b(one,)582 b(thereb)-36 b(y)551 b(enabling)g
(greater)h(energy)4317 49038 y(sa)-36 b(vings.)629 b(In)450
b(order)f(to)h(study)g(the)f(scaling)i(of)g(energy)f(sa)-36
b(ving)451 b(with)f(re-optimization)4317 50643 y(frequency)-108
b(,)429 b(w)-36 b(e)426 b(exp)36 b(erimen)-36 b(ted)426
b(with)h(a)g(range)g(of)g(in)-36 b(terv)-72 b(als)427
b(b)36 b(et)-36 b(w)g(een)426 b(successiv)-36 b(e)427
b(op-)4317 52249 y(timizations,)557 b(ranging)531 b(from)h(a)g(min)-36
b(ute)530 b(to)i(an)f(hour.)871 b(F)-108 b(or)530 b(a)i(deplo)-36
b(ymen)g(t,)555 b(the)531 b(re-)4317 53854 y(optimization)293
b(frequency)f(that)g(can)g(b)36 b(e)292 b(used)f(w)-36
b(ould)292 b(dep)36 b(end)291 b(on)h(the)f(costs)i(asso)36
b(ciated)4317 55459 y(with)434 b(eac)-36 b(h)433 b(re-optimization.)579
b(Let)433 b(us)g(no)-36 b(w)434 b(consider)f(suc)-36
b(h)433 b(costs.)6268 57064 y(First)414 b(and)f(foremost,)418
b(a)d(computational)e(cost)h(is)g(incurred)f(with)h(eac)-36
b(h)413 b(optimiza-)4317 58669 y(tion.)780 b(In)501 b(our)f(case,)519
b(an)501 b(optimization)g(run)f(to)h(determine)f(the)g(optimal)h(state)
g(o)-36 b(v)g(er)4317 60274 y(26)537 b(BTSs)f(required)f(an)h(a)-36
b(v)g(erage)537 b(running)e(time)h(of)g(ab)36 b(out)536
b(50)g(seconds)g(on)g(a)g(Core)4317 61879 y(i3)502 b(laptop)e(with)h(4)
g(GB)f(of)i(RAM.)f(An)f(optimization)i(requiring)f(50)g(seconds)g(w)-36
b(ould)4317 63484 y(not)458 b(b)36 b(e)458 b(practical)h(to)f(use)g(ev)
-36 b(ery)459 b(min)-36 b(ute)458 b(but)f(ma)-36 b(y)459
b(b)36 b(e)458 b(\014ne)f(if)i(used)f(less)g(often.)653
b(F)-108 b(or)4317 65089 y(a)535 b(practical)g(deplo)-36
b(ymen)g(t)534 b(the)g(computational)g(time)h(can)f(b)36
b(e)534 b(reduced)g(b)-36 b(y)534 b(using)g(a)4317 66694
y(com)-36 b(bination)503 b(of)g(a)g(more)g(p)36 b(o)-36
b(w)g(erful)503 b(mac)-36 b(hine,)520 b(distributed)502
b(optimization)h(and)f(ap-)25253 70015 y(10)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 4317 7306 a Fq(pro)-36 b(ximation)434
b(algorithms.)6268 8911 y(In)372 b(addition)h(to)f(the)g(computational)
h(o)-36 b(v)g(erhead,)385 b(for)373 b(ev)-36 b(ery)373
b(unit)e(of)j(energy)e(sa)-36 b(v)g(ed)4317 10516 y(some)354
b(extra)f(energy)h(ma)-36 b(y)354 b(b)36 b(e)353 b(consumed)f(in)h(the)
g(net)-36 b(w)g(ork)353 b(to)g(p)36 b(erform)354 b(call)g(hand-o\013s)
4317 12121 y(or)523 b(en)-36 b(tering)522 b(and)g(lea)-36
b(ving)523 b(BTS)g(p)36 b(o)-36 b(w)g(er-sa)g(ving)523
b(mo)36 b(de.)845 b(Call)524 b(hand-o\013s)d(and)h(TRX)4317
13726 y(\(de\)activ)-72 b(ation)576 b(in)-36 b(v)g(olv)g(e)577
b(signaling)g(b)36 b(et)-36 b(w)g(een)576 b(a)g(Base)g(Station)g(Con)
-36 b(troller)577 b(\(BSC\),)4317 15331 y(BTSs)507 b(and)g(MSs.)798
b(The)507 b(additional)g(energy)g(incurred)f(th)-36 b(us,)525
b(should)506 b(b)36 b(e)507 b(small,)526 b(b)36 b(e-)4317
16936 y(cause)470 b(it)g(has)g(b)36 b(een)470 b(observ)-36
b(ed)470 b(that)f(v)-72 b(ariation)471 b(in)f(p)36 b(o)-36
b(w)g(er)470 b(consumption)g(of)g(net)-36 b(w)g(ork)4317
18542 y(equipmen)g(t)347 b(with)g(c)-36 b(hanges)347
b(in)g(tra\016c)g(v)-36 b(olume)348 b(\(data)f(or)g(con)-36
b(trol\))347 b(is)h(quite)f(small)h([10)q(].)4317 20147
y(As)478 b(far)g(as)h(increased)e(p)36 b(o)-36 b(w)g(er)478
b(consumption)f(on)h(MSs)f(due)g(to)h(a)g(greater)h(n)-36
b(um)g(b)36 b(er)476 b(of)4317 21752 y(call)512 b(hand-o\013s)e(is)i
(concerned,)530 b(w)-36 b(e)511 b(opine)g(that)g(it)g(ma)-36
b(y)512 b(b)36 b(e)511 b(negligible)h(b)36 b(ecause)511
b(the)4317 23357 y(MSs)433 b(energy)h(consumption)f(is)h(far)g(out)-36
b(w)g(eighed)433 b(b)-36 b(y)434 b(that)f(of)h(BTSs.)4317
26183 y Fk(4.1.)664 b(Site)463 b(Char)-66 b(acteristics)6268
28013 y Fq(All)518 b(sites)f(in)f(our)h(dataset)g(had)f(three)g
(sectors,)539 b(eac)-36 b(h)516 b(equipp)36 b(ed)517
b(with)f(6)i(TRXs,)4317 29619 y(for)354 b(a)g(maxim)-36
b(um)354 b(of)g(132)h(sim)-36 b(ultaneous)353 b(v)-36
b(oice)355 b(calls)30261 29137 y Fp(1)30788 29619 y Fq(.)551
b(The)354 b(GSM)e(standard)h(includes)4317 31224 y(a)509
b(pro)-36 b(vision)509 b(for)g(half-rate)g(calls,)528
b(whic)-36 b(h)508 b(enables)h(handling)f(greater)g(tra\016c)h(at)f
(the)4317 32829 y(exp)36 b(ense)589 b(of)g(reduced)f(v)-36
b(oice)589 b(qualit)-36 b(y)590 b(b)-36 b(y)589 b(allo)-36
b(wing)590 b(a)f(single)g(v)-36 b(oice)590 b(c)-36 b(hannel)588
b(to)h(b)36 b(e)4317 34434 y(shared)339 b(amongst)h(t)-36
b(w)g(o)340 b(calls,)359 b(eac)-36 b(h)340 b(using)f(a)h(half-rate)f
(co)36 b(dec.)548 b(In)339 b(this)g(pap)36 b(er,)358
b(w)-36 b(e)340 b(only)4317 36039 y(sh)-36 b(u\017e)353
b(full-rate)h(calls)h(around,)369 b(whic)-36 b(h)354
b(ma)-36 b(y)354 b(b)36 b(e,)370 b(in)354 b(realit)-36
b(y)-108 b(,)371 b(t)-36 b(w)g(o)354 b(half-rate)g(calls.)553
b(W)-108 b(e)4317 37644 y(do)434 b(not)f(foresee)h(an)-36
b(y)434 b(signi\014can)-36 b(t)433 b(error)h(arising)g(from)g(using)g
(this)f(con)-36 b(v)g(en)g(tion.)6268 39249 y(W)-108
b(e)590 b(consider)f(a)h(scaling)g(do)-36 b(wn)589 b(from)h(a)g(\\6)402
b(+)f(6)g(+)g(6")590 b(site)g(to)g(a)f(\\2)402 b(+)f(2)h(+)f(2")4317
40854 y(site,)521 b(whic)-36 b(h)502 b(means)g(that)h
Fj(\016)552 b Fq(should)502 b(b)36 b(e)503 b(strictly)g(less)g(than)f
Fj(t)35610 41053 y Fe(max)37526 40854 y Fj(=)p Fq(3)i(to)e(a)-36
b(v)g(oid)504 b(quic)-36 b(k)4317 42459 y(oscillations)385
b(in)-36 b(to)383 b(and)f(out)h(of)h(BTS)f(p)36 b(o)-36
b(w)g(er-sa)g(ving)383 b(mo)36 b(de)383 b(due)g(to)g(short-term)f
(tra\016c)4317 44064 y(v)-72 b(ariations.)561 b(W)-108
b(e)378 b(ha)-36 b(v)g(e)378 b(arbitrarily)h(set)f Fj(\016)428
b Fq(equal)378 b(to)g Ff(d)p Fj(t)31044 44263 y Fe(max)32962
44064 y Fj(=)p Fq(3)p Ff(e)182 b(\000)g Fq(5,)390 b(b)36
b(ecause)378 b(5)g(seemed)4317 45669 y(to)394 b(b)36
b(e)393 b(a)g(go)36 b(o)g(d)394 b(enough)f(n)-36 b(um)g(b)36
b(er)392 b(compared)h(to)g(a)h(sector's)g(o)-36 b(v)g(erall)394
b(capacit)-36 b(y)394 b(and)f(the)4317 47275 y(t)-36
b(ypical)434 b(utilization)h(of)f(a)g(site)g(in)f(our)g(datasets.)6268
48880 y(The)407 b(BTS)f(p)36 b(o)-36 b(w)g(er)407 b(consumption)e(mo)36
b(del)407 b(parameters)g(ma)-36 b(y)407 b(v)-72 b(ary)407
b(from)g(one)g(BTS)4317 50485 y(mo)36 b(del)411 b(to)f(another.)570
b(In)410 b(this)g(pap)36 b(er,)414 b(w)-36 b(e)411 b(use)e(three)h
(di\013eren)-36 b(t)409 b(sets)h(of)h(mo)36 b(del)410
b(param-)4317 52090 y(eters)534 b(as)f(listed)h(in)g(table)f(1.)879
b(W)-108 b(e)534 b(no)-36 b(w)533 b(describ)36 b(e)533
b(the)h(sources)f(and)g(metho)36 b(ds)533 b(from)4317
53695 y(whic)-36 b(h)433 b(w)-36 b(e)434 b(obtained)g(these)f(mo)36
b(dels.)4317 56521 y Fk(4.1.1.)663 b(Mo)-66 b(del)465
b(1)6268 58237 y Fq(F)-108 b(or)560 b(the)f(\014rst)g(mo)36
b(del,)593 b(w)-36 b(e)560 b(ha)-36 b(v)g(e)560 b(used)f(1)p
Fj(:)p Fq(5)p Fj(k)45 b(W)742 b Fq(as)560 b(the)g(maxim)-36
b(um)560 b(p)36 b(o)-36 b(w)g(er)560 b(con-)4317 59842
y(sumption)397 b([11)q(],)406 b(a)398 b(20)p Fj(W)579
b Fq(p)36 b(er)397 b(TRX)i(sa)-36 b(ving)398 b(when)g(scaling)h(the)e
(BTS)h(do)-36 b(wn)397 b([6)q(])h(and)f(a)4317 61447
y(5\045)434 b(swing)g(in)g(p)36 b(o)-36 b(w)g(er)433
b(consumption)g(b)36 b(et)-36 b(w)g(een)433 b(no-load)g(and)h
(full-load)g([3].)p 4317 64148 17269 45 v 5813 64964
a Fc(1)6310 65366 y Fh(Eac)-31 b(h)303 b(TRX's)f(frequency)h(is)f
(shared)f(in)i(time-domain)i(b)-31 b(y)303 b(8)f(calls)h(for)g(a)f
(total)j(of)d(3)112 b Fb(\002)g Fh(6)g Fb(\002)g Fh(8)310
b(=)d(144)4317 66694 y(c)-31 b(hannels.)493 b(F)-92 b(our)369
b(c)-31 b(hannels)369 b(in)h(eac)-31 b(h)370 b(sector)f(w)-31
b(ere)369 b(reserv)-31 b(ed)368 b(for)h(con)-31 b(trol)371
b(and)e(broadcast)i(purp)31 b(oses.)25253 70015 y Fq(11)p
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 13356 6022 25093 45 v 13334 7627
45 1606 v 14021 7145 a Fq(P)-36 b(arameter)p 20570 7627
V 20570 7627 V 8003 w(V)-108 b(alue)p 38427 7627 V 20592
7671 17858 45 v 13334 9232 45 1606 v 20570 9232 V 21256
8751 a(Mo)36 b(del)434 b(1)p 26522 9232 V 1328 w(Mo)36
b(del)434 b(2)p 32475 9232 V 1329 w(Mo)36 b(del)434 b(3)p
38427 9232 V 13356 9276 25093 45 v 13334 10881 45 1606
v 16292 10400 a Fj(P)17130 10599 y Fp(1)p 20570 10881
V 22267 10400 a Fq(1425)p 26522 10881 V 2847 w(2401.8)p
32475 10881 V 2342 w(2341.5)p 38427 10881 V 13356 10926
25093 45 v 13334 12531 45 1606 v 16292 12049 a Fj(P)17130
12248 y Fp(2)p 20570 12531 V 22267 12049 a Fq(1500)p
26522 12531 V 2847 w(3887.5)p 32475 12531 V 2342 w(2973.9)p
38427 12531 V 13356 12575 25093 45 v 13334 14180 45 1606
v 16601 13699 a Fj(\015)p 20570 14180 V 5642 w Fq(20)p
26522 14180 V 4652 w(50)p 32475 14180 V 4327 w(100)p
38427 14180 V 13356 14224 25093 45 v 16664 16211 a Fh(T)-92
b(able)370 b(1:)493 b(BTS)370 b(mo)31 b(del)370 b(parameter)g(v)-61
b(alues)4317 19968 y Fk(4.1.2.)663 b(Mo)-66 b(del)465
b(2)6268 21684 y Fq(Lorincz)571 b(et.)989 b(al)571 b(rep)36
b(orted)570 b(the)g(single)i(sector)e(DC)i(p)36 b(o)-36
b(w)g(er)570 b(consumption)g(for)h(a)4317 23289 y(GSM)434
b(900)j(BTS)e([5)q(].)584 b(The)435 b(sector)h(under)e(consideration)h
(had)g(7)g(TRXs,)i(as)f(opp)36 b(osed)4317 24894 y(to)531
b(6)g(TRXs)g(in)g(our)f(case.)871 b(T)-108 b(o)531 b(appro)-36
b(ximate)531 b(the)f(DC)h(p)36 b(o)-36 b(w)g(er)531 b(consumption)f
(for)h(a)4317 26499 y(site)363 b(with)f(3)h(sectors,)377
b(eac)-36 b(h)363 b(with)f(6)h(TRXs,)377 b(w)-36 b(e)363
b(scaled)g(the)f(p)36 b(o)-36 b(w)g(er)362 b(consumption)g(b)-36
b(y)362 b(a)4317 28104 y(factor)348 b(of)g(3)119 b Ff(\002)g
Fq(6)p Fj(=)p Fq(7.)550 b(The)347 b(DC)h(p)36 b(o)-36
b(w)g(er)347 b(consumption)f(do)36 b(es)347 b(not)g(include)g(the)f(A)
-36 b(C)348 b(p)36 b(o)-36 b(w)g(er)4317 29710 y(consumed)344
b(in)h(the)f(p)36 b(o)-36 b(w)g(er)345 b(supply)g(units)f(and)g(in)h
(air-conditioning.)549 b(W)-108 b(e)345 b(m)-36 b(ust,)362
b(there-)4317 31315 y(fore,)f(also)342 b(comp)36 b(ensate)341
b(for)h(those,)360 b(to)341 b(obtain)g(the)g(o)-36 b(v)g(erall)342
b(site)g(p)36 b(o)-36 b(w)g(er)341 b(consumption.)4317
32920 y(P)-36 b(o)g(w)g(er)393 b(supply)e(unit)h(load)h(is)g
(negligible)g(compared)f(to)h(air-conditioning,)401 b(whic)-36
b(h)392 b(has)4317 34525 y(a)382 b(t)-36 b(ypical)383
b(p)36 b(o)-36 b(w)g(er)382 b(consumption)f(of)h(1)g(kW)h([11)q(].)561
b(W)-108 b(e)382 b(applied)g(this)f(scaling)i(and)e(addi-)4317
36130 y(tion)421 b(to)g(the)f(minim)-36 b(um)420 b(rep)36
b(orted)421 b(DC)g(p)36 b(o)-36 b(w)g(er)421 b(consumption)f(for)h(the)
g(GSM)f(900)h(site)4317 37735 y(to)345 b(obtain)g(an)g(appro)-36
b(ximate)345 b(v)-72 b(alue)346 b(of)f Fj(P)24422 37934
y Fp(1)25294 37735 y Fq(for)g(a)g(site)g(comparable)h(to)f(ours.)548
b(Similarly)-108 b(,)4317 39340 y(w)-36 b(e)348 b(used)f(the)g(maxim)
-36 b(um)348 b(rep)36 b(orted)346 b(DC)j(p)36 b(o)-36
b(w)g(er)347 b(consumption)g(and)g(applied)g(the)g(scal-)4317
40945 y(ing)536 b(and)f(A)-36 b(C)535 b(load)h(correction)g(to)g(appro)
-36 b(ximate)536 b(the)f(v)-72 b(alue)536 b(of)g Fj(P)38257
41144 y Fp(2)38783 40945 y Fq(.)884 b(F)-108 b(urthermore,)4317
42550 y(the)438 b(authors)f(measured)h(a)g(drop)g(of)h(50)p
Fj(W)619 b Fq(in)438 b(p)36 b(o)-36 b(w)g(er)438 b(consumption)f(when)h
(a)h(TRX)f(is)4317 44155 y(disable,)c(whic)-36 b(h)434
b(giv)-36 b(es)434 b(us)f(the)g(v)-72 b(alue)434 b(of)h
Fj(\015)505 b Fq(as)434 b(listed)g(in)f(table)h(1.)4317
47089 y Fk(4.1.3.)663 b(Mo)-66 b(del)465 b(3)6268 48805
y Fq(Using)560 b(the)f(same)g(metho)36 b(d)559 b(as)h(for)f(mo)36
b(del)560 b(2)g(in)f(4.1.2,)593 b(w)-36 b(e)559 b(deriv)-36
b(ed)559 b(the)g(v)-72 b(alues)4317 50410 y(for)436 b
Fj(P)7144 50609 y Fp(1)8106 50410 y Fq(and)f Fj(P)11475
50609 y Fp(2)12436 50410 y Fq(using)h(the)e(measuremen)-36
b(ts)435 b(for)h(the)f(GSM)f(1800)j(BTS)e(in)h([5].)585
b(As)435 b(for)4317 52015 y(the)461 b(v)-72 b(alue)461
b(of)h Fj(\015)72 b Fq(,)468 b(the)460 b(pap)36 b(er)461
b(rep)36 b(orted)460 b(a)h(100)p Fj(W)643 b Fq(cut)460
b(in)h(p)36 b(o)-36 b(w)g(er)461 b(consumption)f(when)4317
53620 y(deactiv)-72 b(ating)407 b(a)f(single)h(TRX.)f(The)g(parameter)g
(v)-72 b(alues)407 b(for)f(this)g(mo)36 b(del)406 b(are)g(giv)-36
b(en)407 b(in)4317 55225 y(T)-108 b(able)434 b(1)4317
58823 y Fl(5.)748 b(Results)6268 61424 y Fq(The)289 b(follo)-36
b(wing)291 b(results)e(w)-36 b(ere)289 b(obtained)g(through)f(sim)-36
b(ulation)289 b(exp)36 b(erimen)-36 b(ts)289 b(driv)-36
b(en)4317 63029 y(b)g(y)401 b(real)g(tra\016c)g(traces)f(and)h(deplo)
-36 b(ymen)g(t)400 b(geograph)-36 b(y)-108 b(.)567 b(The)401
b(exp)36 b(erimen)-36 b(ts)401 b(p)36 b(erform)400 b(a)4317
64634 y(com)-36 b(bination)483 b(of)g(activ)-72 b(ation)483
b(of)g(BTS)g(p)36 b(o)-36 b(w)g(er-sa)g(ving)483 b(mo)36
b(de)482 b(on)g(BTSs)h(alongwith)g(a)25253 70015 y(12)p
eop end
%%Page: 13 13
TeXDict begin 13 12 bop 8734 6022 34338 45 v 8712 7627
45 1606 v 12969 7145 a Fq(Energy)434 b(sa)-36 b(ving)p
25192 7627 V 4900 w(Mo)36 b(del)434 b(1)p 31145 7627
V 1329 w(Mo)36 b(del)434 b(2)p 37097 7627 V 1328 w(Mo)36
b(del)434 b(3)p 43050 7627 V 8734 7671 34338 45 v 8712
9276 45 1606 v 13894 8795 a(P)-36 b(ercen)g(tage)p 25192
9276 V 6438 w(4.73\045)p 31145 9276 V 2558 w(5.43\045)p
37097 9276 V 2232 w(12.89\045)p 43050 9276 V 8734 9321
34338 45 v 8712 10926 45 1606 v 10888 10444 a(Daily)436
b(absolute)d(sa)-36 b(ving)p 25192 10926 V 3650 w(43.28)p
31145 10926 V 2666 w(109.68)p 37097 10926 V 2342 w(217.12)p
43050 10926 V 8712 12531 V 10314 12049 a(o)g(v)g(er)434
b(26)g(BTSs)g(\(in)f(kWh\))p 25192 12531 V 31145 12531
V 37097 12531 V 43050 12531 V 8734 12575 34338 45 v 8712
14180 45 1606 v 9510 13699 a(Coun)-36 b(try-wide)433
b(daily)i(sa)-36 b(ving)p 25192 14180 V 2596 w(51.6)p
31145 14180 V 2991 w(130.77)p 37097 14180 V 2342 w(258.87)p
43050 14180 V 8712 15785 V 9398 15304 a(o)g(v)g(er)434
b(31000)h(sites)f(\(in)g(MWh\))p 25192 15785 V 31145
15785 V 37097 15785 V 43050 15785 V 8734 15830 34338
45 v 11832 17816 a Fh(T)-92 b(able)370 b(2:)493 b(Energy)370
b(sa)-31 b(vings)370 b(b)-31 b(y)369 b(using)h(BTS)g(p)31
b(o)-31 b(w)g(er)369 b(sa)-31 b(vings)370 b(only)4317
21573 y Fq(p)36 b(erio)g(dic)469 b(up)36 b(date)467 b(of)j(serving)f
(BTS)f(for)h(eac)-36 b(h)468 b(activ)-36 b(e)470 b(call,)478
b(suc)-36 b(h)468 b(that)f(the)h(instan)-36 b(ta-)4317
23178 y(neous)433 b(energy)h(consumption)f(in)g(the)g(net)-36
b(w)g(ork)434 b(is)g(minimized.)6268 24784 y(First,)451
b(w)-36 b(e)449 b(consider)e(the)g(b)36 b(ene\014t)447
b(of)h(BTS)g(p)36 b(o)-36 b(w)g(er-sa)g(ving)448 b(alone,)453
b(resulting)447 b(from)4317 26389 y(tra\016c)380 b(div)-36
b(ersit)g(y)381 b(at)f(eac)-36 b(h)380 b(BTS)g(compared)f(to)i(running)
d(the)i(net)-36 b(w)g(ork)380 b(in)g(the)f(default)4317
27994 y(con\014guration.)749 b(The)490 b(p)36 b(ercen)-36
b(tage)490 b(reduction)g(in)g(energy)h(consumption)e(is)i(listed)g(in)
4317 29599 y(table)618 b(2.)1130 b(The)617 b(results)g(indicate)g(that)
g(a)h(sa)-36 b(ving)618 b(of)g(b)36 b(et)-36 b(w)g(een)617
b(4\045)h(and)f(12\045)h(can)4317 31204 y(b)36 b(e)554
b(ac)-36 b(hiev)g(ed)555 b(in)f(a)h(net)-36 b(w)g(ork)555
b(just)f(b)-36 b(y)554 b(activ)-72 b(ating)556 b(BTS)e(p)36
b(o)-36 b(w)g(er)554 b(sa)-36 b(vings.)942 b(W)-108 b(e)555
b(note)4317 32809 y(here)590 b(that)g(some)g(of)h(these)f(results)g
(are)g(in)g(agreemen)-36 b(t)590 b(with)g(Ericsson's)h(claim)g(of)4317
34414 y(sa)-36 b(ving)532 b(10-20\045)h(energy)e(b)-36
b(y)532 b(using)f(BTS)g(p)36 b(o)-36 b(w)g(er-sa)g(ving)532
b(on)g(German)-36 b(y's)531 b(V)-108 b(o)36 b(dafone)4317
36019 y(net)-36 b(w)g(ork)434 b([12)q(].)6268 37624 y(In)356
b(absolute)f(terms,)372 b(this)355 b(represen)-36 b(ts)355
b(a)h(cum)-36 b(ulativ)g(e)356 b(sa)-36 b(ving)356 b(of)h(b)36
b(et)-36 b(w)g(een)355 b(43)h(kWh)4317 39229 y(and)400
b(217)i(kWh)f(p)36 b(er)400 b(da)-36 b(y)401 b(on)g(26)g(BTSs.)567
b(No)-36 b(w,)409 b(consider)400 b(that)g(there)g(are)h(\014v)-36
b(e)401 b(cellular)4317 40835 y(o)36 b(eprators)454 b(in)f(P)-36
b(akistan:)618 b(Mobilink)454 b(with)f(more)g(than)f(8500)j(sites)e
([13)q(],)459 b(Ufone)454 b(with)4317 42440 y(more)645
b(than)f(8000)i(sites)g([14)q(],)698 b(Zong)645 b(with)g(more)g(than)f
(5500)i(sites)f([14)q(],)698 b(T)-108 b(elenor)4317 44045
y(with)551 b(more)g(than)e(7000)j(sites)f([15)q(])g(and)f(W)-108
b(arid)551 b(with)g(more)f(than)g(4500)i(sites)f([14)q(].)4317
45650 y(Ov)-36 b(erall,)570 b(there)542 b(w)-36 b(ere)542
b(more)g(than)g(31000)i(sites)e(in)g(P)-36 b(akistan)543
b(at)f(the)g(end)f(of)i(2011.)4317 47255 y(W)-108 b(e)423
b(extrap)36 b(olated)424 b(the)f(daily)h(energy)f(sa)-36
b(vings)424 b(n)-36 b(um)g(b)36 b(er)422 b(o)-36 b(v)g(er)423
b(26)h(BTSs)f(to)h(calculate)4317 48860 y(the)398 b(daily)i(energy)f
(sa)-36 b(vings)400 b(p)36 b(ossible)399 b(for)g(a)g(coun)-36
b(try)398 b(lik)-36 b(e)400 b(P)-36 b(akistan)399 b(with)g(o)-36
b(v)g(er)399 b(31000)4317 50465 y(BTSs)409 b(\(see)f(the)g(last)h(ro)
-36 b(w)409 b(of)g(table)f(2\).)570 b(The)409 b(results)f(indicate)g
(that)g(mere)h(activ)-72 b(ation)4317 52070 y(of)526
b(BTS)e(p)36 b(o)-36 b(w)g(er)525 b(sa)-36 b(ving)526
b(option)f(itself)g(can)g(sa)-36 b(v)g(e)525 b(quite)g(a)g(bit)g(of)g
(electrical)h(energy)-108 b(,)4317 53675 y(a)464 b(critical)h
(resource,)471 b(esp)36 b(ecially)466 b(in)e(a)g(dev)-36
b(eloping)464 b(coun)-36 b(try)-108 b(.)668 b(As)464
b(w)-36 b(e)464 b(shall)g(see)g(next,)4317 55280 y(greater)417
b(energy)g(sa)-36 b(vings)418 b(are)f(p)36 b(ossible)417
b(if)h(w)-36 b(e)417 b(couple)g(p)36 b(erio)g(dical)418
b(call)f(sh)-36 b(u\017ing)417 b(with)4317 56885 y(BTS)434
b(p)36 b(o)-36 b(w)g(er)433 b(sa)-36 b(vings)435 b(in)e(the)g(net)-36
b(w)g(ork.)6268 58491 y(If)580 b(p)36 b(erio)g(dic)579
b(optimization)g(of)h(call)g(placemen)-36 b(t)579 b(is)g(coupled)f
(with)h(BTS)g(p)36 b(o)-36 b(w)g(er-)4317 60096 y(sa)g(ving,)538
b(the)516 b(energy)g(sa)-36 b(ving)517 b(impro)-36 b(v)g(es,)538
b(as)516 b(sho)-36 b(wn)516 b(in)g(Fig.)h(4.)826 b(F)-108
b(or)516 b(all)h(three)f(BTS)4317 61701 y(mo)36 b(dels,)629
b(w)-36 b(e)589 b(see)g(an)g(almost)h(linear)f(increase)g(in)g(p)36
b(o)-36 b(w)g(er)589 b(sa)-36 b(ving)590 b(as)g(the)e(duration)4317
63306 y(of)578 b(the)f(re-optimization)h(in)-36 b(terv)-72
b(al)578 b(is)g(decreased.)1010 b(Recall)578 b(that)f(the)g(three)g(mo)
36 b(dels)4317 64911 y(are)470 b(signi\014can)-36 b(tly)471
b(di\013eren)-36 b(t)469 b(in)h(terms)f(of)i(p)36 b(o)-36
b(w)g(er)470 b(consumption)f(\(see)h(T)-108 b(able)471
b(1\).)688 b(W)-108 b(e)4317 66516 y(can)405 b(not)g(directly)h(sa)-36
b(y)406 b(that)f(b)36 b(ecause)405 b(mo)36 b(del)406
b(3)f(BTS)h(o\013ers)f(the)g(highest)g(p)36 b(ercen)-36
b(tage)25253 70015 y(13)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 4317 21610 a @beginspecial 40
@llx 182 @lly 552 @urx 594 @ury 1748 @rwi @setspecial
%%BeginDocument: figures/percent.savings.powersaving.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.6.0.324 (R2008a). Operating System: Microsoft Windows XP.
%%Title: .\percent.savings.powersaving.eps
%%CreationDate: 09/26/2012  21:53:23
%%DocumentNeededFonts: Times-Roman
%%+ Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:    40   182   552   594
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    40   182   552   594
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 8.33333 def
portraitMode 0141 5100 csm

  193   147  4268  3434 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 4801 3601 PR
4.16667 w
0 2934 3720 0 0 -2934 624 3204 4 MP
PP
-3720 0 0 2934 3720 0 0 -2934 624 3204 5 MP stroke
2.77778 w
DO
SO
4.16667 w
0 sg
 624  270 mt 4344  270 L
 624 3204 mt 4344 3204 L
4344 3204 mt 4344  270 L
 624 3204 mt  624  270 L
 624 3204 mt 4344 3204 L
 624 3204 mt  624  270 L
 934 3204 mt  934 3166 L
 934  270 mt  934  307 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 166.667 FMSR

 893 3377 mt 
(5) s
1244 3204 mt 1244 3166 L
1244  270 mt 1244  307 L
1161 3377 mt 
(10) s
1554 3204 mt 1554 3166 L
1554  270 mt 1554  307 L
1471 3377 mt 
(15) s
1864 3204 mt 1864 3166 L
1864  270 mt 1864  307 L
1781 3377 mt 
(20) s
2174 3204 mt 2174 3166 L
2174  270 mt 2174  307 L
2091 3377 mt 
(25) s
2484 3204 mt 2484 3166 L
2484  270 mt 2484  307 L
2401 3377 mt 
(30) s
2794 3204 mt 2794 3166 L
2794  270 mt 2794  307 L
2711 3377 mt 
(35) s
3104 3204 mt 3104 3166 L
3104  270 mt 3104  307 L
3021 3377 mt 
(40) s
3414 3204 mt 3414 3166 L
3414  270 mt 3414  307 L
3331 3377 mt 
(45) s
3724 3204 mt 3724 3166 L
3724  270 mt 3724  307 L
3641 3377 mt 
(50) s
4034 3204 mt 4034 3166 L
4034  270 mt 4034  307 L
3951 3377 mt 
(55) s
4344 3204 mt 4344 3166 L
4344  270 mt 4344  307 L
4261 3377 mt 
(60) s
 624 3204 mt  661 3204 L
4344 3204 mt 4306 3204 L
 517 3263 mt 
(0) s
 624 2617 mt  661 2617 L
4344 2617 mt 4306 2617 L
 517 2676 mt 
(5) s
 624 2030 mt  661 2030 L
4344 2030 mt 4306 2030 L
 434 2089 mt 
(10) s
 624 1443 mt  661 1443 L
4344 1443 mt 4306 1443 L
 434 1502 mt 
(15) s
 624  856 mt  661  856 L
4344  856 mt 4306  856 L
 434  915 mt 
(20) s
 624  270 mt  661  270 L
4344  270 mt 4306  270 L
 434  329 mt 
(25) s
 624  270 mt 4344  270 L
 624 3204 mt 4344 3204 L
4344 3204 mt 4344  270 L
 624 3204 mt  624  270 L
gs 624 270 3721 2935 MR c np
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1860 -161 620 -55 310 -31 186 -16 124 -22 248 -23 62 -12 62 -8 
62 -6 62 -4 62 -20 686 2646 12 MP stroke
gr

c8
gs 635 2237 3761 461 MR c np
0 j
-29 50 -29 -50 58 0 657 2663 4 MP
DP
-29 50 -29 -50 58 0 719 2643 4 MP
DP
-29 50 -29 -50 58 0 781 2639 4 MP
DP
-29 50 -29 -50 58 0 843 2633 4 MP
DP
-29 50 -29 -50 58 0 905 2625 4 MP
DP
-29 50 -29 -50 58 0 967 2613 4 MP
DP
-29 50 -29 -50 58 0 1215 2590 4 MP
DP
-29 50 -29 -50 58 0 1339 2568 4 MP
DP
-29 50 -29 -50 58 0 1525 2552 4 MP
DP
-29 50 -29 -50 58 0 1835 2521 4 MP
DP
-29 50 -29 -50 58 0 2455 2466 4 MP
DP
-29 50 -29 -50 58 0 4315 2305 4 MP
DP
gr

gs 624 270 3721 2935 MR c np
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
1860 -220 620 -75 310 -46 186 -22 124 -25 248 -43 62 -10 62 -7 
62 -17 62 -9 62 -9 686 2560 12 MP stroke
gr

c9
gs 635 2026 3761 586 MR c np
0 j
0 -40 -40 0 0 40 40 0 666 2540 5 MP
DP
0 -40 -40 0 0 40 40 0 728 2531 5 MP
DP
0 -40 -40 0 0 40 40 0 790 2522 5 MP
DP
0 -40 -40 0 0 40 40 0 852 2505 5 MP
DP
0 -40 -40 0 0 40 40 0 914 2498 5 MP
DP
0 -40 -40 0 0 40 40 0 976 2488 5 MP
DP
0 -40 -40 0 0 40 40 0 1224 2445 5 MP
DP
0 -40 -40 0 0 40 40 0 1348 2420 5 MP
DP
0 -40 -40 0 0 40 40 0 1534 2398 5 MP
DP
0 -40 -40 0 0 40 40 0 1844 2352 5 MP
DP
0 -40 -40 0 0 40 40 0 2464 2277 5 MP
DP
0 -40 -40 0 0 40 40 0 4324 2057 5 MP
DP
gr

gs 624 270 3721 2935 MR c np
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
1860 -443 620 -153 310 -81 186 -69 124 -11 248 -109 62 -21 62 -24 
62 -9 62 -29 62 -26 686 1669 12 MP stroke
gr

c10
gs 635 643 3761 1078 MR c np
16 W
686 1669 PD
16 W
748 1643 PD
16 W
810 1614 PD
16 W
872 1605 PD
16 W
934 1581 PD
16 W
996 1560 PD
16 W
1244 1451 PD
16 W
1368 1440 PD
16 W
1554 1371 PD
16 W
1864 1290 PD
16 W
2484 1137 PD
16 W
4344 694 PD
gr

gs 624 270 3721 2935 MR c np
gr

0 sg
1175 3528 mt 
(Number of re-optimizations in an hour) s
 359 2612 mt  -90 rotate
(Daily Energy Savings \(%\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 83.3333 FMSR

 612 3235 mt 
( ) s
4333  300 mt 
( ) s
1 sg
0 603 912 0 0 -603 3391 915 4 MP
PP
-912 0 0 603 912 0 0 -603 3391 915 5 MP stroke
2.77778 w
DO
SO
4.16667 w
0 sg
3391  312 mt 4303  312 L
3391  915 mt 4303  915 L
4303  915 mt 4303  312 L
3391  915 mt 3391  312 L
3391  915 mt 4303  915 L
3391  915 mt 3391  312 L
3391  312 mt 4303  312 L
3391  915 mt 4303  915 L
4303  915 mt 4303  312 L
3391  915 mt 3391  312 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 166.667 FMSR

3705  479 mt 
(Model 1) s
gs 3391 312 913 604 MR c np
c8
241 0 3439 421 2 MP stroke
gs 3509 370 103 103 MR c np
0 j
-29 50 -29 -50 58 0 3531 438 4 MP
DP
gr

gr

c8
0 sg
3705  671 mt 
(Model 2) s
gs 3391 312 913 604 MR c np
c9
241 0 3439 613 2 MP stroke
gs 3509 562 103 103 MR c np
0 j
0 -40 -40 0 0 40 40 0 3540 593 5 MP
DP
gr

gr

c9
0 sg
3705  863 mt 
(Model 3) s
gs 3391 312 913 604 MR c np
c10
241 0 3439 805 2 MP stroke
gs 3509 754 103 103 MR c np
16 W
3560 805 PD
gr

gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 6946 24046 a Fh(Figure)369 b(4:)493 b(P)-31
b(ercen)g(t)370 b(reduction)g(in)f(energy)h(consumption)g(vs)f
(re-optimization)k(in)-31 b(terv)-61 b(al)4317 40922
y @beginspecial 30 @llx 182 @lly 552 @urx 594 @ury 1748
@rwi @setspecial
%%BeginDocument: figures/e.savings.powersaving.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.6.0.324 (R2008a). Operating System: Microsoft Windows XP.
%%Title: .\e.savings.powersaving.eps
%%CreationDate: 09/26/2012  21:53:24
%%DocumentNeededFonts: Times-Roman
%%+ Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:    30   182   552   594
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    30   182   552   594
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 8.33333 def
portraitMode 0141 5100 csm

  109   147  4352  3434 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 4801 3601 PR
4.16667 w
0 2934 3720 0 0 -2934 624 3204 4 MP
PP
-3720 0 0 2934 3720 0 0 -2934 624 3204 5 MP stroke
2.77778 w
DO
SO
4.16667 w
0 sg
 624  270 mt 4344  270 L
 624 3204 mt 4344 3204 L
4344 3204 mt 4344  270 L
 624 3204 mt  624  270 L
 624 3204 mt 4344 3204 L
 624 3204 mt  624  270 L
 934 3204 mt  934 3166 L
 934  270 mt  934  307 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 166.667 FMSR

 893 3377 mt 
(5) s
1244 3204 mt 1244 3166 L
1244  270 mt 1244  307 L
1161 3377 mt 
(10) s
1554 3204 mt 1554 3166 L
1554  270 mt 1554  307 L
1471 3377 mt 
(15) s
1864 3204 mt 1864 3166 L
1864  270 mt 1864  307 L
1781 3377 mt 
(20) s
2174 3204 mt 2174 3166 L
2174  270 mt 2174  307 L
2091 3377 mt 
(25) s
2484 3204 mt 2484 3166 L
2484  270 mt 2484  307 L
2401 3377 mt 
(30) s
2794 3204 mt 2794 3166 L
2794  270 mt 2794  307 L
2711 3377 mt 
(35) s
3104 3204 mt 3104 3166 L
3104  270 mt 3104  307 L
3021 3377 mt 
(40) s
3414 3204 mt 3414 3166 L
3414  270 mt 3414  307 L
3331 3377 mt 
(45) s
3724 3204 mt 3724 3166 L
3724  270 mt 3724  307 L
3641 3377 mt 
(50) s
4034 3204 mt 4034 3166 L
4034  270 mt 4034  307 L
3951 3377 mt 
(55) s
4344 3204 mt 4344 3166 L
4344  270 mt 4344  307 L
4261 3377 mt 
(60) s
 624 3204 mt  661 3204 L
4344 3204 mt 4306 3204 L
 517 3263 mt 
(0) s
 624 2837 mt  661 2837 L
4344 2837 mt 4306 2837 L
 434 2896 mt 
(50) s
 624 2470 mt  661 2470 L
4344 2470 mt 4306 2470 L
 350 2529 mt 
(100) s
 624 2103 mt  661 2103 L
4344 2103 mt 4306 2103 L
 350 2162 mt 
(150) s
 624 1737 mt  661 1737 L
4344 1737 mt 4306 1737 L
 350 1796 mt 
(200) s
 624 1370 mt  661 1370 L
4344 1370 mt 4306 1370 L
 350 1429 mt 
(250) s
 624 1003 mt  661 1003 L
4344 1003 mt 4306 1003 L
 350 1062 mt 
(300) s
 624  636 mt  661  636 L
4344  636 mt 4306  636 L
 350  695 mt 
(350) s
 624  270 mt  661  270 L
4344  270 mt 4306  270 L
 350  329 mt 
(400) s
 624  270 mt 4344  270 L
 624 3204 mt 4344 3204 L
4344 3204 mt 4344  270 L
 624 3204 mt  624  270 L
gs 624 270 3721 2935 MR c np
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1860 -92 620 -31 310 -18 186 -9 124 -12 248 -14 62 -7 62 -4 
62 -4 62 -2 62 -11 686 2884 12 MP stroke
gr

c8
gs 635 2629 3761 307 MR c np
0 j
-29 50 -29 -50 58 0 657 2901 4 MP
DP
-29 50 -29 -50 58 0 719 2890 4 MP
DP
-29 50 -29 -50 58 0 781 2888 4 MP
DP
-29 50 -29 -50 58 0 843 2884 4 MP
DP
-29 50 -29 -50 58 0 905 2880 4 MP
DP
-29 50 -29 -50 58 0 967 2873 4 MP
DP
-29 50 -29 -50 58 0 1215 2859 4 MP
DP
-29 50 -29 -50 58 0 1339 2847 4 MP
DP
-29 50 -29 -50 58 0 1525 2838 4 MP
DP
-29 50 -29 -50 58 0 1835 2820 4 MP
DP
-29 50 -29 -50 58 0 2455 2789 4 MP
DP
-29 50 -29 -50 58 0 4315 2697 4 MP
DP
gr

gs 624 270 3721 2935 MR c np
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
1860 -278 620 -94 310 -58 186 -28 124 -31 248 -55 62 -12 62 -10 
62 -21 62 -11 62 -11 686 2390 12 MP stroke
gr

c9
gs 635 1730 3761 712 MR c np
0 j
0 -40 -40 0 0 40 40 0 666 2370 5 MP
DP
0 -40 -40 0 0 40 40 0 728 2359 5 MP
DP
0 -40 -40 0 0 40 40 0 790 2348 5 MP
DP
0 -40 -40 0 0 40 40 0 852 2327 5 MP
DP
0 -40 -40 0 0 40 40 0 914 2317 5 MP
DP
0 -40 -40 0 0 40 40 0 976 2305 5 MP
DP
0 -40 -40 0 0 40 40 0 1224 2250 5 MP
DP
0 -40 -40 0 0 40 40 0 1348 2219 5 MP
DP
0 -40 -40 0 0 40 40 0 1534 2191 5 MP
DP
0 -40 -40 0 0 40 40 0 1844 2133 5 MP
DP
0 -40 -40 0 0 40 40 0 2464 2039 5 MP
DP
0 -40 -40 0 0 40 40 0 4324 1761 5 MP
DP
gr

gs 624 270 3721 2935 MR c np
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
1860 -466 620 -161 310 -85 186 -72 124 -12 248 -114 62 -22 62 -26 
62 -10 62 -29 62 -28 686 1589 12 MP stroke
gr

c10
gs 635 513 3761 1128 MR c np
16 W
686 1589 PD
16 W
748 1561 PD
16 W
810 1532 PD
16 W
872 1522 PD
16 W
934 1496 PD
16 W
996 1474 PD
16 W
1244 1360 PD
16 W
1368 1348 PD
16 W
1554 1276 PD
16 W
1864 1191 PD
16 W
2484 1030 PD
16 W
4344 564 PD
gr

gs 624 270 3721 2935 MR c np
gr

0 sg
1175 3528 mt 
(Number of re-optimizations in an hour) s
 275 2705 mt  -90 rotate
(Daily Energy Savings \(kWh\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 83.3333 FMSR

 612 3235 mt 
( ) s
4333  300 mt 
( ) s
1 sg
0 603 912 0 0 -603 3391 915 4 MP
PP
-912 0 0 603 912 0 0 -603 3391 915 5 MP stroke
2.77778 w
DO
SO
4.16667 w
0 sg
3391  312 mt 4303  312 L
3391  915 mt 4303  915 L
4303  915 mt 4303  312 L
3391  915 mt 3391  312 L
3391  915 mt 4303  915 L
3391  915 mt 3391  312 L
3391  312 mt 4303  312 L
3391  915 mt 4303  915 L
4303  915 mt 4303  312 L
3391  915 mt 3391  312 L
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 166.667 FMSR

3705  479 mt 
(Model 1) s
gs 3391 312 913 604 MR c np
c8
241 0 3439 421 2 MP stroke
gs 3509 370 103 103 MR c np
0 j
-29 50 -29 -50 58 0 3531 438 4 MP
DP
gr

gr

c8
0 sg
3705  671 mt 
(Model 2) s
gs 3391 312 913 604 MR c np
c9
241 0 3439 613 2 MP stroke
gs 3509 562 103 103 MR c np
0 j
0 -40 -40 0 0 40 40 0 3540 593 5 MP
DP
gr

gr

c9
0 sg
3705  863 mt 
(Model 3) s
gs 3391 312 913 604 MR c np
c10
241 0 3439 805 2 MP stroke
gs 3509 754 103 103 MR c np
16 W
3560 805 PD
gr

gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 8763 43358 a(Figure)369 b(5:)493 b(Reduction)371
b(in)e(energy)g(consumption)i(vs)e(re-optimization)k(in)-31
b(terv)-61 b(al)4317 47115 y Fq(reduction)433 b(in)g(energy)h
(consumption,)f(it)h(also)g(sa)-36 b(v)g(es)435 b(the)e(most)g(energy)h
(\(in)f(kWh\).)6268 48720 y(T)-108 b(o)360 b Fk(c)-66
b(omp)g(ar)g(e)457 b Fq(the)359 b(three)f(BTS)i(mo)36
b(dels)359 b(in)h(terms)f(of)h(energy)f(sa)-36 b(ving)361
b(p)36 b(oten)-36 b(tial,)374 b(w)-36 b(e)4317 50325
y(also)381 b(presen)-36 b(t)378 b(the)i(absolute)f(reduction)g(in)h
(energy)g(consumption)f(for)h(the)f(three)h(BTS)4317
51930 y(mo)36 b(dels)462 b(in)f(Fig.)i(5.)662 b(W)-108
b(e)462 b(see)g(the)f(same)h(linear)g(trend)e(alongwith)j(the)e(same)h
(relativ)-36 b(e)4317 53535 y(order)433 b(of)i(the)e(three)g(mo)36
b(dels)433 b(in)h(terms)f(of)h(amoun)-36 b(t)433 b(of)i(sa)-36
b(v)g(ed)434 b(energy)-108 b(,)433 b(as)h(in)g(Fig.)g(4.)6268
55141 y(Re-optimizing)463 b(at)g(an)f(in)-36 b(terv)-72
b(al)463 b(less)g(than)f(the)g(mean)g(call)h(duration)f(should)g(of-)
4317 56746 y(fer)483 b(greater)g(sa)-36 b(vings)483 b(than)f(a)h(less)g
(frequen)-36 b(t)482 b(re-optimization,)496 b(b)36 b(ecause)482
b(the)g(former)4317 58351 y(regime)601 b(has)g(the)f(opp)36
b(ortunit)-36 b(y)600 b(to)h(optimize)g(more)g(b)-36
b(y)600 b(handing)g(o\013)h(most)g(of)g(the)4317 59956
y(calls.)779 b(This)500 b(is)g(con\014rmed)f(in)h(our)g(results.)777
b(F)-108 b(or)500 b(instance,)517 b(for)500 b(mo)36 b(del)500
b(1)h(BTS,)f(the)4317 61561 y(gain)537 b(in)e(energy)h(sa)-36
b(vings)537 b(going)g(from)f(a)g(60)h(min)-36 b(utes)535
b(in)-36 b(ter-optimization)535 b(in)-36 b(terv)-72 b(al)4317
63166 y(to)446 b(30)g(min)-36 b(utes)444 b(gains)i(an)f(energy)h(sa)-36
b(ving)446 b(of)g(only)g(0.0506)i(kWh)d(p)36 b(er)445
b(min)-36 b(ute,)448 b(while)4317 64771 y(decreasing)464
b(the)f(in)-36 b(ter-optimization)463 b(in)-36 b(terv)-72
b(al)464 b(from)g(2)g(min)-36 b(utes)463 b(to)g(1)h(min)-36
b(ute)463 b(gains)4317 66376 y(12.5421)436 b(kWh.)25253
70015 y(14)p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 6268 7306 a Fq(Let)437 b(us)g(no)-36
b(w)437 b(in)-36 b(terpret)436 b(what)h(these)g(results)g(mean)g(ph)-36
b(ysically)439 b(in)e(terms)g(of)h(eco-)4317 8911 y(logical)614
b(impact.)1112 b(If)613 b(w)-36 b(e)612 b(extrap)36 b(olate)612
b(our)g(results,)656 b(the)611 b(total)h(energy)g(sa)-36
b(ving)613 b(for)4317 10516 y(P)-36 b(akistan)570 b(are)g(pro)72
b(jected)569 b(to)h(b)36 b(e)569 b(60)p Fj(:)p Fq(72)i(MWh,)603
b(156)p Fj(:)p Fq(84)572 b(MWh)d(and)g(301)p Fj(:)p Fq(61)i(MWh)4317
12121 y(daily)-108 b(,)646 b(resp)36 b(ectiv)-36 b(ely)-108
b(,)645 b(according)603 b(to)g(the)e(three)h(BTS)h(mo)36
b(dels.)1085 b(These)602 b(sa)-36 b(vings)604 b(in)4317
13726 y(energy)531 b(are)f(signi\014can)-36 b(t,)555
b(esp)36 b(ecially)532 b(for)e(small)i(and)d(dev)-36
b(eloping)531 b(coun)-36 b(tries.)868 b(Since)4317 15331
y(net)-36 b(w)g(ork)316 b(deplo)-36 b(ymen)g(ts)316 b(and)f(tra\016c)h
(patterns)f(are)h(similar)h(in)f(di\013eren)-36 b(t)315
b(coun)-36 b(tries,)339 b(w)-36 b(e)4317 16936 y(also)361
b(exp)36 b(ect)361 b(that)f(similar)h(sa)-36 b(vings)361
b(should)f(b)36 b(e)360 b(ac)-36 b(hiev)-72 b(able)361
b(in)g(man)-36 b(y)360 b(other)g(coun)-36 b(tries)4317
18542 y(as)434 b(w)-36 b(ell.)6268 20147 y(In)528 b(the)f(ab)36
b(o)-36 b(v)g(e)528 b(extrap)36 b(olation,)553 b(w)-36
b(e)528 b(ha)-36 b(v)g(e)528 b(assumed)f(that)g(the)h(same)g(amoun)-36
b(t)527 b(of)4317 21752 y(energy)462 b(sa)-36 b(ving)463
b(w)-36 b(ould)462 b(b)36 b(e)461 b(applicable)h(in)g(rural)g(as)g(w)
-36 b(ell)462 b(as)g(urban)f(settings.)663 b(While)4317
23357 y(this)402 b(ma)-36 b(y)402 b(not)g(necessarily)h(b)36
b(e)402 b(true)f(b)36 b(ecause)402 b(the)f(deplo)-36
b(ymen)g(ts)402 b(are)g(sparse)g(in)g(rural)4317 24962
y(settings,)392 b(resulting)381 b(in)g(reduced)f(p)36
b(oten)-36 b(tial)382 b(to)f(sa)-36 b(v)g(e)382 b(energy)f(b)-36
b(y)382 b(means)f(of)h(call)g(hand-)4317 26567 y(o\013)457
b(to)g(neigh)-36 b(b)36 b(oring)456 b(sites,)463 b(the)456
b(p)36 b(oten)-36 b(tial)457 b(to)f(sa)-36 b(v)g(e)458
b(energy)f(merely)g(b)-36 b(y)456 b(BTS)h(p)36 b(o)-36
b(w)g(er-)4317 28172 y(sa)g(ving)461 b(should)f(b)36
b(e)460 b(higher)g(in)h(a)f(rural)h(setting)f(b)36 b(ecause)460
b(tra\016c)h(loads)g(are)f(t)-36 b(ypically)4317 29777
y(lo)g(w)g(er.)4317 33375 y Fl(6.)748 b(Conclusions)6268
35976 y Fq(BTSs)448 b(accoun)-36 b(t)447 b(for)h(most)f(of)i(a)f
(cellular)g(net)-36 b(w)g(ork's)448 b(energy)g(consumption.)619
b(Mo-)4317 37581 y(tiv)-72 b(ated)540 b(b)-36 b(y)540
b(the)f(non)h(load-prop)36 b(ortionalit)-36 b(y)540 b(of)h(BTS)f
(energy)g(consumption,)566 b(prior)4317 39186 y(w)-36
b(ork)432 b(prop)36 b(osed)431 b(sh)-36 b(utting)431
b(do)-36 b(wn)431 b(some)h(BTSs)g(when)f(tra\016c)g(is)h(lo)-36
b(w.)579 b(Ho)-36 b(w)g(ev)g(er,)433 b(net-)4317 40791
y(w)-36 b(ork)435 b(op)36 b(erators)433 b(are)h(reluctan)-36
b(t)433 b(to)h(do)f(so)h(for)g(a)g(v)-72 b(ariet)-36
b(y)435 b(of)f(reasons.)6268 42397 y(T)-108 b(o)502 b(reduce)e(energy)h
(consumption,)518 b(w)-36 b(e)501 b(prop)36 b(ose)501
b(using)g(a)h(commonly)g(a)-36 b(v)-72 b(ailable)4317
44002 y(and)485 b(used)f(feature)i(called)g(BTS)f(p)36
b(o)-36 b(w)g(er)485 b(sa)-36 b(vings)486 b(that)f(deactiv)-72
b(ates)486 b(some)g(TRXs)f(at)4317 45607 y(BTSs)362 b(that)f(ha)-36
b(v)g(e)362 b(lo)-36 b(w)362 b(tra\016c.)555 b(F)-108
b(urthermore,)374 b(calls)363 b(ma)-36 b(y)362 b(b)36
b(e)361 b(handed-o\013)f(from)j(BTSs)4317 47212 y(with)338
b(higher)g(load)h(to)f(neigh)-36 b(b)36 b(oring)338 b(ones)g(with)g
(ligh)-36 b(ter)339 b(load)f(to)h(increase)f(the)g(b)36
b(ene\014ts)4317 48817 y(of)434 b(BTS)g(p)36 b(o)-36
b(w)g(er-sa)g(ving.)6268 50422 y(Using)425 b(real)g(net)-36
b(w)g(ork)425 b(top)36 b(ology)427 b(and)d(tra\016c)h(traces)f(in)h(a)g
(sim)-36 b(ulation)425 b(study)f(,)j(w)-36 b(e)4317 52027
y(found)421 b(that)g(merely)h(using)f(BTS)h(p)36 b(o)-36
b(w)g(er)421 b(sa)-36 b(ving)422 b(in)f(an)h(urban)e(setting)h(can)h
(result)f(in)4317 53632 y(considerable)536 b(energy)f(sa)-36
b(vings.)885 b(Moreo)-36 b(v)g(er,)562 b(our)535 b(results)g(also)i
(indicate)e(that)g(p)36 b(eri-)4317 55237 y(o)g(dic)490
b(call-sh)-36 b(u\017ing)488 b(b)36 b(et)-36 b(w)g(een)489
b(BTSs)g(can)g(further)f(reduce)g(energy)i(consumption)e(in)4317
56842 y(existing)435 b(large)f(GSM)f(net)-36 b(w)g(orks.)4317
60440 y Fl(References)4967 63041 y Fq([1])652 b(E.)599
b(Oh,)639 b(B.)599 b(Krishnamac)-36 b(hari,)640 b(X.)599
b(Liu,)640 b(Z.)599 b(Niu,)640 b(T)-108 b(o)-36 b(w)g(ard)599
b(dynamic)g(energy-)6991 64646 y(e\016cien)-36 b(t)414
b(op)36 b(eration)416 b(of)f(cellular)h(net)-36 b(w)g(ork)415
b(infrastructure,)j(in:)569 b(IEEE)415 b(Comm)-36 b(u-)6991
66252 y(nications)434 b(Magazine,)g(2011.)25253 70015
y(15)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 4967 7306 a Fq([2])652 b(J.)349
b(T.)h(Louhi,)366 b(Energy)349 b(e\016ciency)g(of)h(mo)36
b(dern)348 b(cellular)i(base)f(stations,)367 b(in:)536
b(IEEE)6991 8911 y(INTELEC)434 b('07,)h(IEEE,)f(New)g(Y)-108
b(ork,)434 b(NY,)g(USA,)f(2007,)i(pp.)e(475{476.)4967
11623 y([3])652 b(C.)542 b(P)-36 b(eng,)570 b(S.-B.)541
b(Lee,)570 b(S.)542 b(Lu,)568 b(H.)543 b(Luo,)569 b(H.)542
b(Li,)569 b(T)-108 b(ra\016c-driv)-36 b(en)542 b(p)36
b(o)-36 b(w)g(er)542 b(sa)-36 b(ving)6991 13228 y(in)503
b(op)36 b(erational)505 b(3g)f(cellular)g(net)-36 b(w)g(orks,)521
b(in:)719 b(A)-36 b(CM)503 b(MobiCom)h('11,)522 b(2011,)h(pp.)6991
14833 y(121{132.)4967 17545 y([4])652 b(H.)719 b(He,)791
b(J.)719 b(Sun,)790 b(Y.)719 b(W)-108 b(ang,)791 b(Q.)719
b(Liu,)790 b(J.)720 b(Y)-108 b(uan,)790 b(Cluster)719
b(analysis)h(based)6991 19150 y(switc)-36 b(hing-o\013)437
b(sc)-36 b(heme)438 b(of)h(base)f(stations)g(for)g(energy)g(sa)-36
b(ving,)440 b(Journal)e(of)h(Net-)6991 20756 y(w)-36
b(orks)434 b(7)g(\(3\))g(\(2012\))g(494{501.)4967 23468
y([5])652 b(J.)362 b(Lorincz,)376 b(T.)363 b(Garma,)376
b(G.)362 b(P)-36 b(etro)g(vic,)377 b(Measuremen)-36 b(ts)361
b(and)g(mo)36 b(delling)363 b(of)g(base)6991 25073 y(station)326
b(p)36 b(o)-36 b(w)g(er)327 b(consumption)e(under)g(real)i(tra\016c)f
(loads,)349 b(Sensors)325 b(12)i(\(4\))g(\(2012\))6991
26678 y(4281{4310.)4967 29390 y([6])652 b(N.)681 b(S.)g(Net)-36
b(w)g(orks,)744 b(Flexi)682 b(BSC)f(\(BSC14\),)743 b
Fa(http://bit.ly/QMD8O5)672 b Fq(\(June)6991 30995 y(2011\).)4967
33707 y([7])652 b(D.)452 b(T.)f(A.)h(Rezgui,)k(Krishnam)-36
b(urth)g(y)-108 b(,)454 b(P)-108 b(.)451 b(P)-36 b(ac)g(harin)g
(tanaku,)456 b(Dimming)c(cellular)6991 35312 y(net)-36
b(w)g(orks,)434 b(in:)578 b(IEEE)434 b(GLOBECOM'10,)f(2010.)4967
38024 y([8])652 b(O.)525 b(Blume,)549 b(Energy)526 b(sa)-36
b(vings)527 b(in)e(mobile)h(net)-36 b(w)g(orks)526 b(based)f(on)h
(adaptation)f(to)6991 39629 y(tra\016c)433 b(statistics,)i(Bell)f(Labs)
f(T)-108 b(ec)-36 b(hnical)434 b(Journal)g(15)g(\(2\))f(\(2010\))i
(77{94.)4967 42341 y([9])652 b(M.)327 b(Gerla,)348 b(J.)328
b(T.-C.)f(Tsai,)350 b(Multicluster,)e(mobile,)h(m)-36
b(ultimedia)327 b(radio)g(net)-36 b(w)g(ork,)6991 43946
y(Wireless)434 b(Net)-36 b(w)g(orks)434 b(1)g(\(3\))g(\(1995\))g
(255{265.)4317 46658 y([10])652 b(J.)485 b(Chabarek,)498
b(J.)486 b(Sommers,)497 b(P)-108 b(.)485 b(Barford,)498
b(C.)485 b(Estan,)498 b(D.)485 b(Tsiang,)499 b(S.)485
b(W)-108 b(righ)-36 b(t,)6991 48263 y(P)g(o)g(w)g(er)448
b(a)-36 b(w)g(areness)448 b(in)g(net)-36 b(w)g(ork)448
b(design)g(and)g(routing,)j(in:)607 b(In)448 b(Pro)36
b(c.)449 b(IEEE)f(IN-)6991 49869 y(F)-36 b(OCOM,)433
b(2008.)4317 52581 y([11])652 b(S.)953 b(Mbakw)-36 b(e,)1084
b(M.)954 b(T.)g(Iqbal,)1085 b(A.)953 b(Hsaio,)1085 b(Design)954
b(of)g(a)g(1.5kw)h(h)-36 b(ybrid)6991 54186 y(wind/photo)g(v)g(oltiac)
498 b(p)36 b(o)-36 b(w)g(er)498 b(system)g(for)f(a)h(telecoms)g(base)g
(station)f(in)h(remote)6991 55791 y(lo)36 b(cation)434
b(of)h(b)36 b(enin)433 b(cit)-36 b(y)434 b(nigeria,)g(in:)579
b(IEEE)433 b(NECEC,)i(2011.)4317 58503 y([12])652 b(Ericsson,)747
b(V)-108 b(o)36 b(dafone)685 b(German)-36 b(y)683 b(\014rst)h(to)g
(launc)-36 b(h)683 b(Ericsson's)i(p)36 b(o)-36 b(w)g(er-sa)g(ving)6991
60108 y(feature)578 b(to)h(reduce)e(energy)i(consumption)e(and)h(cut)f
Fj(C)95 b(O)36694 60307 y Fp(2)37799 60108 y Fq(emissions,)615
b Fa(http:)6991 61713 y(//bit.ly/Sls1v1)427 b Fq(\(Decem)-36
b(b)36 b(er)433 b(2007\).)4317 64425 y([13])652 b(Mobilink,)1263
b(Mobilink)1097 b(Net)-36 b(w)g(ork,)1263 b Fa(http://bit.ly/UWXYzB)
1087 b Fq(\(Septem)-36 b(b)36 b(er)6991 66030 y(2012\).)25253
70015 y(16)p eop end
%%Page: 17 17
TeXDict begin 17 16 bop 4317 7306 a Fq([14])652 b(P)-36
b(akistan)685 b(T)-108 b(elecomm)-36 b(unication)685
b(Authorit)-36 b(y)-108 b(,)747 b(P)-36 b(akistan)685
b(T)-108 b(elecomm)-36 b(unication)6991 8911 y(Authorit)g(y)-108
b(,)807 b(2011)734 b(Ann)-36 b(ual)732 b(Rep)36 b(ort,)808
b Fa(http://bit.ly/S8YtWS)724 b Fq(\(Decem)-36 b(b)36
b(er)6991 10516 y(2011\).)4317 13228 y([15])652 b(Wikip)36
b(edia,)1050 b(T)-108 b(elenor)925 b(P)-36 b(akistan)926
b(-)f(Wikip)36 b(edia,)1050 b Fa(http://bit.ly/R1Uyqm)6991
14833 y Fq(\(Septem)-36 b(b)36 b(er)432 b(2012\).)25253
70015 y(17)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
